// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ExceptionImplementation = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.FutureImpl = {"":
 ["_isComplete", "_lib0_value?", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw(t1);
  return this._lib0_value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw(this._exception);
},
 handleException$1: function(onException) {
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    var t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function() {
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (var t1 = $.iterator(this._exceptionHandlers); t1.hasNext$0() === true;) {
        var handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.hasNext$0() === true;) {
        var listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw(this._exception);
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.hasNext$0() === true;) {
      var listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._lib0_value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$.CompleterImpl = {"":
 ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$.HashMapImplementation = {"":
 ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC0);
  var t1 = $.hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1, 0, 0);
  var hash = (t1 & this._keys.length - 1) >>> 0;
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC13 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(2, numberOfProbes0, key, insertionIndex, hash);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var key = env0;
      t1 = env1;
      break;
    case 2:
      numberOfProbes0 = env0;
      key = env1;
      insertionIndex = env2;
      hash = env3;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.CTC0);
      var t1 = $.hashCode(key);
    case 1:
      state0 = 0;
      var hash = $.and(t1, this._keys.length - 1);
      var numberOfProbes = 1;
      var insertionIndex = -1;
    case 2:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
              if (hash !== (hash | 0))
                throw $.iae(hash);
              if (hash < 0 || hash >= t1.length)
                throw $.ioore(hash);
              var existingKey = t1[hash];
              if (existingKey == null) {
                if (insertionIndex < 0)
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if (insertionIndex < 0 && $.CTC13 === existingKey)
                insertionIndex = hash;
              var numberOfProbes0 = numberOfProbes + 1;
              hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
            case 2:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC0);
  var hash = $.and($.hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  var capacity = this._keys.length;
  if (typeof newNumberOfEntries !== 'number')
    throw $.iae(newNumberOfEntries);
  var numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  var t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity = this._keys.length;
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  var oldKeys = this._keys;
  var oldValues = this._values;
  this._keys = $.ListImplementation_List(newCapacity);
  this._values = $.ListImplementation_List(newCapacity);
  for (var i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    var key = oldKeys[i];
    if (key == null || key === $.CTC13)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    var value = oldValues[i];
    var newIndex = this._probeForAdding$1(key);
    var t1 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = key;
    t1 = this._values;
    if (newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  var t1 = this._keys;
  var length$ = t1.length;
  for (var t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  this._ensureCapacity$0();
  var index = this._probeForAdding$1(key);
  var t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC13)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  var t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    var value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC13;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 isEmpty$0: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$ = this._keys.length;
  for (var i = 0; i < length$; ++i) {
    var t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    var key = t1[i];
    if (!(key == null) && !(key === $.CTC13)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_10 = 0;
  this.forEach$1(new $.HashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $.HashMapImplementation_getValues__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 HashMapImplementation$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $.HashMapImplementation__computeLoadLimit(8);
  this._keys = $.ListImplementation_List(8);
  this._values = $.ListImplementation_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":
 [],
 "super": "Object"
};

$$.KeyValuePair = {"":
 ["key?", "value="],
 "super": "Object"
};

$$.LinkedHashMapImplementation = {"":
 ["_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    this._map.operator$index$1(key).get$element().set$value(value);
  else {
    this._list.addLast$1($.KeyValuePair$(key, value));
    this._map.operator$indexSet$2(key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = this._map.operator$index$1(key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_10 = 0;
  this._list.forEach$1(new $.LinkedHashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_1 = 0;
  this._list.forEach$1(new $.LinkedHashMapImplementation_getValues__(list, t1));
  return list;
},
 forEach$1: function(f) {
  this._list.forEach$1(new $.LinkedHashMapImplementation_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 clear$0: function() {
  this._map.clear$0();
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 LinkedHashMapImplementation$0: function() {
  this._map = $.HashMapImplementation$();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.DoubleLinkedQueueEntry = {"":
 ["_previous!", "_next=", "_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 append$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this, this._next);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":
 ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.CTC14);
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.CTC14);
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":
 ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addFirst$1: function(value) {
  this._sentinel.append$1(value);
},
 add$1: function(value) {
  this.addLast$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection); t1.hasNext$0() === true;)
    this.add$1(t1.next$0());
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 last$0: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 isEmpty$0: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
    entry = nextEntry;
  }
},
 filter$1: function(f) {
  var other = $.Queue_Queue();
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      $.addLast(other, entry.get$_element());
    entry = nextEntry;
  }
  return other;
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":
 ["_sentinel", "_currentEntry"],
 "super": "Object",
 hasNext$0: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 get$next: function() { return new $.BoundClosure0(this, 'next$0'); },
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.JSSyntaxRegExp = {"":
 ["_lib0_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  var matchStart = $.regExpMatchStart(m);
  var t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$.StopwatchImplementation = {"":
 ["_lib0_start", "_stop"],
 "super": "Object",
 start$0: function() {
  if (this._lib0_start == null)
    this._lib0_start = $.Primitives_dateNow();
  else {
    if (this._stop == null)
      return;
    var t1 = $.Primitives_dateNow();
    var t2 = $.sub(this._stop, this._lib0_start);
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    this._lib0_start = t1 - t2;
    this._stop = null;
  }
},
 reset$0: function() {
  if (this._lib0_start == null)
    return;
  this._lib0_start = $.Primitives_dateNow();
  if (!(this._stop == null))
    this._stop = this._lib0_start;
},
 elapsed$0: function() {
  var t1 = this._lib0_start;
  if (t1 == null)
    return 0;
  var t2 = this._stop;
  if (t2 == null) {
    t1 = $.Primitives_dateNow();
    t2 = this._lib0_start;
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    t2 = t1 - t2;
    t1 = t2;
  } else
    t1 = $.sub(t2, t1);
  return t1;
},
 elapsedInUs$0: function() {
  return $.tdiv($.mul(this.elapsed$0(), 1000000), this.frequency$0());
},
 frequency$0: function() {
  return 1000;
}
};

$$.StringBufferImpl = {"":
 ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 isEmpty$0: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 addAll$1: function(objects) {
  for (var t1 = $.iterator(objects); t1.hasNext$0() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $.ListImplementation_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.StringImplementation_concatAll(this._buffer);
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$._MatchImplementation = {"":
 ["pattern", "str", "_lib0_start", "_end", "_groups"],
 "super": "Object",
 start$0: function() {
  return this._lib0_start;
},
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return this.group$1(index);
}
};

$$._AllMatchesIterable = {"":
 ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":
 ["_re", "_str", "_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  var next = this._next;
  this._next = null;
  return next;
},
 get$next: function() { return new $.BoundClosure0(this, 'next$0'); },
 hasNext$0: function() {
  if (this._done)
    return false;
  else if (!(this._next == null))
    return true;
  this._next = this._re.firstMatch$1(this._str);
  if (this._next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.ArgumentError = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.IllegalArgumentException = {"":
 ["message"],
 "super": "ArgumentError"
};

$$.NoSuchMethodError = {"":
 ["_receiver", "_functionName", "_arguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  for (var t1 = this._arguments, i = 0; i < t1.length; ++i) {
    if (i > 0)
      $.add$1(sb, ', ');
    if (i >= t1.length)
      throw $.ioore(i);
    $.add$1(sb, $.NoSuchMethodError_safeToString(t1[i]));
  }
  t1 = this._existingArgumentNames;
  if (t1 == null)
    return 'NoSuchMethodError : method not found: \'' + $.S(this._functionName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(sb) + ']';
  else {
    var actualParameters = $.toString(sb);
    sb = $.StringBuffer_StringBuffer('');
    for (i = 0; $.ltB(i, $.get$length(t1)); ++i) {
      if (i > 0)
        $.add$1(sb, ', ');
      $.add$1(sb, $.index(t1, i));
    }
    var formalParameters = $.toString(sb);
    t1 = this._functionName;
    return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
  }
}
};

$$.IndexOutOfRangeException = {"":
 ["_value?"],
 "super": "Object",
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.S(this._value);
},
 is$Exception: true
};

$$.IllegalAccessException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Attempt to modify an immutable object';
},
 is$Exception: true
};

$$.ObjectNotClosureException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Object is not closure';
},
 is$Exception: true
};

$$.StackOverflowException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
},
 is$Exception: true
};

$$.FormatException = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + this.message;
},
 is$Exception: true
};

$$.NullPointerException = {"":
 ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.NoMoreElementsException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'NoMoreElementsException';
},
 is$Exception: true
};

$$.EmptyQueueException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'EmptyQueueException';
},
 is$Exception: true
};

$$.UnsupportedOperationException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  return 'UnsupportedOperationException: ' + this._message;
},
 is$Exception: true
};

$$.NotImplementedException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._message;
  return !(t1 == null) ? 'NotImplementedException: ' + $.S(t1) : 'NotImplementedException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"":
 ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.RuntimeError = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
},
 is$Exception: true
};

$$.ExpectException = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return this.message;
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.Object = {"":
 [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 hashCode$0: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.ListIterator = {"":
 ["i", "list"],
 "super": "Object",
 hasNext$0: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.NoMoreElementsException$());
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
},
 get$next: function() { return new $.BoundClosure0(this, 'next$0'); }
};

$$.StackTrace = {"":
 ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.ConstantMap = {"":
 ["length?", "_jsObject", "_lib1_keys"],
 "super": "Object",
 containsKey$1: function(key) {
  if ($.eqB(key, '__proto__'))
    return false;
  return $.jsHasOwnProperty(this._jsObject, key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  $.forEach(this._lib1_keys, new $.ConstantMap_forEach_anon(this, f));
},
 getKeys$0: function() {
  return this._lib1_keys;
},
 getValues$0: function() {
  var result = [];
  $.forEach(this._lib1_keys, new $.ConstantMap_getValues_anon(this, result));
  return result;
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwImmutable$0: function() {
  throw $.$$throw($.CTC19);
},
 operator$indexSet$2: function(key, val) {
  return this._throwImmutable$0();
},
 remove$1: function(key) {
  return this._throwImmutable$0();
},
 clear$0: function() {
  return this._throwImmutable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":
 ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"":
 ["_start", "str", "pattern"],
 "super": "Object",
 start$0: function() {
  return this._start;
},
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.IndexOutOfRangeException$(group_));
  return this.pattern;
}
};

$$.Sfx = {"":
 ["audioContext?", "soundList?", "soundFiles="],
 "super": "Object",
 initSound$1: function(soundMap) {
  var req = $.HttpRequest_HttpRequest();
  req.open$3('GET', $.index(soundMap, 'url'), true);
  req.set$responseType('arraybuffer');
  $.add$1(req.get$on().get$load(), new $.Sfx_initSound_anon(soundMap, req, this));
  req.send$0();
},
 sfx$1: function(buffer) {
  var source = this.audioContext.createBufferSource$0();
  source.connect$3(this.audioContext.get$destination(), 0, 0);
  source.set$buffer(buffer);
  source.start$1(0);
},
 playSound$1: function(sound) {
  for (var t1 = $.iterator(this.soundList); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    $.print(t2);
    if ($.eqB($.index(t2, 'name'), sound)) {
      this.sfx$1($.index(t2, 'buffer'));
      break;
    }
  }
},
 Sfx$0: function() {
  this.audioContext = $.AudioContext_AudioContext();
  this.soundList = $.ListImplementation_List(null);
  var soundsToLoad = [$.makeLiteralMap(['name', 'OP', 'url', 'static/op.mp3']), $.makeLiteralMap(['name', 'GANGNAM', 'url', 'static/gangnamstyle.mp3'])];
  this.soundFiles = soundsToLoad.length;
  for (var t1 = $.iterator(soundsToLoad); t1.hasNext$0() === true;)
    this.initSound$1(t1.next$0());
}
};

$$.Demo = {"":
 ["bodies?"],
 "super": "Object",
 step$1: function(timestamp) {
  $._stopwatch.reset$0();
  $.world.step$3(0.1, 10, 10);
  $.elapsedUs = $._stopwatch.elapsedInUs$0();
  var t1 = $.ctx;
  t1.set$fillStyle('efffde');
  t1.clearRect$4(0, 0, 2000, 600);
  $.ctx.fill$0();
  t1 = $.ctx;
  var t2 = this.img;
  t1.drawImage$5(t2, 0, 300, t2.get$width(), t2.get$height());
  $.picture();
  $.world.drawDebugData$0();
  $.window().requestAnimationFrame$1(new $.Demo_step_anon(this));
},
 initializeAnimation$0: function() {
  $.canvas = $.Element_Element$tag('canvas');
  $.canvas.set$width(2000);
  $.canvas.set$height(600);
  $.add$1($.document().get$body().get$nodes(), $.canvas);
  $.ctx = $.canvas.getContext$1('2d');
  var t1 = $.ctx;
  t1.set$fillStyle('#efffde');
  t1.rect$4(0, 0, 2000, 600);
  $.ctx.fill$0();
  var extents = $.Vector$(1000, 300);
  $.viewport = $.CanvasViewportTransform$(extents, extents);
  t1 = this.viewportScale;
  var t2 = $.viewport;
  t2.set$scale(t1);
  $.debugDraw = $.CanvasDraw$(t2, $.ctx);
  t1 = $.debugDraw;
  $.world.set$debugDraw(t1);
},
 runAnimation$0: function() {
  $.window().requestAnimationFrame$1(new $.Demo_runAnimation_anon(this));
},
 Demo$3: function(name$, gravity, viewportScale) {
  var t1 = $.Stopwatch_Stopwatch();
  t1.start$0();
  $._stopwatch = t1;
  $.query('#title').set$innerHTML(name$);
  if (null == gravity)
    gravity = $.Vector$(0, -10);
  $.world = $.World$(gravity, false, $.DefaultWorldPool$());
}
};

$$.Gangnam = {"":
 ["bodies", "viewportScale", "img"],
 "super": "Demo",
 initialize$0: function() {
  $.worlds = $.world;
  $.bods = this.bodies;
  $.view = $.viewport;
  var sd = $.PolygonShape$();
  sd.setAsBox$2(100, 0.01);
  var bd = $.BodyDef$();
  bd.position.setCoords$2(0, -27);
  var ground = $.world.createBody$1(bd);
  this.bodies.push(ground);
  ground.createFixtureFromShape$1(sd);
  sd.setAsBoxWithCenterAndAngle$4(0.01, 50, $.Vector$(-100, 0), 0);
  ground.createFixtureFromShape$1(sd);
  sd.setAsBoxWithCenterAndAngle$4(0.01, 50, $.Vector$(93, 0), 0);
  ground.createFixtureFromShape$1(sd);
  var cvjd = $.ConstantVolumeJointDef$();
  for (var i = 0; i < 20; ++i) {
    $.MathBox_translateAndScale(i, 0, 20, 0, 6.283185307179586);
    bd = $.BodyDef$();
    bd.fixedRotation = true;
    var body = $.world.createBody$1(bd);
    this.bodies.push(body);
    cvjd.addBody$1(body);
  }
  cvjd.frequencyHz = 10;
  cvjd.dampingRatio = 1;
  $.world.createJoint$1(cvjd);
  var bd2 = $.BodyDef$();
  bd2.type = 2;
  var psd = $.PolygonShape$();
  psd.setAsBoxWithCenterAndAngle$4(3, 1.5, $.Vector$(0, 25), 0.95);
  bd2.position = $.Vector$(0, 25);
  $.fallingBox = $.world.createBody$1(bd2);
  this.bodies.push($.fallingBox);
  $.fallingBox.createFixtureFromShape$2(psd, 3);
  var bouncingCircle = $.CircleShape$();
  bouncingCircle.radius = 1.5;
  var activeFixtureDef1 = $.FixtureDef$();
  activeFixtureDef1.density = 0.05;
  activeFixtureDef1.restitution = 1;
  activeFixtureDef1.shape = bouncingCircle;
  var activeBodyDef1 = $.BodyDef$();
  activeBodyDef1.position = $.Vector$(14, 17);
  activeBodyDef1.type = 2;
  activeBodyDef1.bullet = true;
  $.ball1 = $.worlds.createBody$1(activeBodyDef1);
  this.bodies.push($.ball1);
  $.ball1.createFixture$1(activeFixtureDef1);
  var activeFixtureDef2 = $.FixtureDef$();
  activeFixtureDef2.density = 0.05;
  activeFixtureDef2.restitution = 1;
  activeFixtureDef2.shape = bouncingCircle;
  var activeBodyDef2 = $.BodyDef$();
  activeBodyDef2.position = $.Vector$(24, 17);
  activeBodyDef2.type = 2;
  activeBodyDef2.bullet = true;
  $.ball2 = $.worlds.createBody$1(activeBodyDef2);
  this.bodies.push($.ball2);
  $.ball2.createFixture$1(activeFixtureDef2);
  var activeFixtureDef3 = $.FixtureDef$();
  activeFixtureDef3.density = 0.05;
  activeFixtureDef3.restitution = 1;
  activeFixtureDef3.shape = bouncingCircle;
  var activeBodyDef3 = $.BodyDef$();
  activeBodyDef3.position = $.Vector$(34, 17);
  activeBodyDef3.type = 2;
  activeBodyDef3.bullet = true;
  $.ball3 = $.worlds.createBody$1(activeBodyDef3);
  this.bodies.push($.ball3);
  $.ball3.createFixture$1(activeFixtureDef3);
}
};

$$._AbstractWorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._AudioContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._BatteryManagerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._BodyElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$load: function() {
  return this.operator$index$1('load');
},
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._DOMApplicationCacheEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._DedicatedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._FilteredElementList = {"":
 ["_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  return $.ListImplementation_List$from($.filter(this._childNodes, new $._FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  $.forEach(this.get$_filtered(), f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.CTC28);
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  $.add$1(this._childNodes, value);
},
 get$add: function() { return new $.BoundClosure(this, 'add$1'); },
 addAll$1: function(collection) {
  $.forEach(collection, this.get$add());
},
 addLast$1: function(value) {
  this.add$1(value);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC27);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC26);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $._FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  $.clear(this._childNodes);
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    result.remove$0();
  return result;
},
 filter$1: function(f) {
  return $.filter(this.get$_filtered(), f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_filtered());
},
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_filtered(), start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return $.last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.EmptyElementRect = {"":
 ["client", "offset", "scroll", "bounding", "clientRects"],
 "super": "Object"
};

$$._DocumentEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._ChildrenElementList = {"":
 ["_lib_element?", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  var t3 = t1.length;
  var output = $.ListImplementation_List(t3);
  for (var len = t1.length, i = 0; i < len; ++i) {
    var t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, t1) {
  var output = $.ListImplementation_List($.get$length(t1));
  for (var len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    var t2 = $.index(t1, i);
    if (i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 forEach$1: function(f) {
  for (var t1 = $.iterator(this._childElements); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output = [];
  this.forEach$1(new $._ChildrenElementList_filter_anon(f, output));
  return $._FrozenElementList$_wrap(output);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return this._lib_element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  return $.get$length(this._childElements);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._lib_element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.CTC25);
},
 add$1: function(value) {
  this._lib_element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  return this.add$1(value);
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._lib_element; t1.hasNext$0() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC27);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC26);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC26);
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  this._lib_element.set$text('');
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._lib_element.$dom_removeChild$1(result);
  return result;
},
 last$0: function() {
  return this._lib_element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":
 ["_nodeList"],
 "super": "Object",
 forEach$1: function(f) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out = [];
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.isEmpty(this._nodeList);
},
 get$length: function() {
  return $.get$length(this._nodeList);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.CTC25);
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.CTC25);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC25);
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC25);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC25);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC25);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC25);
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  throw $.$$throw($.CTC25);
},
 removeLast$0: function() {
  throw $.$$throw($.CTC25);
},
 last$0: function() {
  return $.last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":
 ["_lib_list", "_index"],
 "super": "Object",
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  var t1 = this._lib_list;
  var t2 = this._index;
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 get$next: function() { return new $.BoundClosure0(this, 'next$0'); },
 hasNext$0: function() {
  var t1 = this._index;
  var t2 = $.get$length(this._lib_list);
  if (typeof t2 !== 'number')
    return this.hasNext$0$bailout(1, t1, t2);
  return t1 < t2;
},
 hasNext$0$bailout: function(state0, t1, t2) {
  return $.lt(t1, t2);
}
};

$$._SimpleClientRect = {"":
 ["left?", "top?", "width?", "height?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.left, other.get$left()) && $.eqB(this.top, other.get$top()) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 toString$0: function() {
  return '(' + $.S(this.left) + ', ' + $.S(this.top) + ', ' + $.S(this.width) + ', ' + $.S(this.height) + ')';
}
};

$$._ElementRectImpl = {"":
 ["client", "offset", "scroll", "_boundingClientRect", "_clientRects"],
 "super": "Object"
};

$$._ElementEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._EventSourceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._EventsImpl = {"":
 ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $._EventListenerListImpl$(this._ptr, type);
}
};

$$._EventListenerListImpl = {"":
 ["_ptr", "_type?"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._add$2(listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._remove$2(listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
},
 _add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
},
 _remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
}
};

$$._FileReaderEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$._FileWriterEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._FrameSetElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$load: function() {
  return this.operator$index$1('load');
},
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._HttpRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$._HttpRequestUploadEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$load: function() {
  return this.operator$index$1('load');
}
};

$$._IDBDatabaseEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBOpenDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._IDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBTransactionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._IDBVersionChangeRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._InputElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._JavaScriptAudioNodeEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._LocalWindowEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._MediaElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._MediaStreamEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MessagePortEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._ChildNodeListLazy = {"":
 ["_this"],
 "super": "Object",
 last$0: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._this; t1.hasNext$0() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"":
 [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._lib_list);
},
 forEach$1: function(f) {
  return $.forEach(this._lib_list, f);
},
 filter$1: function(f) {
  return $.filter(this._lib_list, f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.isEmpty(this._lib_list);
},
 get$length: function() {
  return $.get$length(this._lib_list);
},
 operator$index$1: function(index) {
  return $.index(this._lib_list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._lib_list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._lib_list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._lib_list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._lib_list, value);
},
 addAll$1: function(collection) {
  return $.addAll(this._lib_list, collection);
},
 sort$1: function(compare) {
  return $.sort(this._lib_list, compare);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._lib_list, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  return $.clear(this._lib_list);
},
 removeLast$0: function() {
  return $.removeLast(this._lib_list);
},
 last$0: function() {
  return $.last(this._lib_list);
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._lib_list, start, rangeLength);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  return $.setRange$4(this._lib_list, start, rangeLength, from, startFrom);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  return $.removeRange(this._lib_list, start, rangeLength);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"":
 ["_lib_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._lib_list, f));
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($.getRange(this._lib_list, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NotificationEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); }
};

$$._PeerConnection00EventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._RTCPeerConnectionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._SVGElementInstanceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._SharedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$connect: function() {
  return this.operator$index$1('connect');
},
 connect$3: function(arg0, arg1, arg2) { return this.get$connect().call$3(arg0, arg1, arg2); }
};

$$._SpeechRecognitionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$start: function() {
  return this.operator$index$1('start');
},
 start$0: function() { return this.get$start().call$0(); },
 start$1: function(arg0) { return this.get$start().call$1(arg0); }
};

$$._TextTrackCueEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WebSocketEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._WorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_AbstractWorkerEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._MeasurementRequest = {"":
 ["computeValue", "completer?", "value=", "exception="],
 "super": "Object",
 computeValue$0: function() { return this.computeValue.call$0(); }
};

$$._MeasurementScheduler = {"":
 ["_callback?"],
 "super": "Object",
 _callback$0: function() { return this._callback.call$0(); },
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 maybeSchedule$0: function() {
  if (this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = true;
  this._schedule$0();
},
 _schedule$0: function() {
},
 _onCallback$0: function() {
  if (!this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = false;
  this._callback$0();
}
};

$$._PostMessageScheduler = {"":
 ["_MEASUREMENT_MESSAGE", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  $.window().postMessage$2(this._MEASUREMENT_MESSAGE, '*');
},
 _handleMessage$1: function(e) {
  this._onCallback$0();
},
 get$_handleMessage: function() { return new $.BoundClosure(this, '_handleMessage$1'); },
 _PostMessageScheduler$1: function(callback) {
  $.add$1($.window().get$on().get$message(), this.get$_handleMessage());
}
};

$$._MutationObserverScheduler = {"":
 ["_observer", "_dummy", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  var t1 = this._dummy.get$hidden() !== true;
  this._dummy.set$hidden(t1);
},
 _handleMutation$2: function(mutations, observer) {
  this._onCallback$0();
},
 get$_handleMutation: function() { return new $.BoundClosure2(this, '_handleMutation$2'); },
 _MutationObserverScheduler$1: function(callback) {
  this._observer = $.MutationObserver_MutationObserver(this.get$_handleMutation());
  this._dummy = $.DivElement_DivElement();
  this._observer.observe$3$attributes(this._dummy, $.makeLiteralMap([]), true);
}
};

$$._DOMWindowCrossFrameImpl = {"":
 ["_window"],
 "super": "Object",
 get$parent: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this._window.parent);
},
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this._window.top);
},
 close$0: function() {
  return this._window.close();
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = messagePorts == null;
  var t2 = this._window;
  if (t1)
    t2.postMessage(message,targetOrigin);
  else
    t2.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,null)
}
};

$$._FixedSizeListIterator = {"":
 ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 hasNext$0: function() {
  var t1 = this._lib_length;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._pos;
},
 hasNext$0$bailout: function(state0, t1) {
  return $.gt(t1, this._pos);
}
};

$$._VariableSizeListIterator = {"":
 [],
 "super": "Object",
 hasNext$0: function() {
  var t1 = $.get$length(this._array);
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._pos;
},
 hasNext$0$bailout: function(state0, t1) {
  return $.gt(t1, this._pos);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC2);
  var t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  var t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
},
 get$next: function() { return new $.BoundClosure0(this, 'next$0'); }
};

$$._Manager = {"":
 ["nextIsolateId=", "currentManagerId?", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  if ($.isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.HashMapImplementation$();
  this.managers = $.HashMapImplementation$();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"":
 ["id?", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  var result = null;
  try {
    result = code.call$0();
  } finally {
    var t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($.ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.isEmpty(this.ports) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1 = $._globalState();
  var t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.HashMapImplementation$();
  this.initGlobals$0();
}
};

$$._EventLoop = {"":
 ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($.ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function() {
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      var t1 = $.unwrapException(exception);
      var e = t1;
      var trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"":
 ["isolate", "fn", "message?"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"":
 [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"":
 ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($.ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer = $.Completer_Completer();
  var port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(port, completer));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"":
 ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(message, this, replyTo));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 hashCode$0: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"":
 ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(message, this, replyTo));
},
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    var t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 hashCode$0: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"":
 ["_id?", "_lib3_callback?"],
 "super": "Object",
 _lib3_callback$0: function() { return this._lib3_callback.call$0(); },
 _lib3_callback$2: function(arg0, arg1) { return this._lib3_callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._lib3_callback = onMessage;
},
 close$0: function() {
  this._lib3_callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"":
 ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  $.forEach(map.getValues$0(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"":
 ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitWorkerSendPort$1: function(port) {
  return ['sendport', port._workerId, port._isolateId, port._receivePortId];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"":
 ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"":
 ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId = $.index(x, 1);
  var isolateId = $.index(x, 2);
  var receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    var isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"":
 ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return this._getAttachedInfo$1(object);
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  this._setAttachedInfo$2(object, info);
},
 reset$0: function() {
  this.tagged = $.ListImplementation_List(null);
},
 cleanup$0: function() {
  var length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  var i = 0;
  for (; i < length$; ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 _clearAttachedInfo$1: function(o) {
  o['__MessageTraverser__attached_info__'] = null;
},
 _setAttachedInfo$2: function(o, info) {
  o['__MessageTraverser__attached_info__'] = info;
},
 _getAttachedInfo$1: function(o) {
  return o['__MessageTraverser__attached_info__'];
}
};

$$._MessageTraverserVisitedMap = {"":
 [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"":
 [],
 "super": "Object",
 traverse$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  var result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = list.length;
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, list) {
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = $.get$length(list);
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  var t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.HashMapImplementation$();
  $.indexSet(this._visited, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(this, t1));
  return t1.copy_10;
}
};

$$._Serializer = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.getKeys$0()), this._serializeList$1(map.getValues$0())];
},
 _serializeList$1: function(list) {
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  var len = list.length;
  var result = $.ListImplementation_List(len);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, list) {
  var len = $.get$length(list);
  var result = $.ListImplementation_List(len);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"":
 [],
 "super": "Object",
 deserialize$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  this._deserialized = $.HashMapImplementation$();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id = $.index(x, 1);
  var dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  var len = dartList.length;
  for (var i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    var t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, dartList, id) {
  $.indexSet(this._deserialized, id, dartList);
  var len = $.get$length(dartList);
  for (var i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result = $.HashMapImplementation$();
  var id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  var keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  var values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  var len = keys.length;
  for (var i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    var key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    result.operator$indexSet$2(key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var x = env0;
      result = env1;
      keys = env2;
      break;
    case 2:
      values = env0;
      result = env1;
      keys = env2;
      break;
  }
  switch (state0) {
    case 0:
      var result = $.HashMapImplementation$();
      var id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      var keys = $.index(x, 2);
    case 1:
      state0 = 0;
      var values = $.index(x, 3);
    case 2:
      state0 = 0;
      var len = $.get$length(keys);
      for (var i = 0; $.ltB(i, len); ++i)
        result.operator$indexSet$2(this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"":
 ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon0(this, callback), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon(this, callback), milliSeconds);
}
};

$$._Random = {"":
 [],
 "super": "Object"
};

$$.CanvasDraw = {"":
 ["ctx", "flags", "viewportTransform"],
 "super": "DebugDraw",
 drawPolygon$3: function(vertices, vertexCount, color) {
  this._pathPolygon$3(vertices, vertexCount, color);
  this.ctx.stroke$0();
},
 drawSolidPolygon$3: function(vertices, vertexCount, color) {
  this._pathPolygon$3(vertices, vertexCount, color);
  this.ctx.fill$0();
},
 _pathPolygon$3: function(vertices, vertexCount, color) {
  if (typeof vertexCount !== 'number')
    return this._pathPolygon$3$bailout(1, vertices, vertexCount, color);
  this.set$_color(color);
  for (var i = 0; i < vertexCount; ++i) {
    if (i >= vertices.length)
      throw $.ioore(i);
    var t1 = vertices[i];
    this.getWorldToScreenToOut$2(t1, t1);
  }
  t1 = this.ctx;
  t1.beginPath$0();
  if (0 >= vertices.length)
    throw $.ioore(0);
  var t2 = vertices[0].get$x();
  if (0 >= vertices.length)
    throw $.ioore(0);
  t1.moveTo$2(t2, vertices[0].get$y());
  for (i = 1; i < vertexCount; ++i) {
    if (i >= vertices.length)
      throw $.ioore(i);
    t2 = vertices[i].get$x();
    if (i >= vertices.length)
      throw $.ioore(i);
    t1.lineTo$2(t2, vertices[i].get$y());
  }
  if (0 >= vertices.length)
    throw $.ioore(0);
  t2 = vertices[0].get$x();
  if (0 >= vertices.length)
    throw $.ioore(0);
  t1.lineTo$2(t2, vertices[0].get$y());
  t1.closePath$0();
},
 _pathPolygon$3$bailout: function(state0, vertices, vertexCount, color) {
  this.set$_color(color);
  for (var i = 0; $.ltB(i, vertexCount); ++i) {
    if (i >= vertices.length)
      throw $.ioore(i);
    var t1 = vertices[i];
    this.getWorldToScreenToOut$2(t1, t1);
  }
  t1 = this.ctx;
  t1.beginPath$0();
  if (0 >= vertices.length)
    throw $.ioore(0);
  var t2 = vertices[0].get$x();
  if (0 >= vertices.length)
    throw $.ioore(0);
  t1.moveTo$2(t2, vertices[0].get$y());
  for (i = 1; $.ltB(i, vertexCount); ++i) {
    if (i >= vertices.length)
      throw $.ioore(i);
    t2 = vertices[i].get$x();
    if (i >= vertices.length)
      throw $.ioore(i);
    t1.lineTo$2(t2, vertices[i].get$y());
  }
  if (0 >= vertices.length)
    throw $.ioore(0);
  t2 = vertices[0].get$x();
  if (0 >= vertices.length)
    throw $.ioore(0);
  t1.lineTo$2(t2, vertices[0].get$y());
  t1.closePath$0();
},
 drawSegment$3: function(p1, p2, color) {
  this.set$_color(color);
  this.getWorldToScreenToOut$2(p1, p1);
  this.getWorldToScreenToOut$2(p2, p2);
  var t1 = this.ctx;
  t1.beginPath$0();
  t1.moveTo$2(p1.x, p1.y);
  t1.lineTo$2(p2.x, p2.y);
  t1.closePath$0();
  t1.stroke$0();
},
 drawCircle$4: function(center, radius, color, axis) {
  this._pathCircle$3(center, $.mul(radius, this.viewportTransform.get$scale()), color);
  this.ctx.stroke$0();
},
 drawCircle$3: function(center,radius,color) {
  return this.drawCircle$4(center,radius,color,null)
},
 drawSolidCircle$4: function(center, radius, color, axis) {
  this.drawPoint$3(center, $.mul(radius, this.viewportTransform.get$scale()), color);
},
 drawPoint$3: function(point, radiusOnScreen, color) {
  this._pathCircle$3(point, radiusOnScreen, color);
  this.ctx.fill$0();
},
 _pathCircle$3: function(center, radius, color) {
  this.set$_color(color);
  this.getWorldToScreenToOut$2(center, center);
  var t1 = this.ctx;
  t1.beginPath$0();
  t1.arc$6(center.x, center.y, radius, 0, 6.283185307179586, true);
  t1.closePath$0();
},
 drawTransform$2: function(xf, color) {
  this.drawCircle$3(xf.position, 0.1, color);
},
 set$_color: function(color) {
  var t1 = this.ctx;
  t1.setStrokeColorRgb$4(color.get$x(), color.get$y(), color.get$z(), 0.9);
  t1.setFillColorRgb$4(color.get$x(), color.get$y(), color.get$z(), 0.8);
},
 CanvasDraw$2: function(viewport, ctx) {
}
};

$$.ContactFilter = {"":
 [],
 "super": "Object",
 shouldCollide$2: function(fixtureA, fixtureB) {
  var filterA = fixtureA.get$filter();
  var filterB = fixtureB.get$filter();
  var t1 = filterA.get$groupIndex();
  if (typeof t1 !== 'number')
    return this.shouldCollide$2$bailout(1, t1, filterA, filterB, 0);
  if (!(t1 === 0) && t1 === filterB.get$groupIndex()) {
    t1 = filterA.get$groupIndex();
    if (typeof t1 !== 'number')
      return this.shouldCollide$2$bailout(2, t1, 0, 0, 0);
    return t1 > 0;
  }
  t1 = filterA.get$maskBits();
  if (t1 !== (t1 | 0))
    return this.shouldCollide$2$bailout(3, t1, filterA, filterB, 0);
  var t3 = filterB.get$categoryBits();
  if (t3 !== (t3 | 0))
    return this.shouldCollide$2$bailout(4, t1, t3, filterA, filterB);
  if ((t1 & t3) >>> 0 !== 0) {
    t1 = filterA.get$categoryBits();
    if (t1 !== (t1 | 0))
      return this.shouldCollide$2$bailout(5, t1, filterB, 0, 0);
    t3 = filterB.get$maskBits();
    if (t3 !== (t3 | 0))
      return this.shouldCollide$2$bailout(6, t1, t3, 0, 0);
    var t5 = (t1 & t3) >>> 0 !== 0;
    t1 = t5;
  } else
    t1 = false;
  return t1;
},
 shouldCollide$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env0;
      filterA = env1;
      filterB = env2;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env0;
      filterA = env1;
      filterB = env2;
      break;
    case 4:
      t1 = env0;
      t3 = env1;
      filterA = env2;
      filterB = env3;
      break;
    case 5:
      t1 = env0;
      filterB = env1;
      break;
    case 6:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var filterA = fixtureA.get$filter();
      var filterB = fixtureB.get$filter();
      var t1 = filterA.get$groupIndex();
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && !$.eqB(t1, 0) && $.eqB(filterA.get$groupIndex(), filterB.get$groupIndex()))
        switch (state0) {
          case 0:
            t1 = filterA.get$groupIndex();
          case 2:
            state0 = 0;
            return $.gt(t1, 0);
        }
      t1 = filterA.get$maskBits();
    case 3:
      state0 = 0;
      var t3 = filterB.get$categoryBits();
    case 4:
      state0 = 0;
    default:
      if (state0 === 6 || state0 === 5 || state0 === 0 && !$.eqB($.and(t1, t3), 0))
        switch (state0) {
          case 0:
            t1 = filterA.get$categoryBits();
          case 5:
            state0 = 0;
            t3 = filterB.get$maskBits();
          case 6:
            state0 = 0;
            var t5 = !$.eqB($.and(t1, t3), 0);
            t1 = t5;
        }
      else
        t1 = false;
      return t1;
  }
}
};

$$.ContactImpulse = {"":
 ["normalImpulses", "tangentImpulses"],
 "super": "Object"
};

$$.DebugDraw = {"":
 ["flags="],
 "super": "Object",
 getWorldToScreenToOut$2: function(argWorld, argScreen) {
  this.viewportTransform.getWorldToScreen$2(argWorld, argScreen);
}
};

$$.AxisAlignedBox = {"":
 ["lowerBound?", "upperBound?"],
 "super": "Object",
 setFromCombination$2: function(boxOne, boxTwo) {
  var t1 = $.min(boxOne.get$lowerBound().get$x(), boxTwo.get$lowerBound().get$x());
  this.lowerBound.set$x(t1);
  t1 = $.min(boxOne.get$lowerBound().get$y(), boxTwo.get$lowerBound().get$y());
  this.lowerBound.set$y(t1);
  t1 = $.max(boxOne.get$upperBound().get$x(), boxTwo.get$upperBound().get$x());
  this.upperBound.set$x(t1);
  t1 = $.max(boxOne.get$upperBound().get$y(), boxTwo.get$upperBound().get$y());
  this.upperBound.set$y(t1);
},
 get$center: function() {
  var c = $.Vector$copy(this.lowerBound);
  c.addLocal$1(this.upperBound);
  c.mulLocal$1(0.5);
  return c;
},
 contains$1: function(aabb) {
  var t1 = this.lowerBound.get$x();
  if (typeof t1 !== 'number')
    return this.contains$1$bailout(1, aabb, t1, 0);
  var t3 = aabb.get$lowerBound().get$x();
  if (typeof t3 !== 'number')
    return this.contains$1$bailout(2, aabb, t1, t3);
  if (t1 > t3) {
    t1 = this.lowerBound.get$y();
    if (typeof t1 !== 'number')
      return this.contains$1$bailout(3, aabb, t1, 0);
    t3 = aabb.get$lowerBound().get$y();
    if (typeof t3 !== 'number')
      return this.contains$1$bailout(4, aabb, t3, t1);
    if (t1 > t3) {
      t1 = this.upperBound.get$y();
      if (typeof t1 !== 'number')
        return this.contains$1$bailout(5, aabb, t1, 0);
      t3 = aabb.get$upperBound().get$y();
      if (typeof t3 !== 'number')
        return this.contains$1$bailout(6, aabb, t1, t3);
      if (t1 < t3) {
        t1 = this.upperBound.get$x();
        if (typeof t1 !== 'number')
          return this.contains$1$bailout(7, aabb, t1, 0);
        t3 = aabb.get$upperBound().get$x();
        if (typeof t3 !== 'number')
          return this.contains$1$bailout(8, t1, t3, 0);
        t3 = t1 < t3;
        t1 = t3;
      } else
        t1 = false;
    } else
      t1 = false;
  } else
    t1 = false;
  return t1;
},
 contains$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var aabb = env0;
      t1 = env1;
      break;
    case 2:
      aabb = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 3:
      aabb = env0;
      t1 = env1;
      break;
    case 4:
      aabb = env0;
      t3 = env1;
      t1 = env2;
      break;
    case 5:
      aabb = env0;
      t1 = env1;
      break;
    case 6:
      aabb = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 7:
      aabb = env0;
      t1 = env1;
      break;
    case 8:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.lowerBound.get$x();
    case 1:
      state0 = 0;
      var t3 = aabb.get$lowerBound().get$x();
    case 2:
      state0 = 0;
    default:
      if (state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && $.gtB(t1, t3))
        switch (state0) {
          case 0:
            t1 = this.lowerBound.get$y();
          case 3:
            state0 = 0;
            t3 = aabb.get$lowerBound().get$y();
          case 4:
            state0 = 0;
          default:
            if (state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 0 && $.gtB(t1, t3))
              switch (state0) {
                case 0:
                  t1 = this.upperBound.get$y();
                case 5:
                  state0 = 0;
                  t3 = aabb.get$upperBound().get$y();
                case 6:
                  state0 = 0;
                default:
                  if (state0 === 8 || state0 === 7 || state0 === 0 && $.ltB(t1, t3))
                    switch (state0) {
                      case 0:
                        t1 = this.upperBound.get$x();
                      case 7:
                        state0 = 0;
                        t3 = aabb.get$upperBound().get$x();
                      case 8:
                        state0 = 0;
                        t3 = $.ltB(t1, t3);
                        t1 = t3;
                    }
                  else
                    t1 = false;
              }
            else
              t1 = false;
        }
      else
        t1 = false;
      return t1;
  }
},
 setFrom$1: function(other) {
  this.lowerBound.setFrom$1(other.get$lowerBound());
  this.upperBound.setFrom$1(other.get$upperBound());
},
 toString$0: function() {
  return $.S(this.lowerBound) + ', ' + $.S(this.upperBound);
},
 AxisAlignedBox$2: function(lowerBound, upperBound) {
  if (this.lowerBound == null)
    this.lowerBound = $.Vector$(0, 0);
  if (this.upperBound == null)
    this.upperBound = $.Vector$(0, 0);
}
};

$$.Collision = {"":
 ["_pool", "cache", "input", "output", "results1", "results2", "incidentEdge?", "localTangent", "localNormal?", "planePoint", "tangent", "normal?", "normal1", "v11", "v12", "clipPoints1", "clipPoints2"],
 "super": "Object",
 testOverlap$4: function(shapeA, shapeB, transformA, transformB) {
  var t1 = this.input;
  t1.proxyA.setFromShape$1(shapeA);
  t1.proxyB.setFromShape$1(shapeB);
  t1.transformA.setFrom$1(transformA);
  t1.transformB.setFrom$1(transformB);
  t1.useRadii = true;
  var t2 = this.cache;
  t2.count = 0;
  var t3 = this._pool.distance;
  var t4 = this.output;
  t3.distance$3(t4, t2, t1);
  return $.lt(t4.distance, 0.000001192);
},
 collideCircles$5: function(manifold, circle1, xfA, circle2, xfB) {
  manifold.set$pointCount(0);
  var v = circle1.get$position();
  var pAy = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), v.get$y()));
  var pAx = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), v.get$y()));
  var v1 = circle2.get$position();
  var pBy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v1.get$y()));
  var dx = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v1.get$y())), pAx);
  var dy = $.sub(pBy, pAy);
  var distSqr = $.add($.mul(dx, dx), $.mul(dy, dy));
  var radius = $.add(circle1.get$radius(), circle2.get$radius());
  if ($.gtB(distSqr, $.mul(radius, radius)))
    return;
  manifold.set$type(0);
  manifold.get$localPoint().setFrom$1(circle1.get$position());
  manifold.get$localNormal().setZero$0();
  manifold.set$pointCount(1);
  $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle2.get$position());
  $.index(manifold.get$points(), 0).get$id().zero$0();
},
 collidePolygonAndCircle$5: function(manifold, polygon, xfA, circle, xfB) {
  manifold.set$pointCount(0);
  var v = circle.get$position();
  var cy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
  var v1x = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y())), xfA.get$position().get$x());
  var v1y = $.sub(cy, xfA.get$position().get$y());
  var t1 = xfA.get$rotation();
  var b = t1.get$col1();
  var b1 = t1.get$col2();
  var cLocaly = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
  if (typeof cLocaly !== 'number')
    return this.collidePolygonAndCircle$5$bailout(1, manifold, cLocaly, polygon, circle, v1x, v1y, b, 0);
  var cLocalx = $.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y()));
  if (typeof cLocalx !== 'number')
    return this.collidePolygonAndCircle$5$bailout(2, manifold, cLocaly, polygon, circle, cLocalx, 0, 0, 0);
  var radius = $.add(polygon.get$radius(), circle.get$radius());
  if (typeof radius !== 'number')
    return this.collidePolygonAndCircle$5$bailout(3, manifold, cLocaly, polygon, circle, cLocalx, radius, 0, 0);
  var vertexCount = polygon.get$vertexCount();
  if (typeof vertexCount !== 'number')
    return this.collidePolygonAndCircle$5$bailout(4, manifold, cLocaly, polygon, circle, cLocalx, radius, vertexCount, 0);
  var vertices = polygon.get$vertices();
  if (typeof vertices !== 'string' && (typeof vertices !== 'object' || vertices === null || vertices.constructor !== Array && !vertices.is$JavaScriptIndexingBehavior()))
    return this.collidePolygonAndCircle$5$bailout(5, manifold, cLocaly, polygon, circle, vertices, cLocalx, radius, vertexCount);
  var normals = polygon.get$normals();
  if (typeof normals !== 'string' && (typeof normals !== 'object' || normals === null || normals.constructor !== Array && !normals.is$JavaScriptIndexingBehavior()))
    return this.collidePolygonAndCircle$5$bailout(6, manifold, cLocaly, normals, circle, vertices, cLocalx, radius, vertexCount);
  for (var normalIndex = 0, i = 0, separation = 1e-12; i < vertexCount; ++i) {
    if (i >= vertices.length)
      throw $.ioore(i);
    var vertex = vertices[i];
    t1 = vertex.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    var tempx = cLocalx - t1;
    t1 = vertex.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    var tempy = cLocaly - t1;
    if (i >= normals.length)
      throw $.ioore(i);
    var norm = normals[i];
    var s = $.add($.mul(norm.get$x(), tempx), $.mul(norm.get$y(), tempy));
    if ($.gtB(s, radius))
      return;
    if ($.gtB(s, separation)) {
      separation = s;
      normalIndex = i;
    }
  }
  var vertIndex2 = normalIndex + 1;
  vertIndex2 = vertIndex2 < vertexCount ? vertIndex2 : 0;
  t1 = vertices.length;
  if (normalIndex < 0 || normalIndex >= t1)
    throw $.ioore(normalIndex);
  var v1 = vertices[normalIndex];
  if (vertIndex2 < 0 || vertIndex2 >= t1)
    throw $.ioore(vertIndex2);
  var v2 = vertices[vertIndex2];
  if ($.ltB(separation, 1.192e-7)) {
    manifold.set$pointCount(1);
    manifold.set$type(1);
    if (normalIndex >= normals.length)
      throw $.ioore(normalIndex);
    norm = normals[normalIndex];
    t1 = norm.get$x();
    manifold.get$localNormal().set$x(t1);
    t1 = norm.get$y();
    manifold.get$localNormal().set$y(t1);
    t1 = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
    manifold.get$localPoint().set$x(t1);
    t1 = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
    manifold.get$localPoint().set$y(t1);
    var mpoint = $.index(manifold.get$points(), 0);
    t1 = circle.get$position().get$x();
    mpoint.get$localPoint().set$x(t1);
    t1 = circle.get$position().get$y();
    mpoint.get$localPoint().set$y(t1);
    mpoint.get$id().zero$0();
    return;
  }
  t1 = v1.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var tempX = cLocalx - t1;
  t1 = v1.get$y();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var tempY = cLocaly - t1;
  var temp2X = $.sub(v2.get$x(), v1.get$x());
  var temp2Y = $.sub(v2.get$y(), v1.get$y());
  if (typeof temp2X !== 'number')
    throw $.iae(temp2X);
  t1 = tempX * temp2X;
  if (typeof temp2Y !== 'number')
    throw $.iae(temp2Y);
  var u1 = t1 + tempY * temp2Y;
  t1 = v2.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var temp3X = cLocalx - t1;
  t1 = v2.get$y();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var temp3Y = cLocaly - t1;
  var temp4X = $.sub(v1.get$x(), v2.get$x());
  var temp4Y = $.sub(v1.get$y(), v2.get$y());
  if (typeof temp4X !== 'number')
    throw $.iae(temp4X);
  t1 = temp3X * temp4X;
  if (typeof temp4Y !== 'number')
    throw $.iae(temp4Y);
  var u2 = t1 + temp3Y * temp4Y;
  if (u1 <= 0) {
    t1 = v1.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    var dx = cLocalx - t1;
    t1 = v1.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    var dy = cLocaly - t1;
    if (dx * dx + dy * dy > radius * radius)
      return;
    manifold.set$pointCount(1);
    manifold.set$type(1);
    t1 = v1.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocalx - t1;
    manifold.get$localNormal().set$x(t1);
    t1 = v1.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocaly - t1;
    manifold.get$localNormal().set$y(t1);
    manifold.get$localNormal().normalize$0();
    manifold.get$localPoint().setFrom$1(v1);
    $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
    $.index(manifold.get$points(), 0).get$id().zero$0();
  } else if (u2 <= 0) {
    t1 = v2.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dx = cLocalx - t1;
    t1 = v2.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dy = cLocaly - t1;
    if (dx * dx + dy * dy > radius * radius)
      return;
    manifold.set$pointCount(1);
    manifold.set$type(1);
    t1 = v2.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocalx - t1;
    manifold.get$localNormal().set$x(t1);
    t1 = v2.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocaly - t1;
    manifold.get$localNormal().set$y(t1);
    manifold.get$localNormal().normalize$0();
    manifold.get$localPoint().setFrom$1(v2);
    $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
    $.index(manifold.get$points(), 0).get$id().zero$0();
  } else {
    var fcx = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
    var fcy = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
    if (typeof fcx !== 'number')
      throw $.iae(fcx);
    var tx = cLocalx - fcx;
    if (typeof fcy !== 'number')
      throw $.iae(fcy);
    var ty = cLocaly - fcy;
    if (normalIndex >= normals.length)
      throw $.ioore(normalIndex);
    norm = normals[normalIndex];
    t1 = norm.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = tx * t1;
    var t2 = norm.get$y();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    if (t1 + ty * t2 > radius)
      return;
    manifold.set$pointCount(1);
    manifold.set$type(1);
    t1 = manifold.get$localNormal();
    if (normalIndex >= normals.length)
      throw $.ioore(normalIndex);
    t1.setFrom$1(normals[normalIndex]);
    manifold.get$localPoint().set$x(fcx);
    manifold.get$localPoint().set$y(fcy);
    $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
    $.index(manifold.get$points(), 0).get$id().zero$0();
  }
},
 collidePolygonAndCircle$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      var manifold = env0;
      cLocaly = env1;
      var polygon = env2;
      var circle = env3;
      v1x = env4;
      v1y = env5;
      b = env6;
      break;
    case 2:
      manifold = env0;
      cLocaly = env1;
      polygon = env2;
      circle = env3;
      cLocalx = env4;
      break;
    case 3:
      manifold = env0;
      cLocaly = env1;
      polygon = env2;
      circle = env3;
      cLocalx = env4;
      radius = env5;
      break;
    case 4:
      manifold = env0;
      cLocaly = env1;
      polygon = env2;
      circle = env3;
      cLocalx = env4;
      radius = env5;
      vertexCount = env6;
      break;
    case 5:
      manifold = env0;
      cLocaly = env1;
      polygon = env2;
      circle = env3;
      vertices = env4;
      cLocalx = env5;
      radius = env6;
      vertexCount = env7;
      break;
    case 6:
      manifold = env0;
      cLocaly = env1;
      normals = env2;
      circle = env3;
      vertices = env4;
      cLocalx = env5;
      radius = env6;
      vertexCount = env7;
      break;
  }
  switch (state0) {
    case 0:
      manifold.set$pointCount(0);
      var v = circle.get$position();
      var cy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
      var v1x = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y())), xfA.get$position().get$x());
      var v1y = $.sub(cy, xfA.get$position().get$y());
      var t1 = xfA.get$rotation();
      var b = t1.get$col1();
      var b1 = t1.get$col2();
      var cLocaly = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
    case 1:
      state0 = 0;
      var cLocalx = $.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y()));
    case 2:
      state0 = 0;
      var radius = $.add(polygon.get$radius(), circle.get$radius());
    case 3:
      state0 = 0;
      var vertexCount = polygon.get$vertexCount();
    case 4:
      state0 = 0;
      var vertices = polygon.get$vertices();
    case 5:
      state0 = 0;
      var normals = polygon.get$normals();
    case 6:
      state0 = 0;
      for (var normalIndex = 0, i = 0, separation = 1e-12; $.ltB(i, vertexCount); ++i) {
        var vertex = $.index(vertices, i);
        var tempx = $.sub(cLocalx, vertex.get$x());
        var tempy = $.sub(cLocaly, vertex.get$y());
        var norm = $.index(normals, i);
        var s = $.add($.mul(norm.get$x(), tempx), $.mul(norm.get$y(), tempy));
        if ($.gtB(s, radius))
          return;
        if ($.gtB(s, separation)) {
          separation = s;
          normalIndex = i;
        }
      }
      var vertIndex2 = normalIndex + 1;
      vertIndex2 = $.ltB(vertIndex2, vertexCount) ? vertIndex2 : 0;
      var v1 = $.index(vertices, normalIndex);
      var v2 = $.index(vertices, vertIndex2);
      if ($.ltB(separation, 1.192e-7)) {
        manifold.set$pointCount(1);
        manifold.set$type(1);
        norm = $.index(normals, normalIndex);
        t1 = norm.get$x();
        manifold.get$localNormal().set$x(t1);
        t1 = norm.get$y();
        manifold.get$localNormal().set$y(t1);
        t1 = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
        manifold.get$localPoint().set$x(t1);
        t1 = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
        manifold.get$localPoint().set$y(t1);
        var mpoint = $.index(manifold.get$points(), 0);
        t1 = circle.get$position().get$x();
        mpoint.get$localPoint().set$x(t1);
        t1 = circle.get$position().get$y();
        mpoint.get$localPoint().set$y(t1);
        mpoint.get$id().zero$0();
        return;
      }
      var tempX = $.sub(cLocalx, v1.get$x());
      var tempY = $.sub(cLocaly, v1.get$y());
      var temp2X = $.sub(v2.get$x(), v1.get$x());
      var temp2Y = $.sub(v2.get$y(), v1.get$y());
      var u1 = $.add($.mul(tempX, temp2X), $.mul(tempY, temp2Y));
      var temp3X = $.sub(cLocalx, v2.get$x());
      var temp3Y = $.sub(cLocaly, v2.get$y());
      var temp4X = $.sub(v1.get$x(), v2.get$x());
      var temp4Y = $.sub(v1.get$y(), v2.get$y());
      var u2 = $.add($.mul(temp3X, temp4X), $.mul(temp3Y, temp4Y));
      if ($.leB(u1, 0)) {
        var dx = $.sub(cLocalx, v1.get$x());
        var dy = $.sub(cLocaly, v1.get$y());
        if ($.gtB($.add($.mul(dx, dx), $.mul(dy, dy)), $.mul(radius, radius)))
          return;
        manifold.set$pointCount(1);
        manifold.set$type(1);
        t1 = $.sub(cLocalx, v1.get$x());
        manifold.get$localNormal().set$x(t1);
        t1 = $.sub(cLocaly, v1.get$y());
        manifold.get$localNormal().set$y(t1);
        manifold.get$localNormal().normalize$0();
        manifold.get$localPoint().setFrom$1(v1);
        $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
        $.index(manifold.get$points(), 0).get$id().zero$0();
      } else if ($.leB(u2, 0)) {
        dx = $.sub(cLocalx, v2.get$x());
        dy = $.sub(cLocaly, v2.get$y());
        if ($.gtB($.add($.mul(dx, dx), $.mul(dy, dy)), $.mul(radius, radius)))
          return;
        manifold.set$pointCount(1);
        manifold.set$type(1);
        t1 = $.sub(cLocalx, v2.get$x());
        manifold.get$localNormal().set$x(t1);
        t1 = $.sub(cLocaly, v2.get$y());
        manifold.get$localNormal().set$y(t1);
        manifold.get$localNormal().normalize$0();
        manifold.get$localPoint().setFrom$1(v2);
        $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
        $.index(manifold.get$points(), 0).get$id().zero$0();
      } else {
        var fcx = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
        var fcy = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
        var tx = $.sub(cLocalx, fcx);
        var ty = $.sub(cLocaly, fcy);
        norm = $.index(normals, normalIndex);
        if ($.gtB($.add($.mul(tx, norm.get$x()), $.mul(ty, norm.get$y())), radius))
          return;
        manifold.set$pointCount(1);
        manifold.set$type(1);
        manifold.get$localNormal().setFrom$1($.index(normals, normalIndex));
        manifold.get$localPoint().set$x(fcx);
        manifold.get$localPoint().set$y(fcy);
        $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
        $.index(manifold.get$points(), 0).get$id().zero$0();
      }
  }
},
 edgeSeparation$5: function(poly1, xf1, edge1, poly2, xf2) {
  poly1.get$vertexCount();
  var vertices1 = poly1.get$vertices();
  if (typeof vertices1 !== 'string' && (typeof vertices1 !== 'object' || vertices1 === null || vertices1.constructor !== Array && !vertices1.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(1, poly1, xf1, edge1, poly2, xf2, vertices1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var normals1 = poly1.get$normals();
  if (typeof normals1 !== 'string' && (typeof normals1 !== 'object' || normals1 === null || normals1.constructor !== Array && !normals1.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(2, xf1, edge1, poly2, xf2, vertices1, normals1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var count2 = poly2.get$vertexCount();
  if (typeof count2 !== 'number')
    return this.edgeSeparation$5$bailout(3, xf1, edge1, poly2, xf2, vertices1, normals1, count2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var vertices2 = poly2.get$vertices();
  if (typeof vertices2 !== 'string' && (typeof vertices2 !== 'object' || vertices2 === null || vertices2.constructor !== Array && !vertices2.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(4, xf1, edge1, xf2, vertices1, normals1, count2, vertices2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var R = xf1.get$rotation();
  if (edge1 !== (edge1 | 0))
    throw $.iae(edge1);
  if (edge1 < 0 || edge1 >= normals1.length)
    throw $.ioore(edge1);
  var v = normals1[edge1];
  var t5 = R.get$col1().get$y();
  if (t5 !== (t5 | 0))
    return this.edgeSeparation$5$bailout(5, xf1, edge1, xf2, t5, vertices1, count2, vertices2, R, v, 0, 0, 0, 0, 0, 0, 0, 0);
  var t7 = v.get$x();
  if (t7 !== (t7 | 0))
    return this.edgeSeparation$5$bailout(6, xf1, edge1, t7, xf2, t5, vertices1, count2, vertices2, R, v, 0, 0, 0, 0, 0, 0, 0);
  t7 = t5 * t7;
  t5 = R.get$col2().get$y();
  if (t5 !== (t5 | 0))
    return this.edgeSeparation$5$bailout(7, xf1, edge1, xf2, t7, t5, vertices1, count2, vertices2, R, v, 0, 0, 0, 0, 0, 0, 0);
  var t10 = v.get$y();
  if (t10 !== (t10 | 0))
    return this.edgeSeparation$5$bailout(8, xf1, edge1, xf2, t7, t5, t10, vertices1, count2, vertices2, R, v, 0, 0, 0, 0, 0, 0);
  var normal1Worldy = t7 + t5 * t10;
  t7 = R.get$col1().get$x();
  if (t7 !== (t7 | 0))
    return this.edgeSeparation$5$bailout(9, xf1, edge1, xf2, vertices1, count2, vertices2, normal1Worldy, R, t7, v, 0, 0, 0, 0, 0, 0, 0);
  var t13 = v.get$x();
  if (t13 !== (t13 | 0))
    return this.edgeSeparation$5$bailout(10, xf1, edge1, t13, xf2, vertices1, count2, vertices2, normal1Worldy, R, t7, v, 0, 0, 0, 0, 0, 0);
  t13 = t7 * t13;
  t7 = R.get$col2().get$x();
  if (t7 !== (t7 | 0))
    return this.edgeSeparation$5$bailout(11, t13, xf1, edge1, t7, xf2, vertices1, count2, vertices2, normal1Worldy, R, v, 0, 0, 0, 0, 0, 0);
  var t16 = v.get$y();
  if (t16 !== (t16 | 0))
    return this.edgeSeparation$5$bailout(12, t13, xf1, edge1, t7, xf2, t16, vertices1, count2, vertices2, normal1Worldy, R, 0, 0, 0, 0, 0, 0);
  var normal1Worldx = t13 + t7 * t16;
  var R1 = xf2.get$rotation();
  t13 = R1.get$col1().get$x();
  if (t13 !== (t13 | 0))
    return this.edgeSeparation$5$bailout(13, t13, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, normal1Worldy, R, 0, 0, 0, 0, 0, 0);
  t13 = normal1Worldx * t13;
  var t19 = R1.get$col1().get$y();
  if (t19 !== (t19 | 0))
    return this.edgeSeparation$5$bailout(14, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, t13, R, t19, normal1Worldy, 0, 0, 0, 0, 0);
  var normal1x = t13 + normal1Worldy * t19;
  t13 = R1.get$col2().get$x();
  if (t13 !== (t13 | 0))
    return this.edgeSeparation$5$bailout(15, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, normal1x, t13, normal1Worldy, 0, 0, 0, 0, 0);
  t13 = normal1Worldx * t13;
  var t22 = R1.get$col2().get$y();
  if (t22 !== (t22 | 0))
    return this.edgeSeparation$5$bailout(16, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, normal1x, t13, t22, normal1Worldy, 0, 0, 0, 0);
  var normal1y = t13 + normal1Worldy * t22;
  for (var minDot = 99999999999999, i = 0, index = 0; i < count2; ++i) {
    if (i >= vertices2.length)
      throw $.ioore(i);
    var a = vertices2[i];
    var t1 = a.get$x();
    if (t1 !== (t1 | 0))
      return this.edgeSeparation$5$bailout(17, xf1, edge1, xf2, normal1Worldx, minDot, R1, count2, i, vertices2, R, vertices1, index, normal1x, normal1Worldy, normal1y, a, t1);
    t1 *= normal1x;
    var t3 = a.get$y();
    if (t3 !== (t3 | 0))
      return this.edgeSeparation$5$bailout(18, t1, t3, edge1, xf1, xf2, normal1Worldx, minDot, R1, count2, i, vertices2, R, vertices1, index, normal1x, normal1Worldy, normal1y);
    var dot = t1 + t3 * normal1y;
    if (dot < minDot) {
      index = i;
      minDot = dot;
    }
  }
  if (edge1 >= vertices1.length)
    throw $.ioore(edge1);
  var v3 = vertices1[edge1];
  t1 = xf1.get$position().get$y();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(19, index, xf1, xf2, normal1Worldx, R1, v3, vertices2, normal1Worldy, R, t1, 0, 0, 0, 0, 0, 0, 0);
  t3 = R.get$col1().get$y();
  if (typeof t3 !== 'number')
    return this.edgeSeparation$5$bailout(20, index, xf1, xf2, normal1Worldx, R1, v3, vertices2, normal1Worldy, R, t3, t1, 0, 0, 0, 0, 0, 0);
  t5 = v3.get$x();
  if (typeof t5 !== 'number')
    return this.edgeSeparation$5$bailout(21, xf1, xf2, normal1Worldx, R1, vertices2, R, index, v3, normal1Worldy, t1, t3, t5, 0, 0, 0, 0, 0);
  t1 += t3 * t5;
  t7 = R.get$col2().get$y();
  if (typeof t7 !== 'number')
    return this.edgeSeparation$5$bailout(22, index, xf1, t1, xf2, t7, normal1Worldx, R1, v3, vertices2, normal1Worldy, R, 0, 0, 0, 0, 0, 0);
  var t9 = v3.get$y();
  if (typeof t9 !== 'number')
    return this.edgeSeparation$5$bailout(23, xf1, t1, xf2, t7, t9, normal1Worldx, R1, vertices2, R, index, v3, normal1Worldy, 0, 0, 0, 0, 0);
  var v1y = t1 + t7 * t9;
  t1 = xf1.get$position().get$x();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(24, index, xf2, normal1Worldx, R1, v3, v1y, vertices2, t1, R, normal1Worldy, 0, 0, 0, 0, 0, 0, 0);
  var t12 = R.get$col1().get$x();
  if (typeof t12 !== 'number')
    return this.edgeSeparation$5$bailout(25, index, normal1Worldy, xf2, normal1Worldx, R1, v3, v1y, vertices2, t1, R, t12, 0, 0, 0, 0, 0, 0);
  var t14 = v3.get$x();
  if (typeof t14 !== 'number')
    return this.edgeSeparation$5$bailout(26, xf2, normal1Worldx, R1, v1y, vertices2, t1, R, t12, t14, index, v3, normal1Worldy, 0, 0, 0, 0, 0);
  t1 += t12 * t14;
  t16 = R.get$col2().get$x();
  if (typeof t16 !== 'number')
    return this.edgeSeparation$5$bailout(27, index, t1, xf2, t16, normal1Worldx, R1, v1y, normal1Worldy, vertices2, v3, 0, 0, 0, 0, 0, 0, 0);
  var t18 = v3.get$y();
  if (typeof t18 !== 'number')
    return this.edgeSeparation$5$bailout(28, index, t1, xf2, t16, t18, normal1Worldx, R1, v1y, normal1Worldy, vertices2, 0, 0, 0, 0, 0, 0, 0);
  var v1x = t1 + t16 * t18;
  if (index < 0 || index >= vertices2.length)
    throw $.ioore(index);
  var v4 = vertices2[index];
  t1 = xf2.get$position().get$y();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(29, xf2, normal1Worldx, R1, v1y, v1x, normal1Worldy, v4, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var t21 = R1.get$col1().get$y();
  if (typeof t21 !== 'number')
    return this.edgeSeparation$5$bailout(30, t21, xf2, normal1Worldx, R1, v1y, v1x, normal1Worldy, v4, t1, 0, 0, 0, 0, 0, 0, 0, 0);
  var t23 = v4.get$x();
  if (typeof t23 !== 'number')
    return this.edgeSeparation$5$bailout(31, t21, t23, xf2, normal1Worldx, R1, v1y, v1x, normal1Worldy, v4, t1, 0, 0, 0, 0, 0, 0, 0);
  t1 += t21 * t23;
  var t25 = R1.get$col2().get$y();
  if (typeof t25 !== 'number')
    return this.edgeSeparation$5$bailout(32, xf2, t1, normal1Worldx, R1, t25, v1y, normal1Worldy, v1x, v4, 0, 0, 0, 0, 0, 0, 0, 0);
  var t27 = v4.get$y();
  if (typeof t27 !== 'number')
    return this.edgeSeparation$5$bailout(33, xf2, t1, normal1Worldx, R1, t27, t25, v1y, normal1Worldy, v1x, v4, 0, 0, 0, 0, 0, 0, 0);
  var v2y = t1 + t25 * t27 - v1y;
  var t29 = xf2.get$position().get$x();
  if (typeof t29 !== 'number')
    return this.edgeSeparation$5$bailout(34, t29, normal1Worldx, R1, v1x, normal1Worldy, v4, v2y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var t31 = R1.get$col1().get$x();
  if (typeof t31 !== 'number')
    return this.edgeSeparation$5$bailout(35, t29, t31, normal1Worldx, R1, v1x, normal1Worldy, v4, v2y, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var t33 = v4.get$x();
  if (typeof t33 !== 'number')
    return this.edgeSeparation$5$bailout(36, t29, t31, t33, normal1Worldx, R1, v1x, normal1Worldy, v4, v2y, 0, 0, 0, 0, 0, 0, 0, 0);
  t29 += t31 * t33;
  var t35 = R1.get$col2().get$x();
  if (typeof t35 !== 'number')
    return this.edgeSeparation$5$bailout(37, normal1Worldx, t29, t35, v1x, normal1Worldy, v4, v2y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var t37 = v4.get$y();
  if (typeof t37 !== 'number')
    return this.edgeSeparation$5$bailout(38, normal1Worldx, t29, t35, v1x, normal1Worldy, t37, v2y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return (t29 + t35 * t37 - v1x) * normal1Worldx + v2y * normal1Worldy;
},
 edgeSeparation$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16) {
  switch (state0) {
    case 1:
      var poly1 = env0;
      var xf1 = env1;
      var edge1 = env2;
      var poly2 = env3;
      var xf2 = env4;
      vertices1 = env5;
      break;
    case 2:
      xf1 = env0;
      edge1 = env1;
      poly2 = env2;
      xf2 = env3;
      vertices1 = env4;
      normals1 = env5;
      break;
    case 3:
      xf1 = env0;
      edge1 = env1;
      poly2 = env2;
      xf2 = env3;
      vertices1 = env4;
      normals1 = env5;
      count2 = env6;
      break;
    case 4:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      vertices1 = env3;
      normals1 = env4;
      count2 = env5;
      vertices2 = env6;
      break;
    case 5:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      t5 = env3;
      vertices1 = env4;
      count2 = env5;
      vertices2 = env6;
      R = env7;
      v = env8;
      break;
    case 6:
      xf1 = env0;
      edge1 = env1;
      t7 = env2;
      xf2 = env3;
      t5 = env4;
      vertices1 = env5;
      count2 = env6;
      vertices2 = env7;
      R = env8;
      v = env9;
      break;
    case 7:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      t7 = env3;
      t5 = env4;
      vertices1 = env5;
      count2 = env6;
      vertices2 = env7;
      R = env8;
      v = env9;
      break;
    case 8:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      t7 = env3;
      t5 = env4;
      t10 = env5;
      vertices1 = env6;
      count2 = env7;
      vertices2 = env8;
      R = env9;
      v = env10;
      break;
    case 9:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      vertices1 = env3;
      count2 = env4;
      vertices2 = env5;
      normal1Worldy = env6;
      R = env7;
      t7 = env8;
      v = env9;
      break;
    case 10:
      xf1 = env0;
      edge1 = env1;
      t13 = env2;
      xf2 = env3;
      vertices1 = env4;
      count2 = env5;
      vertices2 = env6;
      normal1Worldy = env7;
      R = env8;
      t7 = env9;
      v = env10;
      break;
    case 11:
      t13 = env0;
      xf1 = env1;
      edge1 = env2;
      t7 = env3;
      xf2 = env4;
      vertices1 = env5;
      count2 = env6;
      vertices2 = env7;
      normal1Worldy = env8;
      R = env9;
      v = env10;
      break;
    case 12:
      t13 = env0;
      xf1 = env1;
      edge1 = env2;
      t7 = env3;
      xf2 = env4;
      t16 = env5;
      vertices1 = env6;
      count2 = env7;
      vertices2 = env8;
      normal1Worldy = env9;
      R = env10;
      break;
    case 13:
      t13 = env0;
      xf1 = env1;
      edge1 = env2;
      xf2 = env3;
      normal1Worldx = env4;
      R1 = env5;
      vertices1 = env6;
      count2 = env7;
      vertices2 = env8;
      normal1Worldy = env9;
      R = env10;
      break;
    case 14:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      normal1Worldx = env3;
      R1 = env4;
      vertices1 = env5;
      count2 = env6;
      vertices2 = env7;
      t13 = env8;
      R = env9;
      t19 = env10;
      normal1Worldy = env11;
      break;
    case 15:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      normal1Worldx = env3;
      R1 = env4;
      vertices1 = env5;
      count2 = env6;
      vertices2 = env7;
      R = env8;
      normal1x = env9;
      t13 = env10;
      normal1Worldy = env11;
      break;
    case 16:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      normal1Worldx = env3;
      R1 = env4;
      vertices1 = env5;
      count2 = env6;
      vertices2 = env7;
      R = env8;
      normal1x = env9;
      t13 = env10;
      t22 = env11;
      normal1Worldy = env12;
      break;
    case 17:
      xf1 = env0;
      edge1 = env1;
      xf2 = env2;
      normal1Worldx = env3;
      minDot = env4;
      R1 = env5;
      count2 = env6;
      i = env7;
      vertices2 = env8;
      R = env9;
      vertices1 = env10;
      index = env11;
      normal1x = env12;
      normal1Worldy = env13;
      normal1y = env14;
      a = env15;
      t1 = env16;
      break;
    case 18:
      t1 = env0;
      t3 = env1;
      edge1 = env2;
      xf1 = env3;
      xf2 = env4;
      normal1Worldx = env5;
      minDot = env6;
      R1 = env7;
      count2 = env8;
      i = env9;
      vertices2 = env10;
      R = env11;
      vertices1 = env12;
      index = env13;
      normal1x = env14;
      normal1Worldy = env15;
      normal1y = env16;
      break;
    case 19:
      index = env0;
      xf1 = env1;
      xf2 = env2;
      normal1Worldx = env3;
      R1 = env4;
      v3 = env5;
      vertices2 = env6;
      normal1Worldy = env7;
      R = env8;
      t1 = env9;
      break;
    case 20:
      index = env0;
      xf1 = env1;
      xf2 = env2;
      normal1Worldx = env3;
      R1 = env4;
      v3 = env5;
      vertices2 = env6;
      normal1Worldy = env7;
      R = env8;
      t3 = env9;
      t1 = env10;
      break;
    case 21:
      xf1 = env0;
      xf2 = env1;
      normal1Worldx = env2;
      R1 = env3;
      vertices2 = env4;
      R = env5;
      index = env6;
      v3 = env7;
      normal1Worldy = env8;
      t1 = env9;
      t3 = env10;
      t5 = env11;
      break;
    case 22:
      index = env0;
      xf1 = env1;
      t1 = env2;
      xf2 = env3;
      t7 = env4;
      normal1Worldx = env5;
      R1 = env6;
      v3 = env7;
      vertices2 = env8;
      normal1Worldy = env9;
      R = env10;
      break;
    case 23:
      xf1 = env0;
      t1 = env1;
      xf2 = env2;
      t7 = env3;
      t9 = env4;
      normal1Worldx = env5;
      R1 = env6;
      vertices2 = env7;
      R = env8;
      index = env9;
      v3 = env10;
      normal1Worldy = env11;
      break;
    case 24:
      index = env0;
      xf2 = env1;
      normal1Worldx = env2;
      R1 = env3;
      v3 = env4;
      v1y = env5;
      vertices2 = env6;
      t1 = env7;
      R = env8;
      normal1Worldy = env9;
      break;
    case 25:
      index = env0;
      normal1Worldy = env1;
      xf2 = env2;
      normal1Worldx = env3;
      R1 = env4;
      v3 = env5;
      v1y = env6;
      vertices2 = env7;
      t1 = env8;
      R = env9;
      t12 = env10;
      break;
    case 26:
      xf2 = env0;
      normal1Worldx = env1;
      R1 = env2;
      v1y = env3;
      vertices2 = env4;
      t1 = env5;
      R = env6;
      t12 = env7;
      t14 = env8;
      index = env9;
      v3 = env10;
      normal1Worldy = env11;
      break;
    case 27:
      index = env0;
      t1 = env1;
      xf2 = env2;
      t16 = env3;
      normal1Worldx = env4;
      R1 = env5;
      v1y = env6;
      normal1Worldy = env7;
      vertices2 = env8;
      v3 = env9;
      break;
    case 28:
      index = env0;
      t1 = env1;
      xf2 = env2;
      t16 = env3;
      t18 = env4;
      normal1Worldx = env5;
      R1 = env6;
      v1y = env7;
      normal1Worldy = env8;
      vertices2 = env9;
      break;
    case 29:
      xf2 = env0;
      normal1Worldx = env1;
      R1 = env2;
      v1y = env3;
      v1x = env4;
      normal1Worldy = env5;
      v4 = env6;
      t1 = env7;
      break;
    case 30:
      t21 = env0;
      xf2 = env1;
      normal1Worldx = env2;
      R1 = env3;
      v1y = env4;
      v1x = env5;
      normal1Worldy = env6;
      v4 = env7;
      t1 = env8;
      break;
    case 31:
      t21 = env0;
      t23 = env1;
      xf2 = env2;
      normal1Worldx = env3;
      R1 = env4;
      v1y = env5;
      v1x = env6;
      normal1Worldy = env7;
      v4 = env8;
      t1 = env9;
      break;
    case 32:
      xf2 = env0;
      t1 = env1;
      normal1Worldx = env2;
      R1 = env3;
      t25 = env4;
      v1y = env5;
      normal1Worldy = env6;
      v1x = env7;
      v4 = env8;
      break;
    case 33:
      xf2 = env0;
      t1 = env1;
      normal1Worldx = env2;
      R1 = env3;
      t27 = env4;
      t25 = env5;
      v1y = env6;
      normal1Worldy = env7;
      v1x = env8;
      v4 = env9;
      break;
    case 34:
      t29 = env0;
      normal1Worldx = env1;
      R1 = env2;
      v1x = env3;
      normal1Worldy = env4;
      v4 = env5;
      v2y = env6;
      break;
    case 35:
      t29 = env0;
      t31 = env1;
      normal1Worldx = env2;
      R1 = env3;
      v1x = env4;
      normal1Worldy = env5;
      v4 = env6;
      v2y = env7;
      break;
    case 36:
      t29 = env0;
      t31 = env1;
      t33 = env2;
      normal1Worldx = env3;
      R1 = env4;
      v1x = env5;
      normal1Worldy = env6;
      v4 = env7;
      v2y = env8;
      break;
    case 37:
      normal1Worldx = env0;
      t29 = env1;
      t35 = env2;
      v1x = env3;
      normal1Worldy = env4;
      v4 = env5;
      v2y = env6;
      break;
    case 38:
      normal1Worldx = env0;
      t29 = env1;
      t35 = env2;
      v1x = env3;
      normal1Worldy = env4;
      t37 = env5;
      v2y = env6;
      break;
  }
  switch (state0) {
    case 0:
      poly1.get$vertexCount();
      var vertices1 = poly1.get$vertices();
    case 1:
      state0 = 0;
      var normals1 = poly1.get$normals();
    case 2:
      state0 = 0;
      var count2 = poly2.get$vertexCount();
    case 3:
      state0 = 0;
      var vertices2 = poly2.get$vertices();
    case 4:
      state0 = 0;
      var R = xf1.get$rotation();
      var v = $.index(normals1, edge1);
      var t5 = R.get$col1().get$y();
    case 5:
      state0 = 0;
      var t7 = v.get$x();
    case 6:
      state0 = 0;
      t7 = $.mul(t5, t7);
      t5 = R.get$col2().get$y();
    case 7:
      state0 = 0;
      var t10 = v.get$y();
    case 8:
      state0 = 0;
      var normal1Worldy = $.add(t7, $.mul(t5, t10));
      t7 = R.get$col1().get$x();
    case 9:
      state0 = 0;
      var t13 = v.get$x();
    case 10:
      state0 = 0;
      t13 = $.mul(t7, t13);
      t7 = R.get$col2().get$x();
    case 11:
      state0 = 0;
      var t16 = v.get$y();
    case 12:
      state0 = 0;
      var normal1Worldx = $.add(t13, $.mul(t7, t16));
      var R1 = xf2.get$rotation();
      t13 = R1.get$col1().get$x();
    case 13:
      state0 = 0;
      t13 = $.mul(normal1Worldx, t13);
      var t19 = R1.get$col1().get$y();
    case 14:
      state0 = 0;
      var normal1x = $.add(t13, $.mul(normal1Worldy, t19));
      t13 = R1.get$col2().get$x();
    case 15:
      state0 = 0;
      t13 = $.mul(normal1Worldx, t13);
      var t22 = R1.get$col2().get$y();
    case 16:
      state0 = 0;
      var normal1y = $.add(t13, $.mul(normal1Worldy, t22));
      var minDot = 99999999999999;
      var i = 0;
      var index = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, count2))
                break L0;
              var a = $.index(vertices2, i);
              var t1 = a.get$x();
            case 17:
              state0 = 0;
              t1 = $.mul(t1, normal1x);
              var t3 = a.get$y();
            case 18:
              state0 = 0;
              var dot = $.add(t1, $.mul(t3, normal1y));
              if ($.ltB(dot, minDot)) {
                index = i;
                minDot = dot;
              }
              ++i;
          }
      var v3 = $.index(vertices1, edge1);
      t1 = xf1.get$position().get$y();
    case 19:
      state0 = 0;
      t3 = R.get$col1().get$y();
    case 20:
      state0 = 0;
      t5 = v3.get$x();
    case 21:
      state0 = 0;
      t1 = $.add(t1, $.mul(t3, t5));
      t7 = R.get$col2().get$y();
    case 22:
      state0 = 0;
      var t9 = v3.get$y();
    case 23:
      state0 = 0;
      var v1y = $.add(t1, $.mul(t7, t9));
      t1 = xf1.get$position().get$x();
    case 24:
      state0 = 0;
      var t12 = R.get$col1().get$x();
    case 25:
      state0 = 0;
      var t14 = v3.get$x();
    case 26:
      state0 = 0;
      t1 = $.add(t1, $.mul(t12, t14));
      t16 = R.get$col2().get$x();
    case 27:
      state0 = 0;
      var t18 = v3.get$y();
    case 28:
      state0 = 0;
      var v1x = $.add(t1, $.mul(t16, t18));
      var v4 = $.index(vertices2, index);
      t1 = xf2.get$position().get$y();
    case 29:
      state0 = 0;
      var t21 = R1.get$col1().get$y();
    case 30:
      state0 = 0;
      var t23 = v4.get$x();
    case 31:
      state0 = 0;
      t1 = $.add(t1, $.mul(t21, t23));
      var t25 = R1.get$col2().get$y();
    case 32:
      state0 = 0;
      var t27 = v4.get$y();
    case 33:
      state0 = 0;
      var v2y = $.sub($.add(t1, $.mul(t25, t27)), v1y);
      var t29 = xf2.get$position().get$x();
    case 34:
      state0 = 0;
      var t31 = R1.get$col1().get$x();
    case 35:
      state0 = 0;
      var t33 = v4.get$x();
    case 36:
      state0 = 0;
      t29 = $.add(t29, $.mul(t31, t33));
      var t35 = R1.get$col2().get$x();
    case 37:
      state0 = 0;
      var t37 = v4.get$y();
    case 38:
      state0 = 0;
      return $.add($.mul($.sub($.add(t29, $.mul(t35, t37)), v1x), normal1Worldx), $.mul(v2y, normal1Worldy));
  }
},
 findMaxSeparation$5: function(results, poly1, xf1, poly2, xf2) {
  var count1 = poly1.get$vertexCount();
  if (count1 !== (count1 | 0))
    return this.findMaxSeparation$5$bailout(1, results, poly1, xf1, poly2, xf2, count1, 0, 0, 0, 0, 0);
  var normals1 = poly1.get$normals();
  if (typeof normals1 !== 'string' && (typeof normals1 !== 'object' || normals1 === null || normals1.constructor !== Array && !normals1.is$JavaScriptIndexingBehavior()))
    return this.findMaxSeparation$5$bailout(2, results, poly1, xf1, poly2, xf2, count1, normals1, 0, 0, 0, 0);
  var v = poly2.get$centroid();
  var predy = $.add($.add(xf2.get$position().get$y(), $.mul(xf2.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$y(), v.get$y()));
  var predx = $.add($.add(xf2.get$position().get$x(), $.mul(xf2.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$x(), v.get$y()));
  var v1 = poly1.get$centroid();
  var tempy = $.add($.add(xf1.get$position().get$y(), $.mul(xf1.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$y(), v1.get$y()));
  var dx = $.sub(predx, $.add($.add(xf1.get$position().get$x(), $.mul(xf1.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$x(), v1.get$y())));
  var dy = $.sub(predy, tempy);
  var R = xf1.get$rotation();
  var dLocal1x = $.add($.mul(dx, R.get$col1().get$x()), $.mul(dy, R.get$col1().get$y()));
  if (typeof dLocal1x !== 'number')
    return this.findMaxSeparation$5$bailout(3, results, dLocal1x, poly1, xf1, poly2, xf2, dy, count1, normals1, dx, R);
  var dLocal1y = $.add($.mul(dx, R.get$col2().get$x()), $.mul(dy, R.get$col2().get$y()));
  if (typeof dLocal1y !== 'number')
    return this.findMaxSeparation$5$bailout(4, results, dLocal1x, poly1, xf1, poly2, xf2, count1, normals1, dLocal1y, 0, 0);
  for (var edge = 0, i = 0, maxDot = 1e-12, dot = null; i < count1; ++i) {
    if (i >= normals1.length)
      throw $.ioore(i);
    var norm = normals1[i];
    dot = $.add($.mul(norm.get$x(), dLocal1x), $.mul(norm.get$y(), dLocal1y));
    if ($.gtB(dot, maxDot)) {
      edge = i;
      maxDot = dot;
    }
  }
  var s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
  if (typeof s !== 'number')
    return this.findMaxSeparation$5$bailout(5, results, poly1, xf1, poly2, xf2, count1, s, edge, 0, 0, 0);
  var prevEdge = edge - 1;
  prevEdge = prevEdge >= 0 ? prevEdge : count1 - 1;
  var sPrev = this.edgeSeparation$5(poly1, xf1, prevEdge, poly2, xf2);
  var nextEdge = edge + 1;
  nextEdge = nextEdge < count1 ? nextEdge : 0;
  var sNext = this.edgeSeparation$5(poly1, xf1, nextEdge, poly2, xf2);
  if ($.gtB(sPrev, s) && $.gtB(sPrev, sNext)) {
    var bestSeparation = sPrev;
    var bestEdge = prevEdge;
    var increment = -1;
  } else {
    if ($.gtB(sNext, s))
      ;
    else {
      results.edgeIndex = edge;
      results.separation = s;
      return;
    }
    bestSeparation = sNext;
    bestEdge = nextEdge;
    increment = 1;
  }
  if (typeof bestSeparation !== 'number')
    return this.findMaxSeparation$5$bailout(6, results, poly1, xf1, poly2, xf2, count1, bestEdge, bestSeparation, increment, s, edge);
  for (var t1 = increment === -1, edge0 = count1 - 1; true;) {
    if (t1) {
      edge = bestEdge - 1;
      edge = edge >= 0 ? edge : edge0;
    } else {
      edge = bestEdge + 1;
      edge = edge < count1 ? edge : 0;
    }
    s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
    if ($.gtB(s, bestSeparation))
      ;
    else
      break;
    bestSeparation = s;
    bestEdge = edge;
  }
  results.edgeIndex = bestEdge;
  results.separation = bestSeparation;
},
 findMaxSeparation$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      var results = env0;
      var poly1 = env1;
      var xf1 = env2;
      var poly2 = env3;
      var xf2 = env4;
      count1 = env5;
      break;
    case 2:
      results = env0;
      poly1 = env1;
      xf1 = env2;
      poly2 = env3;
      xf2 = env4;
      count1 = env5;
      normals1 = env6;
      break;
    case 3:
      results = env0;
      dLocal1x = env1;
      poly1 = env2;
      xf1 = env3;
      poly2 = env4;
      xf2 = env5;
      dy = env6;
      count1 = env7;
      normals1 = env8;
      dx = env9;
      R = env10;
      break;
    case 4:
      results = env0;
      dLocal1x = env1;
      poly1 = env2;
      xf1 = env3;
      poly2 = env4;
      xf2 = env5;
      count1 = env6;
      normals1 = env7;
      dLocal1y = env8;
      break;
    case 5:
      results = env0;
      poly1 = env1;
      xf1 = env2;
      poly2 = env3;
      xf2 = env4;
      count1 = env5;
      s = env6;
      edge = env7;
      break;
    case 6:
      results = env0;
      poly1 = env1;
      xf1 = env2;
      poly2 = env3;
      xf2 = env4;
      count1 = env5;
      bestEdge = env6;
      bestSeparation = env7;
      increment = env8;
      s = env9;
      edge = env10;
      break;
  }
  switch (state0) {
    case 0:
      var count1 = poly1.get$vertexCount();
    case 1:
      state0 = 0;
      var normals1 = poly1.get$normals();
    case 2:
      state0 = 0;
      var v = poly2.get$centroid();
      var predy = $.add($.add(xf2.get$position().get$y(), $.mul(xf2.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$y(), v.get$y()));
      var predx = $.add($.add(xf2.get$position().get$x(), $.mul(xf2.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$x(), v.get$y()));
      var v1 = poly1.get$centroid();
      var tempy = $.add($.add(xf1.get$position().get$y(), $.mul(xf1.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$y(), v1.get$y()));
      var dx = $.sub(predx, $.add($.add(xf1.get$position().get$x(), $.mul(xf1.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$x(), v1.get$y())));
      var dy = $.sub(predy, tempy);
      var R = xf1.get$rotation();
      var dLocal1x = $.add($.mul(dx, R.get$col1().get$x()), $.mul(dy, R.get$col1().get$y()));
    case 3:
      state0 = 0;
      var dLocal1y = $.add($.mul(dx, R.get$col2().get$x()), $.mul(dy, R.get$col2().get$y()));
    case 4:
      state0 = 0;
      for (var edge = 0, i = 0, maxDot = 1e-12, dot = null; $.ltB(i, count1); ++i) {
        var norm = $.index(normals1, i);
        dot = $.add($.mul(norm.get$x(), dLocal1x), $.mul(norm.get$y(), dLocal1y));
        if ($.gtB(dot, maxDot)) {
          edge = i;
          maxDot = dot;
        }
      }
      var s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
    case 5:
      state0 = 0;
      var prevEdge = edge - 1;
      prevEdge = prevEdge >= 0 ? prevEdge : $.sub(count1, 1);
      var sPrev = this.edgeSeparation$5(poly1, xf1, prevEdge, poly2, xf2);
      var nextEdge = edge + 1;
      nextEdge = $.ltB(nextEdge, count1) ? nextEdge : 0;
      var sNext = this.edgeSeparation$5(poly1, xf1, nextEdge, poly2, xf2);
      if ($.gtB(sPrev, s) && $.gtB(sPrev, sNext)) {
        var bestSeparation = sPrev;
        var bestEdge = prevEdge;
        var increment = -1;
      } else {
        if ($.gtB(sNext, s))
          ;
        else {
          results.edgeIndex = edge;
          results.separation = s;
          return;
        }
        bestSeparation = sNext;
        bestEdge = nextEdge;
        increment = 1;
      }
    case 6:
      state0 = 0;
      for (var t1 = increment === -1; true;) {
        if (t1)
          edge = $.geB($.sub(bestEdge, 1), 0) ? $.sub(bestEdge, 1) : $.sub(count1, 1);
        else
          edge = $.ltB($.add(bestEdge, 1), count1) ? $.add(bestEdge, 1) : 0;
        s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
        if ($.gtB(s, bestSeparation))
          ;
        else
          break;
        bestSeparation = s;
        bestEdge = edge;
      }
      results.edgeIndex = bestEdge;
      results.separation = bestSeparation;
  }
},
 findIncidentEdge$6: function(c, poly1, xf1, edge1, poly2, xf2) {
  poly1.get$vertexCount();
  var normals1 = poly1.get$normals();
  var count2 = poly2.get$vertexCount();
  if (typeof count2 !== 'number')
    return this.findIncidentEdge$6$bailout(1, c, xf1, edge1, poly2, xf2, normals1, count2, 0);
  var vertices2 = poly2.get$vertices();
  var normals2 = poly2.get$normals();
  if (typeof normals2 !== 'string' && (typeof normals2 !== 'object' || normals2 === null || normals2.constructor !== Array && !normals2.is$JavaScriptIndexingBehavior()))
    return this.findIncidentEdge$6$bailout(2, c, xf1, edge1, xf2, normals1, count2, vertices2, normals2);
  var t3 = xf1.get$rotation();
  var t4 = $.index(normals1, edge1);
  var t5 = this.normal1;
  $.Matrix22_mulMatrixAndVectorToOut(t3, t4, t5);
  $.Matrix22_mulTransMatrixAndVectorToOut(xf2.get$rotation(), t5, t5);
  for (var minDot = 99999999999999, i = 0, index = 0; i < count2; ++i) {
    if (i >= normals2.length)
      throw $.ioore(i);
    var t1 = normals2[i];
    var dot = $.add($.mul(t5.x, t1.get$x()), $.mul(t5.y, t1.get$y()));
    if ($.ltB(dot, minDot)) {
      index = i;
      minDot = dot;
    }
  }
  var i2 = index + 1;
  i2 = i2 < count2 ? i2 : 0;
  $.Transform_mulToOut(xf2, $.index(vertices2, index), $.index(c, 0).get$v());
  $.index(c, 0).get$id().get$features().set$referenceEdge(edge1);
  $.index(c, 0).get$id().get$features().set$incidentEdge(index);
  $.index(c, 0).get$id().get$features().set$incidentVertex(0);
  $.Transform_mulToOut(xf2, $.index(vertices2, i2), $.index(c, 1).get$v());
  $.index(c, 1).get$id().get$features().set$referenceEdge(edge1);
  $.index(c, 1).get$id().get$features().set$incidentEdge(i2);
  $.index(c, 1).get$id().get$features().set$incidentVertex(1);
},
 findIncidentEdge$6$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      var c = env0;
      var xf1 = env1;
      var edge1 = env2;
      var poly2 = env3;
      var xf2 = env4;
      normals1 = env5;
      count2 = env6;
      break;
    case 2:
      c = env0;
      xf1 = env1;
      edge1 = env2;
      xf2 = env3;
      normals1 = env4;
      count2 = env5;
      vertices2 = env6;
      normals2 = env7;
      break;
  }
  switch (state0) {
    case 0:
      poly1.get$vertexCount();
      var normals1 = poly1.get$normals();
      var count2 = poly2.get$vertexCount();
    case 1:
      state0 = 0;
      var vertices2 = poly2.get$vertices();
      var normals2 = poly2.get$normals();
    case 2:
      state0 = 0;
      var t3 = xf1.get$rotation();
      var t4 = $.index(normals1, edge1);
      var t5 = this.normal1;
      $.Matrix22_mulMatrixAndVectorToOut(t3, t4, t5);
      $.Matrix22_mulTransMatrixAndVectorToOut(xf2.get$rotation(), t5, t5);
      for (var minDot = 99999999999999, i = 0, index = 0; $.ltB(i, count2); ++i) {
        var t1 = $.index(normals2, i);
        var dot = $.add($.mul(t5.x, t1.get$x()), $.mul(t5.y, t1.get$y()));
        if ($.ltB(dot, minDot)) {
          index = i;
          minDot = dot;
        }
      }
      var i2 = index + 1;
      i2 = $.ltB(i2, count2) ? i2 : 0;
      $.Transform_mulToOut(xf2, $.index(vertices2, index), $.index(c, 0).get$v());
      $.index(c, 0).get$id().get$features().set$referenceEdge(edge1);
      $.index(c, 0).get$id().get$features().set$incidentEdge(index);
      $.index(c, 0).get$id().get$features().set$incidentVertex(0);
      $.Transform_mulToOut(xf2, $.index(vertices2, i2), $.index(c, 1).get$v());
      $.index(c, 1).get$id().get$features().set$referenceEdge(edge1);
      $.index(c, 1).get$id().get$features().set$incidentEdge(i2);
      $.index(c, 1).get$id().get$features().set$incidentVertex(1);
  }
},
 collidePolygons$5: function(manifold, polyA, xfA, polyB, xfB) {
  manifold.set$pointCount(0);
  var totalRadius = $.add(polyA.get$radius(), polyB.get$radius());
  if (typeof totalRadius !== 'number')
    return this.collidePolygons$5$bailout(1, manifold, polyA, xfA, polyB, xfB, totalRadius, 0, 0, 0, 0, 0, 0);
  var t2 = this.results1;
  this.findMaxSeparation$5(t2, polyA, xfA, polyB, xfB);
  if ($.gtB(t2.separation, totalRadius))
    return;
  var t1 = this.results2;
  this.findMaxSeparation$5(t1, polyB, xfB, polyA, xfA);
  if ($.gtB(t1.separation, totalRadius))
    return;
  var t3 = t1.separation;
  var t4 = t2.separation;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  if ($.gtB(t3, 0.98 * t4 + 0.001)) {
    var edge1 = t1.edgeIndex;
    manifold.set$type(2);
    var poly2 = polyA;
    var xf2 = xfA;
    var xf1 = xfB;
    var poly1 = polyB;
    var flip = 1;
  } else {
    edge1 = t2.edgeIndex;
    manifold.set$type(1);
    poly2 = polyB;
    xf2 = xfB;
    xf1 = xfA;
    poly1 = polyA;
    flip = 0;
  }
  t1 = this.incidentEdge;
  this.findIncidentEdge$6(t1, poly1, xf1, edge1, poly2, xf2);
  var count1 = poly1.get$vertexCount();
  var vertices1 = poly1.get$vertices();
  t2 = this.v11;
  t2.setFrom$1($.index(vertices1, edge1));
  var two = this.v12;
  two.setFrom$1($.ltB($.add(edge1, 1), count1) ? $.index(vertices1, $.add(edge1, 1)) : $.index(vertices1, 0));
  t3 = this.localTangent;
  t3.setFrom$1(two).subLocal$1(t2);
  t3.normalize$0();
  t4 = this.localNormal;
  $.Vector_crossVectorAndNumToOut(t3, 1, t4);
  var t5 = this.planePoint;
  t5.setFrom$1(t2).addLocal$1(two).mulLocal$1(0.5);
  var t6 = xf1.get$rotation();
  var one = this.tangent;
  $.Matrix22_mulMatrixAndVectorToOut(t6, t3, one);
  var one0 = this.normal;
  $.Vector_crossVectorAndNumToOut(one, 1, one0);
  $.Transform_mulToOut(xf1, t2, t2);
  $.Transform_mulToOut(xf1, two, two);
  var frontOffset = $.add($.mul(one0.x, t2.x), $.mul(one0.y, t2.y));
  if (typeof frontOffset !== 'number')
    return this.collidePolygons$5$bailout(2, xf2, manifold, t4, t5, one, frontOffset, one0, totalRadius, t1, t2, two, flip);
  var sideOffset1 = $.add($.neg($.add($.mul(one.x, t2.x), $.mul(one.y, t2.y))), totalRadius);
  var sideOffset2 = $.add($.add($.mul(one.x, two.x), $.mul(one.y, two.y)), totalRadius);
  one.negateLocal$0();
  t6 = this.clipPoints1;
  var np = $.Collision_clipSegmentToLine(t6, t1, one, sideOffset1);
  one.negateLocal$0();
  if (np < 2)
    return;
  t1 = this.clipPoints2;
  if ($.Collision_clipSegmentToLine(t1, t6, one, sideOffset2) < 2)
    return;
  manifold.get$localNormal().setFrom$1(t4);
  manifold.get$localPoint().setFrom$1(t5);
  for (var t2 = t1.length, pointCount = 0, i = 0; i < 2; ++i) {
    if (i >= t2)
      throw $.ioore(i);
    two = t1[i].get$v();
    if ($.leB($.sub($.add($.mul(one0.x, two.get$x()), $.mul(one0.y, two.get$y())), frontOffset), totalRadius)) {
      var cp = $.index(manifold.get$points(), pointCount);
      $.Transform_mulTransToOut(xf2, t1[i].get$v(), cp.get$localPoint());
      cp.get$id().setFrom$1(t1[i].get$id());
      cp.get$id().get$features().set$flip(flip);
      ++pointCount;
    }
    one = one0;
  }
  manifold.set$pointCount(pointCount);
},
 collidePolygons$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state0) {
    case 1:
      var manifold = env0;
      var polyA = env1;
      var xfA = env2;
      var polyB = env3;
      var xfB = env4;
      totalRadius = env5;
      break;
    case 2:
      xf2 = env0;
      manifold = env1;
      t4 = env2;
      t5 = env3;
      one = env4;
      frontOffset = env5;
      one0 = env6;
      totalRadius = env7;
      t1 = env8;
      t2 = env9;
      two = env10;
      flip = env11;
      break;
  }
  switch (state0) {
    case 0:
      manifold.set$pointCount(0);
      var totalRadius = $.add(polyA.get$radius(), polyB.get$radius());
    case 1:
      state0 = 0;
      var t2 = this.results1;
      this.findMaxSeparation$5(t2, polyA, xfA, polyB, xfB);
      if ($.gtB(t2.separation, totalRadius))
        return;
      var t1 = this.results2;
      this.findMaxSeparation$5(t1, polyB, xfB, polyA, xfA);
      if ($.gtB(t1.separation, totalRadius))
        return;
      var t3 = t1.separation;
      var t4 = t2.separation;
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      if ($.gtB(t3, 0.98 * t4 + 0.001)) {
        var edge1 = t1.edgeIndex;
        manifold.set$type(2);
        var poly2 = polyA;
        var xf2 = xfA;
        var xf1 = xfB;
        var poly1 = polyB;
        var flip = 1;
      } else {
        edge1 = t2.edgeIndex;
        manifold.set$type(1);
        poly2 = polyB;
        xf2 = xfB;
        xf1 = xfA;
        poly1 = polyA;
        flip = 0;
      }
      t1 = this.incidentEdge;
      this.findIncidentEdge$6(t1, poly1, xf1, edge1, poly2, xf2);
      var count1 = poly1.get$vertexCount();
      var vertices1 = poly1.get$vertices();
      t2 = this.v11;
      t2.setFrom$1($.index(vertices1, edge1));
      var two = this.v12;
      two.setFrom$1($.ltB($.add(edge1, 1), count1) ? $.index(vertices1, $.add(edge1, 1)) : $.index(vertices1, 0));
      t3 = this.localTangent;
      t3.setFrom$1(two).subLocal$1(t2);
      t3.normalize$0();
      t4 = this.localNormal;
      $.Vector_crossVectorAndNumToOut(t3, 1, t4);
      var t5 = this.planePoint;
      t5.setFrom$1(t2).addLocal$1(two).mulLocal$1(0.5);
      var t6 = xf1.get$rotation();
      var one = this.tangent;
      $.Matrix22_mulMatrixAndVectorToOut(t6, t3, one);
      var one0 = this.normal;
      $.Vector_crossVectorAndNumToOut(one, 1, one0);
      $.Transform_mulToOut(xf1, t2, t2);
      $.Transform_mulToOut(xf1, two, two);
      var frontOffset = $.add($.mul(one0.x, t2.x), $.mul(one0.y, t2.y));
    case 2:
      state0 = 0;
      var sideOffset1 = $.add($.neg($.add($.mul(one.x, t2.x), $.mul(one.y, t2.y))), totalRadius);
      var sideOffset2 = $.add($.add($.mul(one.x, two.x), $.mul(one.y, two.y)), totalRadius);
      one.negateLocal$0();
      t6 = this.clipPoints1;
      var np = $.Collision_clipSegmentToLine(t6, t1, one, sideOffset1);
      one.negateLocal$0();
      if (np < 2)
        return;
      t1 = this.clipPoints2;
      if ($.Collision_clipSegmentToLine(t1, t6, one, sideOffset2) < 2)
        return;
      manifold.get$localNormal().setFrom$1(t4);
      manifold.get$localPoint().setFrom$1(t5);
      for (var t2 = t1.length, pointCount = 0, i = 0; i < 2; ++i) {
        if (i >= t2)
          throw $.ioore(i);
        two = t1[i].get$v();
        if ($.leB($.sub($.add($.mul(one0.x, two.get$x()), $.mul(one0.y, two.get$y())), frontOffset), totalRadius)) {
          var cp = $.index(manifold.get$points(), pointCount);
          $.Transform_mulTransToOut(xf2, t1[i].get$v(), cp.get$localPoint());
          cp.get$id().setFrom$1(t1[i].get$id());
          cp.get$id().get$features().set$flip(flip);
          ++pointCount;
        }
        one = one0;
      }
      manifold.set$pointCount(pointCount);
  }
},
 Collision$_construct$1: function(pool) {
  var t1 = this.incidentEdge;
  $.indexSet(t1, 0, $.ClipVertex$());
  $.indexSet(t1, 1, $.ClipVertex$());
  t1 = this.clipPoints1;
  var t2 = $.ClipVertex$();
  var t3 = t1.length;
  if (0 >= t3)
    throw $.ioore(0);
  t1[0] = t2;
  t2 = $.ClipVertex$();
  if (1 >= t3)
    throw $.ioore(1);
  t1[1] = t2;
  t2 = this.clipPoints2;
  t1 = $.ClipVertex$();
  var t4 = t2.length;
  if (0 >= t4)
    throw $.ioore(0);
  t2[0] = t1;
  t1 = $.ClipVertex$();
  if (1 >= t4)
    throw $.ioore(1);
  t2[1] = t1;
}
};

$$.ClipVertex = {"":
 ["v?", "id?"],
 "super": "Object",
 setFrom$1: function(cv) {
  this.v.setFrom$1(cv.get$v());
  this.id.setFrom$1(cv.get$id());
}
};

$$.EdgeResults = {"":
 ["separation", "edgeIndex"],
 "super": "Object"
};

$$.ContactID = {"":
 ["features?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eq(other.get$features(), this.features);
},
 setFrom$1: function(other) {
  this.features.setFrom$1(other.get$features());
},
 isEqual$1: function(other) {
  return $.eq(other.get$features(), this.features);
},
 zero$0: function() {
  this.features.zero$0();
}
};

$$.Distance = {"":
 ["calls", "iters", "maxIters", "simplex", "saveA", "saveB", "closestPoint", "searchDirection", "temp", "normal?"],
 "super": "Object",
 distance$3: function(output, cache, input) {
  this.calls = this.calls + 1;
  var proxyA = input.proxyA;
  var proxyB = input.proxyB;
  var transformA = input.transformA;
  var transformB = input.transformB;
  var t1 = this.simplex;
  t1.readCache$5(cache, proxyA, transformA, proxyB, transformB);
  var vertices = t1.vertices;
  var t2 = this.closestPoint;
  t1.getClosestPoint$1(t2);
  var distanceSqr1 = t2.get$lengthSquared();
  for (var t3 = this.saveA, t4 = vertices.length, t5 = t3.length, t6 = this.saveB, t7 = t6.length, t8 = this.searchDirection, t9 = transformA.rotation, t10 = this.temp, t11 = transformB.rotation, distanceSqr2 = distanceSqr1, iter = 0, saveCount = 0; iter < this.maxIters;) {
    saveCount = t1.count;
    for (var i = 0; $.ltB(i, saveCount); ++i) {
      if (i >= t4)
        throw $.ioore(i);
      var t12 = vertices[i].get$indexA();
      if (i >= t5)
        throw $.ioore(i);
      t3[i] = t12;
      t12 = vertices[i].get$indexB();
      if (i >= t7)
        throw $.ioore(i);
      t6[i] = t12;
    }
    switch (t1.count) {
      case 1:
        break;
      case 2:
        t1.solve2$0();
        break;
      case 3:
        t1.solve3$0();
        break;
      default:
    }
    if ($.eqB(t1.count, 3))
      break;
    t1.getClosestPoint$1(t2);
    distanceSqr2 = t2.get$lengthSquared();
    t1.getSearchDirection$1(t8);
    if ($.ltB(t8.get$lengthSquared(), 1.4208639999999999e-14))
      break;
    t12 = t1.count;
    if (t12 !== (t12 | 0))
      throw $.iae(t12);
    if (t12 < 0 || t12 >= t4)
      throw $.ioore(t12);
    var vertex = vertices[t12];
    $.Matrix22_mulTransMatrixAndVectorToOut(t9, t8.negateLocal$0(), t10);
    vertex.set$indexA(proxyA.getSupport$1(t10));
    $.Transform_mulToOut(transformA, $.index(proxyA.get$vertices(), vertex.get$indexA()), vertex.get$wA());
    $.Matrix22_mulTransMatrixAndVectorToOut(t11, t8.negateLocal$0(), t10);
    vertex.set$indexB(proxyB.getSupport$1(t10));
    $.Transform_mulToOut(transformB, $.index(proxyB.get$vertices(), vertex.get$indexB()), vertex.get$wB());
    vertex.get$w().setFrom$1(vertex.get$wB()).subLocal$1(vertex.get$wA());
    ++iter;
    this.iters = this.iters + 1;
    for (i = 0; duplicate = false, $.ltB(i, saveCount); ++i) {
      t12 = vertex.get$indexA();
      if (i >= t5)
        throw $.ioore(i);
      if ($.eqB(t12, t3[i])) {
        t12 = vertex.get$indexB();
        if (i >= t7)
          throw $.ioore(i);
        t12 = $.eqB(t12, t6[i]);
      } else
        t12 = false;
      if (t12) {
        var duplicate = true;
        break;
      }
    }
    if (duplicate)
      break;
    t1.count = $.add(t1.count, 1);
    distanceSqr1 = distanceSqr2;
  }
  this.maxIters = $.max(this.maxIters, iter);
  t2 = output.pointA;
  t3 = output.pointB;
  t1.getWitnessPoints$2(t2, t3);
  output.distance = $.sqrt($.MathBox_distanceSquared(t2, t3));
  output.iterations = iter;
  t1.writeCache$1(cache);
  if (input.useRadii) {
    var rA = proxyA.get$radius();
    var rB = proxyB.get$radius();
    if ($.gtB(output.distance, $.add(rA, rB)) && $.gtB(output.distance, 1.192e-7)) {
      output.distance = $.sub(output.distance, $.add(rA, rB));
      t1 = this.normal;
      t1.setFrom$1(t3).subLocal$1(t2);
      t1.normalize$0();
      t10.setFrom$1(t1).mulLocal$1(rA);
      t2.addLocal$1(t10);
      t10.setFrom$1(t1).mulLocal$1(rB);
      t3.subLocal$1(t10);
    } else {
      t2.addLocal$1(t3).mulLocal$1(0.5);
      t3.setFrom$1(t2);
      output.distance = 0;
    }
  }
}
};

$$.DistanceInput = {"":
 ["proxyA=", "proxyB=", "transformA", "transformB", "useRadii"],
 "super": "Object"
};

$$.DistanceOutput = {"":
 ["pointA", "pointB", "distance", "iterations"],
 "super": "Object",
 distance$3: function(arg0, arg1, arg2) { return this.distance.call$3(arg0, arg1, arg2); }
};

$$.DistanceProxy = {"":
 ["vertices?", "count?", "radius="],
 "super": "Object",
 setFromShape$1: function(shape) {
  var t1 = shape.get$type();
  if (typeof t1 !== 'number')
    return this.setFromShape$1$bailout(1, shape, t1, 0, 0, 0, 0);
  if (t1 === 0) {
    t1 = this.vertices;
    if (0 >= t1.length)
      throw $.ioore(0);
    t1[0].setFrom$1(shape.get$position());
    this.count = 1;
    this.radius = shape.get$radius();
  } else {
    t1 = shape.get$type();
    if (typeof t1 !== 'number')
      return this.setFromShape$1$bailout(2, shape, t1, 0, 0, 0, 0);
    if (t1 === 1) {
      this.count = shape.get$vertexCount();
      this.radius = shape.get$radius();
      t1 = this.vertices;
      var t2 = t1.length;
      var i = 0;
      while (true) {
        var t3 = this.count;
        if (typeof t3 !== 'number')
          return this.setFromShape$1$bailout(3, shape, i, t3, t1, t2, 0);
        if (!(i < t3))
          break;
        if (i >= t2)
          throw $.ioore(i);
        t3 = t1[i];
        var t4 = shape.get$vertices();
        if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
          return this.setFromShape$1$bailout(4, shape, i, t1, t3, t2, t4);
        if (i >= t4.length)
          throw $.ioore(i);
        t3.setFrom$1(t4[i]);
        ++i;
      }
    }
  }
},
 setFromShape$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      var shape = env0;
      t1 = env1;
      break;
    case 2:
      shape = env0;
      t1 = env1;
      break;
    case 3:
      shape = env0;
      i = env1;
      t3 = env2;
      t1 = env3;
      t2 = env4;
      break;
    case 4:
      shape = env0;
      i = env1;
      t1 = env2;
      t3 = env3;
      t2 = env4;
      t4 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = shape.get$type();
    case 1:
      state0 = 0;
    default:
      if (state0 === 0 && $.eqB(t1, 0)) {
        t1 = this.vertices;
        if (0 >= t1.length)
          throw $.ioore(0);
        t1[0].setFrom$1(shape.get$position());
        this.count = 1;
        this.radius = shape.get$radius();
      } else
        switch (state0) {
          case 0:
            t1 = shape.get$type();
          case 2:
            state0 = 0;
          default:
            if (state0 === 4 || state0 === 3 || state0 === 0 && $.eqB(t1, 1))
              switch (state0) {
                case 0:
                  this.count = shape.get$vertexCount();
                  this.radius = shape.get$radius();
                  t1 = this.vertices;
                  var t2 = t1.length;
                  var i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          var t3 = this.count;
                        case 3:
                          state0 = 0;
                          if (!$.ltB(i, t3))
                            break L0;
                          if (i >= t2)
                            throw $.ioore(i);
                          t3 = t1[i];
                          var t4 = shape.get$vertices();
                        case 4:
                          state0 = 0;
                          t3.setFrom$1($.index(t4, i));
                          ++i;
                      }
              }
        }
  }
},
 getSupport$1: function(direction) {
  var t1 = this.vertices;
  var t2 = t1.length;
  if (0 >= t2)
    throw $.ioore(0);
  var one = t1[0];
  var t3 = one.get$x();
  if (typeof t3 !== 'number')
    return this.getSupport$1$bailout(1, direction, t3, t2, one, t1, 0, 0, 0, 0, 0);
  var t5 = direction.x;
  if (typeof t5 !== 'number')
    return this.getSupport$1$bailout(2, direction, one, t1, t3, t5, t2, 0, 0, 0, 0);
  t5 = t3 * t5;
  t3 = one.get$y();
  if (typeof t3 !== 'number')
    return this.getSupport$1$bailout(3, direction, one, t1, t5, t3, t2, 0, 0, 0, 0);
  var t8 = direction.y;
  if (typeof t8 !== 'number')
    return this.getSupport$1$bailout(4, direction, one, t1, t8, t5, t3, t2, 0, 0, 0);
  var bestValue = t5 + t3 * t8;
  var two = direction;
  var i = 1;
  var bestIndex = 0;
  while (true) {
    t3 = this.count;
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(5, direction, i, t1, bestIndex, bestValue, one, t3, two, t2, 0);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    one = t1[i];
    t3 = one.get$x();
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(6, direction, i, one, bestIndex, bestValue, t1, t3, t2, 0, 0);
    t5 = direction.x;
    if (typeof t5 !== 'number')
      return this.getSupport$1$bailout(7, direction, t5, i, one, bestIndex, bestValue, t1, t3, t2, 0);
    t5 = t3 * t5;
    t3 = one.get$y();
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(8, direction, i, one, bestIndex, bestValue, t1, t5, t3, t2, 0);
    t8 = direction.y;
    if (typeof t8 !== 'number')
      return this.getSupport$1$bailout(9, direction, i, t8, one, bestIndex, bestValue, t1, t5, t3, t2);
    var value = t5 + t3 * t8;
    if (value > bestValue) {
      bestValue = value;
      bestIndex = i;
    }
    two = direction;
    ++i;
  }
  return bestIndex;
},
 getSupport$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9) {
  switch (state0) {
    case 1:
      var direction = env0;
      t3 = env1;
      t2 = env2;
      one = env3;
      t1 = env4;
      break;
    case 2:
      direction = env0;
      one = env1;
      t1 = env2;
      t3 = env3;
      t5 = env4;
      t2 = env5;
      break;
    case 3:
      direction = env0;
      one = env1;
      t1 = env2;
      t5 = env3;
      t3 = env4;
      t2 = env5;
      break;
    case 4:
      direction = env0;
      one = env1;
      t1 = env2;
      t8 = env3;
      t5 = env4;
      t3 = env5;
      t2 = env6;
      break;
    case 5:
      direction = env0;
      i = env1;
      t1 = env2;
      bestIndex = env3;
      bestValue = env4;
      one = env5;
      t3 = env6;
      two = env7;
      t2 = env8;
      break;
    case 6:
      direction = env0;
      i = env1;
      one = env2;
      bestIndex = env3;
      bestValue = env4;
      t1 = env5;
      t3 = env6;
      t2 = env7;
      break;
    case 7:
      direction = env0;
      t5 = env1;
      i = env2;
      one = env3;
      bestIndex = env4;
      bestValue = env5;
      t1 = env6;
      t3 = env7;
      t2 = env8;
      break;
    case 8:
      direction = env0;
      i = env1;
      one = env2;
      bestIndex = env3;
      bestValue = env4;
      t1 = env5;
      t5 = env6;
      t3 = env7;
      t2 = env8;
      break;
    case 9:
      direction = env0;
      i = env1;
      t8 = env2;
      one = env3;
      bestIndex = env4;
      bestValue = env5;
      t1 = env6;
      t5 = env7;
      t3 = env8;
      t2 = env9;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.vertices;
      var t2 = t1.length;
      if (0 >= t2)
        throw $.ioore(0);
      var one = t1[0];
      var t3 = one.get$x();
    case 1:
      state0 = 0;
      var t5 = direction.x;
    case 2:
      state0 = 0;
      t5 = $.mul(t3, t5);
      t3 = one.get$y();
    case 3:
      state0 = 0;
      var t8 = direction.y;
    case 4:
      state0 = 0;
      var bestValue = $.add(t5, $.mul(t3, t8));
      var two = direction;
      var i = 1;
      var bestIndex = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = this.count;
            case 5:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              one = t1[i];
              t3 = one.get$x();
            case 6:
              state0 = 0;
              t5 = direction.x;
            case 7:
              state0 = 0;
              t5 = $.mul(t3, t5);
              t3 = one.get$y();
            case 8:
              state0 = 0;
              t8 = direction.y;
            case 9:
              state0 = 0;
              var value = $.add(t5, $.mul(t3, t8));
              if ($.gtB(value, bestValue)) {
                bestValue = value;
                bestIndex = i;
              }
              two = direction;
              ++i;
          }
      return bestIndex;
  }
},
 DistanceProxy$0: function() {
  for (var t1 = this.vertices, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.Features = {"":
 ["referenceEdge=", "incidentEdge=", "incidentVertex=", "flip="],
 "super": "Object",
 setFrom$1: function(f) {
  this.referenceEdge = f.get$referenceEdge();
  this.incidentEdge = f.get$incidentEdge();
  this.incidentVertex = f.get$incidentVertex();
  this.flip = f.get$flip();
},
 operator$eq$1: function(other) {
  return $.eqB(this.referenceEdge, other.get$referenceEdge()) && $.eqB(this.incidentEdge, other.get$incidentEdge()) && $.eqB(this.incidentVertex, other.get$incidentVertex()) && $.eqB(this.flip, other.get$flip());
},
 toString$0: function() {
  return 'Features: (' + $.S(this.flip) + ', ' + $.S(this.incidentEdge) + ', ' + $.S(this.incidentVertex) + ' ' + $.S(this.referenceEdge) + ')';
},
 zero$0: function() {
  this.referenceEdge = 0;
  this.incidentEdge = 0;
  this.incidentVertex = 0;
  this.flip = 0;
}
};

$$.Manifold = {"":
 ["points?", "localNormal?", "localPoint?", "type=", "pointCount="],
 "super": "Object",
 setFrom$1: function(other) {
  var t1 = this.points;
  var t2 = t1.length;
  var i = 0;
  while (true) {
    var t3 = other.get$pointCount();
    if (typeof t3 !== 'number')
      return this.setFrom$1$bailout(1, other, t2, i, t3, t1, 0);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    var t4 = other.get$points();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(2, other, t2, t3, t4, i, t1);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
    ++i;
  }
  this.type = other.get$type();
  this.localNormal.setFrom$1(other.get$localNormal());
  this.localPoint.setFrom$1(other.get$localPoint());
  this.pointCount = other.get$pointCount();
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      var other = env0;
      t2 = env1;
      i = env2;
      t3 = env3;
      t1 = env4;
      break;
    case 2:
      other = env0;
      t2 = env1;
      t3 = env2;
      t4 = env3;
      i = env4;
      t1 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.points;
      var t2 = t1.length;
      var i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t3 = other.get$pointCount();
            case 1:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              var t4 = other.get$points();
            case 2:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
      this.type = other.get$type();
      this.localNormal.setFrom$1(other.get$localNormal());
      this.localPoint.setFrom$1(other.get$localPoint());
      this.pointCount = other.get$pointCount();
  }
},
 Manifold$0: function() {
  for (var t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    var t3 = $.ManifoldPoint$();
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.ManifoldPoint = {"":
 ["localPoint?", "normalImpulse=", "tangentImpulse=", "id?"],
 "super": "Object",
 setFrom$1: function(other) {
  this.localPoint.setFrom$1(other.get$localPoint());
  this.normalImpulse = other.get$normalImpulse();
  this.tangentImpulse = other.get$tangentImpulse();
  this.id.setFrom$1(other.get$id());
}
};

$$.Simplex = {"":
 ["v1", "v2", "v3", "vertices?", "count?", "e13", "e23", "e12", "case2", "case22", "case3", "case33"],
 "super": "Object",
 readCache$5: function(cache, proxyA, transformA, proxyB, transformB) {
  this.count = cache.count;
  var t1 = this.vertices;
  var t2 = t1.length;
  var t3 = cache.indexA;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this.readCache$5$bailout(1, cache, proxyA, transformA, proxyB, transformB, t2, t1, t3, 0);
  var t5 = cache.indexB;
  if (typeof t5 !== 'string' && (typeof t5 !== 'object' || t5 === null || t5.constructor !== Array && !t5.is$JavaScriptIndexingBehavior()))
    return this.readCache$5$bailout(2, cache, proxyA, transformA, proxyB, transformB, t2, t1, t3, t5);
  var i = 0;
  for (; $.ltB(i, this.count); ++i) {
    if (i >= t2)
      throw $.ioore(i);
    var v = t1[i];
    if (i >= t3.length)
      throw $.ioore(i);
    v.set$indexA(t3[i]);
    if (i >= t5.length)
      throw $.ioore(i);
    v.set$indexB(t5[i]);
    var wALocal = $.index(proxyA.get$vertices(), v.get$indexA());
    var wBLocal = $.index(proxyB.get$vertices(), v.get$indexB());
    $.Transform_mulToOut(transformA, wALocal, v.get$wA());
    $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
    v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
    v.set$a(0);
  }
  if ($.gtB(this.count, 1)) {
    var metric1 = cache.metric;
    var metric2 = this.getMetric$0();
    if (typeof metric1 !== 'number')
      throw $.iae(metric1);
    if ($.ltB(metric2, 0.5 * metric1) || $.ltB(2 * metric1, metric2) || $.ltB(metric2, 1.192e-7))
      this.count = 0;
  }
  if ($.eqB(this.count, 0)) {
    if (0 >= t2)
      throw $.ioore(0);
    v = t1[0];
    v.set$indexA(0);
    v.set$indexB(0);
    wALocal = $.index(proxyA.get$vertices(), 0);
    wBLocal = $.index(proxyB.get$vertices(), 0);
    $.Transform_mulToOut(transformA, wALocal, v.get$wA());
    $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
    v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
    this.count = 1;
  }
},
 readCache$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      var cache = env0;
      var proxyA = env1;
      var transformA = env2;
      var proxyB = env3;
      var transformB = env4;
      t2 = env5;
      t1 = env6;
      t3 = env7;
      break;
    case 2:
      cache = env0;
      proxyA = env1;
      transformA = env2;
      proxyB = env3;
      transformB = env4;
      t2 = env5;
      t1 = env6;
      t3 = env7;
      t5 = env8;
      break;
  }
  switch (state0) {
    case 0:
      this.count = cache.count;
      var t1 = this.vertices;
      var t2 = t1.length;
      var t3 = cache.indexA;
    case 1:
      state0 = 0;
      var t5 = cache.indexB;
    case 2:
      state0 = 0;
      var i = 0;
      for (; $.ltB(i, this.count); ++i) {
        if (i >= t2)
          throw $.ioore(i);
        var v = t1[i];
        v.set$indexA($.index(t3, i));
        v.set$indexB($.index(t5, i));
        var wALocal = $.index(proxyA.get$vertices(), v.get$indexA());
        var wBLocal = $.index(proxyB.get$vertices(), v.get$indexB());
        $.Transform_mulToOut(transformA, wALocal, v.get$wA());
        $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
        v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
        v.set$a(0);
      }
      if ($.gtB(this.count, 1)) {
        var metric1 = cache.metric;
        var metric2 = this.getMetric$0();
        if (typeof metric1 !== 'number')
          throw $.iae(metric1);
        if ($.ltB(metric2, 0.5 * metric1) || $.ltB(2 * metric1, metric2) || $.ltB(metric2, 1.192e-7))
          this.count = 0;
      }
      if ($.eqB(this.count, 0)) {
        if (0 >= t2)
          throw $.ioore(0);
        v = t1[0];
        v.set$indexA(0);
        v.set$indexB(0);
        wALocal = $.index(proxyA.get$vertices(), 0);
        wBLocal = $.index(proxyB.get$vertices(), 0);
        $.Transform_mulToOut(transformA, wALocal, v.get$wA());
        $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
        v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
        this.count = 1;
      }
  }
},
 writeCache$1: function(cache) {
  cache.metric = this.getMetric$0();
  cache.count = this.count;
  var t1 = cache.indexA;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.writeCache$1$bailout(1, cache, t1, 0, 0);
  var t3 = this.vertices;
  var t4 = t3.length;
  var t5 = cache.indexB;
  if (typeof t5 !== 'object' || t5 === null || (t5.constructor !== Array || !!t5.immutable$list) && !t5.is$JavaScriptIndexingBehavior())
    return this.writeCache$1$bailout(2, t3, t1, t5, t4);
  var i = 0;
  for (; $.ltB(i, this.count); ++i) {
    if (i >= t4)
      throw $.ioore(i);
    var t2 = t3[i].get$indexA();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
    t2 = t3[i].get$indexB();
    if (i >= t5.length)
      throw $.ioore(i);
    t5[i] = t2;
  }
},
 writeCache$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var cache = env0;
      t1 = env1;
      break;
    case 2:
      t3 = env0;
      t1 = env1;
      t5 = env2;
      t4 = env3;
      break;
  }
  switch (state0) {
    case 0:
      cache.metric = this.getMetric$0();
      cache.count = this.count;
      var t1 = cache.indexA;
    case 1:
      state0 = 0;
      var t3 = this.vertices;
      var t4 = t3.length;
      var t5 = cache.indexB;
    case 2:
      state0 = 0;
      var i = 0;
      for (; $.ltB(i, this.count); ++i) {
        if (i >= t4)
          throw $.ioore(i);
        $.indexSet(t1, i, t3[i].get$indexA());
        $.indexSet(t5, i, t3[i].get$indexB());
      }
  }
},
 getSearchDirection$1: function(out) {
  switch (this.count) {
    case 1:
      out.setFrom$1(this.v1.w).negateLocal$0();
      return;
    case 2:
      var t1 = this.e12;
      var t2 = t1.setFrom$1(this.v2.w);
      var t3 = this.v1.w;
      t2.subLocal$1(t3);
      out.setFrom$1(t3).negateLocal$0();
      if ($.gtB($.sub($.mul(t1.x, out.y), $.mul(t1.y, out.x)), 0))
        $.Vector_crossNumAndVectorToOut(1, t1, out);
      else
        $.Vector_crossVectorAndNumToOut(t1, 1, out);
      break;
    default:
      out.setZero$0();
      return;
  }
},
 getClosestPoint$1: function(out) {
  switch (this.count) {
    case 0:
      out.setZero$0();
      return;
    case 1:
      out.setFrom$1(this.v1.w);
      return;
    case 2:
      var t1 = this.case22;
      var t2 = this.v2;
      t1.setFrom$1(t2.w).mulLocal$1(t2.a);
      var t3 = this.case2;
      var t4 = this.v1;
      t3.setFrom$1(t4.w).mulLocal$1(t4.a).addLocal$1(t1);
      out.setFrom$1(t3);
      return;
    case 3:
      out.setZero$0();
      return;
    default:
      out.setZero$0();
      return;
  }
},
 getWitnessPoints$2: function(pA, pB) {
  switch (this.count) {
    case 0:
      break;
    case 1:
      var t1 = this.v1;
      pA.setFrom$1(t1.wA);
      pB.setFrom$1(t1.wB);
      break;
    case 2:
      t1 = this.case2;
      var t2 = this.v1;
      t1.setFrom$1(t2.wA).mulLocal$1(t2.a);
      var t3 = this.v2;
      pA.setFrom$1(t3.wA).mulLocal$1(t3.a).addLocal$1(t1);
      t1.setFrom$1(t2.wB).mulLocal$1(t2.a);
      pB.setFrom$1(t3.wB).mulLocal$1(t3.a).addLocal$1(t1);
      break;
    case 3:
      t1 = this.v1;
      pA.setFrom$1(t1.wA).mulLocal$1(t1.a);
      t2 = this.case3;
      t3 = this.v2;
      t2.setFrom$1(t3.wA).mulLocal$1(t3.a);
      var t4 = this.case33;
      var t5 = this.v3;
      t4.setFrom$1(t5.wA).mulLocal$1(t5.a);
      pA.addLocal$1(t2).addLocal$1(t4);
      pB.setFrom$1(pA);
      break;
    default:
      break;
  }
},
 getMetric$0: function() {
  switch (this.count) {
    case 0:
      return 0;
    case 1:
      return 0;
    case 2:
      return $.sqrt($.MathBox_distanceSquared(this.v1.w, this.v2.w));
    case 3:
      var t1 = this.case3;
      var t2 = t1.setFrom$1(this.v2.w);
      var t3 = this.v1.w;
      t2.subLocal$1(t3);
      t2 = this.case33;
      t2.setFrom$1(this.v3.w).subLocal$1(t3);
      return $.sub($.mul(t1.x, t2.y), $.mul(t1.y, t2.x));
    default:
      return 0;
  }
},
 solve2$0: function() {
  var t1 = this.v1;
  var w1 = t1.w;
  var t2 = this.v2;
  var w2 = t2.w;
  var t3 = this.e12;
  t3.setFrom$1(w2).subLocal$1(w1);
  var t4 = w1.x;
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(1, t4, t1, w1, t2, w2, t3, 0);
  var t6 = t3.x;
  if (typeof t6 !== 'number')
    return this.solve2$0$bailout(2, t4, t6, t1, w1, t2, w2, t3);
  t4 *= t6;
  var t8 = w1.y;
  if (typeof t8 !== 'number')
    return this.solve2$0$bailout(3, w2, t8, t1, t2, t4, t3, 0);
  var t10 = t3.y;
  if (typeof t10 !== 'number')
    return this.solve2$0$bailout(4, w2, t8, t10, t1, t2, t4, t3);
  var d12_2 = -(t4 + t8 * t10);
  if (d12_2 <= 0) {
    t1.a = 1;
    this.count = 1;
    return;
  }
  t4 = w2.x;
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(5, d12_2, t4, t1, t2, w2, t3, 0);
  t6 = t4 * t6;
  t4 = w2.y;
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(7, d12_2, t6, t1, t4, t2, t3, 0);
  var d12_1 = t6 + t4 * t10;
  if (d12_1 <= 0) {
    t2.a = 1;
    this.count = 1;
    t1.setFrom$1(t2);
    return;
  }
  var inv_d12 = 1 / (d12_1 + d12_2);
  t1.a = d12_1 * inv_d12;
  t2.a = d12_2 * inv_d12;
  this.count = 2;
},
 solve2$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t4 = env0;
      t1 = env1;
      w1 = env2;
      t2 = env3;
      w2 = env4;
      t3 = env5;
      break;
    case 2:
      t4 = env0;
      t6 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      break;
    case 3:
      w2 = env0;
      t4 = env1;
      t1 = env2;
      t2 = env3;
      t6 = env4;
      t3 = env5;
      break;
    case 4:
      w2 = env0;
      t4 = env1;
      t9 = env2;
      t1 = env3;
      t2 = env4;
      t6 = env5;
      t3 = env6;
      break;
    case 5:
      d12_2 = env0;
      t4 = env1;
      t1 = env2;
      t2 = env3;
      w2 = env4;
      t3 = env5;
      break;
    case 6:
      d12_2 = env0;
      t4 = env1;
      t1 = env2;
      t6 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      break;
    case 7:
      d12_2 = env0;
      t6 = env1;
      t1 = env2;
      t4 = env3;
      t2 = env4;
      t3 = env5;
      break;
    case 8:
      d12_2 = env0;
      t6 = env1;
      t1 = env2;
      t4 = env3;
      t2 = env4;
      t3 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.v1;
      var w1 = t1.w;
      var t2 = this.v2;
      var w2 = t2.w;
      var t3 = this.e12;
      t3.setFrom$1(w2).subLocal$1(w1);
      var t4 = w1.x;
    case 1:
      state0 = 0;
      var t6 = t3.x;
    case 2:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t4 = w1.y;
    case 3:
      state0 = 0;
      var t9 = t3.y;
    case 4:
      state0 = 0;
      var d12_2 = $.neg($.add(t6, $.mul(t4, t9)));
      if ($.leB(d12_2, 0)) {
        t1.a = 1;
        this.count = 1;
        return;
      }
      t4 = w2.x;
    case 5:
      state0 = 0;
      t6 = t3.x;
    case 6:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t4 = w2.y;
    case 7:
      state0 = 0;
      t3 = t3.y;
    case 8:
      state0 = 0;
      var d12_1 = $.add(t6, $.mul(t4, t3));
      if ($.leB(d12_1, 0)) {
        t2.a = 1;
        this.count = 1;
        t1.setFrom$1(t2);
        return;
      }
      t3 = $.add(d12_1, d12_2);
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      var inv_d12 = 1 / t3;
      t1.a = $.mul(d12_1, inv_d12);
      t2.a = $.mul(d12_2, inv_d12);
      this.count = 2;
  }
},
 solve3$0: function() {
  var t1 = this.v1;
  var w1 = t1.w;
  var t2 = this.v2;
  var w2 = t2.w;
  var t3 = this.v3;
  var w3 = t3.w;
  var t4 = this.e12;
  t4.setFrom$1(w2).subLocal$1(w1);
  var t5 = w1.x;
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(1, t1, w1, t2, w2, t3, w3, t4, t5, 0, 0, 0, 0, 0, 0, 0, 0);
  var t7 = t4.x;
  if (typeof t7 !== 'number')
    return this.solve3$0$bailout(2, t1, w1, t2, w2, t3, w3, t4, t5, t7, 0, 0, 0, 0, 0, 0, 0);
  t5 *= t7;
  var t9 = w1.y;
  if (typeof t9 !== 'number')
    return this.solve3$0$bailout(3, t5, t1, w1, t2, w2, t3, w3, t4, t9, 0, 0, 0, 0, 0, 0, 0);
  var t11 = t4.y;
  if (typeof t11 !== 'number')
    return this.solve3$0$bailout(4, t5, t1, w1, t2, w2, t3, w3, t4, t9, t11, 0, 0, 0, 0, 0, 0);
  var w1e12 = t5 + t9 * t11;
  t5 = w2.x;
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(5, t5, t1, w1, t2, w2, t3, w3, t4, w1e12, 0, 0, 0, 0, 0, 0, 0);
  t7 = t5 * t7;
  t5 = w2.y;
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(7, t5, t1, w1, t2, w2, t3, w3, t4, t7, w1e12, 0, 0, 0, 0, 0, 0);
  var w2e12 = t7 + t5 * t11;
  var d12_2 = -w1e12;
  t7 = this.e13;
  t7.setFrom$1(w3).subLocal$1(w1);
  var t15 = w1.x;
  if (typeof t15 !== 'number')
    return this.solve3$0$bailout(9, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, t15, 0, 0, 0, 0, 0);
  var t17 = t7.x;
  if (typeof t17 !== 'number')
    return this.solve3$0$bailout(10, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, t15, t17, 0, 0, 0, 0);
  t15 *= t17;
  var t19 = w1.y;
  if (typeof t19 !== 'number')
    return this.solve3$0$bailout(11, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t15, t7, t19, 0, 0, 0, 0);
  var t21 = t7.y;
  if (typeof t21 !== 'number')
    return this.solve3$0$bailout(12, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t15, t7, t19, t21, 0, 0, 0);
  var w1e13 = t15 + t19 * t21;
  t15 = w3.x;
  if (typeof t15 !== 'number')
    return this.solve3$0$bailout(13, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w1e13, t7, t15, 0, 0, 0, 0);
  t17 = t15 * t17;
  t15 = w3.y;
  if (typeof t15 !== 'number')
    return this.solve3$0$bailout(15, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w1e13, t7, t17, t15, 0, 0, 0);
  var w3e13 = t17 + t15 * t21;
  var d13_2 = -w1e13;
  t17 = this.e23;
  t17.setFrom$1(w3).subLocal$1(w2);
  var t25 = w2.x;
  if (typeof t25 !== 'number')
    return this.solve3$0$bailout(17, t17, w2e12, t25, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, w3e13, d13_2, 0, 0);
  var t27 = t17.x;
  if (typeof t27 !== 'number')
    return this.solve3$0$bailout(18, t17, w2e12, t25, d12_2, t1, w1, t2, w2, t3, w3, t4, t27, t7, w3e13, d13_2, 0);
  var t29 = t25 * t27;
  var t30 = w2.y;
  if (typeof t30 !== 'number')
    return this.solve3$0$bailout(19, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t29, t30, t7, w3e13, d13_2, 0);
  var t32 = t17.y;
  if (typeof t32 !== 'number')
    return this.solve3$0$bailout(20, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t32, t29, t30, t7, w3e13, d13_2);
  var w2e23 = t29 + t30 * t32;
  t29 = w3.x;
  if (typeof t29 !== 'number')
    return this.solve3$0$bailout(21, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t29, t7, w3e13, d13_2, 0);
  t27 = t29 * t27;
  var t35 = w3.y;
  if (typeof t35 !== 'number')
    return this.solve3$0$bailout(23, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t35, t27, t7, w3e13, d13_2);
  var w3e23 = t27 + t35 * t32;
  var d23_2 = -w2e23;
  t27 = t4.x;
  if (typeof t27 !== 'number')
    return this.solve3$0$bailout(25, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t27, t7, w3e23, d23_2, w3e13, d13_2, 0);
  var t38 = t7.y;
  if (typeof t38 !== 'number')
    return this.solve3$0$bailout(26, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t27, t38, t7, w3e23, d23_2, w3e13, d13_2);
  t38 = t27 * t38;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    return this.solve3$0$bailout(27, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, w3e23, d23_2, w3e13, d13_2, t38, 0);
  t7 = t7.x;
  if (typeof t7 !== 'number')
    return this.solve3$0$bailout(28, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, w3e23, d23_2, w3e13, d13_2, t38, 0);
  var n123 = t38 - t4 * t7;
  t38 = t25 * t35;
  var d123_1 = n123 * (t38 - t30 * t29);
  var t41 = w1.y;
  if (typeof t41 !== 'number')
    return this.solve3$0$bailout(34, w2e12, d12_2, t1, n123, t2, w2, t3, w3, w1, d123_1, t29, t41, w3e23, d23_2, w3e13, d13_2);
  t29 *= t41;
  var t43 = w1.x;
  if (typeof t43 !== 'number')
    return this.solve3$0$bailout(36, w2e12, d12_2, t1, n123, t2, w2, t3, w1, d123_1, t29, w3e23, t35, d23_2, t43, w3e13, d13_2);
  var d123_2 = n123 * (t29 - t35 * t43);
  t30 = t43 * t30;
  var d123_3 = n123 * (t30 - t41 * t25);
  if (d12_2 <= 0 && d13_2 <= 0) {
    t1.a = 1;
    this.count = 1;
    return;
  }
  if (w2e12 > 0 && d12_2 > 0 && d123_3 <= 0) {
    var inv_d12 = 1 / (w2e12 + d12_2);
    t1.a = w2e12 * inv_d12;
    t2.a = d12_2 * inv_d12;
    this.count = 2;
    return;
  }
  if (w3e13 > 0 && d13_2 > 0 && d123_2 <= 0) {
    var inv_d13 = 1 / (w3e13 + d13_2);
    t1.a = w3e13 * inv_d13;
    t3.a = d13_2 * inv_d13;
    this.count = 2;
    t2.setFrom$1(t3);
    return;
  }
  if (w2e12 <= 0 && d23_2 <= 0) {
    t2.a = 1;
    this.count = 1;
    t1.setFrom$1(t2);
    return;
  }
  if (w3e13 <= 0 && w3e23 <= 0) {
    t3.a = 1;
    this.count = 1;
    t1.setFrom$1(t3);
    return;
  }
  if (w3e23 > 0 && d23_2 > 0 && d123_1 <= 0) {
    var inv_d23 = 1 / (w3e23 + d23_2);
    t2.a = w3e23 * inv_d23;
    t3.a = d23_2 * inv_d23;
    this.count = 2;
    t1.setFrom$1(t3);
    return;
  }
  var inv_d123 = 1 / (d123_1 + d123_2 + d123_3);
  t1.a = d123_1 * inv_d123;
  t2.a = d123_2 * inv_d123;
  t3.a = d123_3 * inv_d123;
  this.count = 3;
},
 solve3$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15) {
  switch (state0) {
    case 1:
      t1 = env0;
      w1 = env1;
      t2 = env2;
      w2 = env3;
      t3 = env4;
      w3 = env5;
      t4 = env6;
      t5 = env7;
      break;
    case 2:
      t1 = env0;
      w1 = env1;
      t2 = env2;
      w2 = env3;
      t3 = env4;
      w3 = env5;
      t4 = env6;
      t5 = env7;
      t7 = env8;
      break;
    case 3:
      t7 = env0;
      t1 = env1;
      w1 = env2;
      t2 = env3;
      w2 = env4;
      t3 = env5;
      w3 = env6;
      t4 = env7;
      t5 = env8;
      break;
    case 4:
      t7 = env0;
      t1 = env1;
      w1 = env2;
      t2 = env3;
      w2 = env4;
      t3 = env5;
      w3 = env6;
      t4 = env7;
      t5 = env8;
      t10 = env9;
      break;
    case 5:
      t7 = env0;
      t1 = env1;
      w1 = env2;
      t2 = env3;
      w2 = env4;
      t3 = env5;
      w3 = env6;
      t4 = env7;
      w1e12 = env8;
      break;
    case 6:
      t7 = env0;
      t13 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      w1e12 = env9;
      break;
    case 7:
      t7 = env0;
      t1 = env1;
      w1 = env2;
      t2 = env3;
      w2 = env4;
      t3 = env5;
      w3 = env6;
      t4 = env7;
      t13 = env8;
      w1e12 = env9;
      break;
    case 8:
      t7 = env0;
      t1 = env1;
      w1 = env2;
      t2 = env3;
      w2 = env4;
      t3 = env5;
      w3 = env6;
      t4 = env7;
      t13 = env8;
      w1e12 = env9;
      t16 = env10;
      break;
    case 9:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t13 = env9;
      t18 = env10;
      break;
    case 10:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t13 = env9;
      t18 = env10;
      t20 = env11;
      break;
    case 11:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t20 = env9;
      t13 = env10;
      t18 = env11;
      break;
    case 12:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t20 = env9;
      t13 = env10;
      t18 = env11;
      t23 = env12;
      break;
    case 13:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      w1e13 = env9;
      t13 = env10;
      t20 = env11;
      break;
    case 14:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      w1e13 = env9;
      t13 = env10;
      t20 = env11;
      t26 = env12;
      break;
    case 15:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      w1e13 = env9;
      t13 = env10;
      t26 = env11;
      t20 = env12;
      break;
    case 16:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      w1e13 = env9;
      t13 = env10;
      t26 = env11;
      t20 = env12;
      t29 = env13;
      break;
    case 17:
      t26 = env0;
      w2e12 = env1;
      t31 = env2;
      d12_2 = env3;
      t1 = env4;
      w1 = env5;
      t2 = env6;
      w2 = env7;
      t3 = env8;
      w3 = env9;
      t4 = env10;
      t13 = env11;
      w3e13 = env12;
      d13_2 = env13;
      break;
    case 18:
      t26 = env0;
      w2e12 = env1;
      t31 = env2;
      d12_2 = env3;
      t1 = env4;
      w1 = env5;
      t2 = env6;
      w2 = env7;
      t3 = env8;
      w3 = env9;
      t4 = env10;
      t33 = env11;
      t13 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 19:
      t26 = env0;
      w2e12 = env1;
      d12_2 = env2;
      t1 = env3;
      w1 = env4;
      t2 = env5;
      w2 = env6;
      t3 = env7;
      w3 = env8;
      t4 = env9;
      t33 = env10;
      t31 = env11;
      t13 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 20:
      t26 = env0;
      w2e12 = env1;
      d12_2 = env2;
      t1 = env3;
      w1 = env4;
      t2 = env5;
      w2 = env6;
      t3 = env7;
      w3 = env8;
      t4 = env9;
      t36 = env10;
      t33 = env11;
      t31 = env12;
      t13 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 21:
      t26 = env0;
      w2e12 = env1;
      d12_2 = env2;
      t1 = env3;
      w1 = env4;
      t2 = env5;
      w2 = env6;
      t3 = env7;
      w3 = env8;
      t4 = env9;
      w2e23 = env10;
      t33 = env11;
      t13 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 22:
      t26 = env0;
      w2e12 = env1;
      d12_2 = env2;
      t1 = env3;
      w1 = env4;
      t2 = env5;
      w2 = env6;
      t3 = env7;
      w3 = env8;
      t4 = env9;
      t39 = env10;
      w2e23 = env11;
      t33 = env12;
      t13 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 23:
      t26 = env0;
      w2e12 = env1;
      d12_2 = env2;
      t1 = env3;
      w1 = env4;
      t2 = env5;
      w2 = env6;
      t3 = env7;
      w3 = env8;
      t4 = env9;
      w2e23 = env10;
      t33 = env11;
      t39 = env12;
      t13 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 24:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t26 = env9;
      w2e23 = env10;
      t33 = env11;
      t39 = env12;
      t13 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 25:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t39 = env9;
      t13 = env10;
      w3e23 = env11;
      d23_2 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 26:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t39 = env9;
      t44 = env10;
      t13 = env11;
      w3e23 = env12;
      d23_2 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 27:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t13 = env9;
      w3e23 = env10;
      d23_2 = env11;
      w3e13 = env12;
      d13_2 = env13;
      t44 = env14;
      break;
    case 28:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      w1 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t4 = env8;
      t13 = env9;
      w3e23 = env10;
      d23_2 = env11;
      w3e13 = env12;
      d13_2 = env13;
      t44 = env14;
      break;
    case 29:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      w1 = env8;
      t44 = env9;
      w3e23 = env10;
      d23_2 = env11;
      w3e13 = env12;
      d13_2 = env13;
      break;
    case 30:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      w1 = env8;
      t44 = env9;
      t48 = env10;
      w3e23 = env11;
      d23_2 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 31:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t48 = env8;
      w1 = env9;
      t44 = env10;
      w3e23 = env11;
      d23_2 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 32:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      t48 = env8;
      w1 = env9;
      t44 = env10;
      t51 = env11;
      w3e23 = env12;
      d23_2 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 33:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      w1 = env8;
      d123_1 = env9;
      t53 = env10;
      w3e23 = env11;
      d23_2 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 34:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w3 = env7;
      w1 = env8;
      d123_1 = env9;
      t53 = env10;
      t55 = env11;
      w3e23 = env12;
      d23_2 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 35:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w1 = env7;
      d123_1 = env8;
      t55 = env9;
      w3e23 = env10;
      t53 = env11;
      d23_2 = env12;
      w3e13 = env13;
      d13_2 = env14;
      break;
    case 36:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w1 = env7;
      d123_1 = env8;
      t55 = env9;
      w3e23 = env10;
      t53 = env11;
      d23_2 = env12;
      t58 = env13;
      w3e13 = env14;
      d13_2 = env15;
      break;
    case 37:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w1 = env7;
      d123_1 = env8;
      w3e23 = env9;
      d23_2 = env10;
      t60 = env11;
      w3e13 = env12;
      d123_2 = env13;
      d13_2 = env14;
      break;
    case 38:
      w2e12 = env0;
      d12_2 = env1;
      t1 = env2;
      n123 = env3;
      t2 = env4;
      w2 = env5;
      t3 = env6;
      w1 = env7;
      d123_1 = env8;
      w3e23 = env9;
      d23_2 = env10;
      t60 = env11;
      t62 = env12;
      w3e13 = env13;
      d123_2 = env14;
      d13_2 = env15;
      break;
    case 39:
      w2e12 = env0;
      t62 = env1;
      d12_2 = env2;
      t1 = env3;
      n123 = env4;
      t2 = env5;
      w2 = env6;
      t3 = env7;
      d123_1 = env8;
      w3e23 = env9;
      d23_2 = env10;
      t60 = env11;
      w3e13 = env12;
      d123_2 = env13;
      d13_2 = env14;
      break;
    case 40:
      w2e12 = env0;
      t62 = env1;
      d12_2 = env2;
      t1 = env3;
      n123 = env4;
      t2 = env5;
      t3 = env6;
      d123_1 = env7;
      w3e23 = env8;
      d23_2 = env9;
      t60 = env10;
      w3e13 = env11;
      d123_2 = env12;
      d13_2 = env13;
      t65 = env14;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.v1;
      var w1 = t1.w;
      var t2 = this.v2;
      var w2 = t2.w;
      var t3 = this.v3;
      var w3 = t3.w;
      var t4 = this.e12;
      t4.setFrom$1(w2).subLocal$1(w1);
      var t5 = w1.x;
    case 1:
      state0 = 0;
      var t7 = t4.x;
    case 2:
      state0 = 0;
      t7 = $.mul(t5, t7);
      t5 = w1.y;
    case 3:
      state0 = 0;
      var t10 = t4.y;
    case 4:
      state0 = 0;
      var w1e12 = $.add(t7, $.mul(t5, t10));
      t7 = w2.x;
    case 5:
      state0 = 0;
      var t13 = t4.x;
    case 6:
      state0 = 0;
      t13 = $.mul(t7, t13);
      t7 = w2.y;
    case 7:
      state0 = 0;
      var t16 = t4.y;
    case 8:
      state0 = 0;
      var w2e12 = $.add(t13, $.mul(t7, t16));
      var d12_2 = $.neg(w1e12);
      t13 = this.e13;
      t13.setFrom$1(w3).subLocal$1(w1);
      var t18 = w1.x;
    case 9:
      state0 = 0;
      var t20 = t13.x;
    case 10:
      state0 = 0;
      t20 = $.mul(t18, t20);
      t18 = w1.y;
    case 11:
      state0 = 0;
      var t23 = t13.y;
    case 12:
      state0 = 0;
      var w1e13 = $.add(t20, $.mul(t18, t23));
      t20 = w3.x;
    case 13:
      state0 = 0;
      var t26 = t13.x;
    case 14:
      state0 = 0;
      t26 = $.mul(t20, t26);
      t20 = w3.y;
    case 15:
      state0 = 0;
      var t29 = t13.y;
    case 16:
      state0 = 0;
      var w3e13 = $.add(t26, $.mul(t20, t29));
      var d13_2 = $.neg(w1e13);
      t26 = this.e23;
      t26.setFrom$1(w3).subLocal$1(w2);
      var t31 = w2.x;
    case 17:
      state0 = 0;
      var t33 = t26.x;
    case 18:
      state0 = 0;
      t33 = $.mul(t31, t33);
      t31 = w2.y;
    case 19:
      state0 = 0;
      var t36 = t26.y;
    case 20:
      state0 = 0;
      var w2e23 = $.add(t33, $.mul(t31, t36));
      t33 = w3.x;
    case 21:
      state0 = 0;
      var t39 = t26.x;
    case 22:
      state0 = 0;
      t39 = $.mul(t33, t39);
      t33 = w3.y;
    case 23:
      state0 = 0;
      t26 = t26.y;
    case 24:
      state0 = 0;
      var w3e23 = $.add(t39, $.mul(t33, t26));
      var d23_2 = $.neg(w2e23);
      t39 = t4.x;
    case 25:
      state0 = 0;
      var t44 = t13.y;
    case 26:
      state0 = 0;
      t44 = $.mul(t39, t44);
      t4 = t4.y;
    case 27:
      state0 = 0;
      t13 = t13.x;
    case 28:
      state0 = 0;
      var n123 = $.sub(t44, $.mul(t4, t13));
      t44 = w2.x;
    case 29:
      state0 = 0;
      var t48 = w3.y;
    case 30:
      state0 = 0;
      t48 = $.mul(t44, t48);
      t44 = w2.y;
    case 31:
      state0 = 0;
      var t51 = w3.x;
    case 32:
      state0 = 0;
      var d123_1 = $.mul(n123, $.sub(t48, $.mul(t44, t51)));
      var t53 = w3.x;
    case 33:
      state0 = 0;
      var t55 = w1.y;
    case 34:
      state0 = 0;
      t55 = $.mul(t53, t55);
      t53 = w3.y;
    case 35:
      state0 = 0;
      var t58 = w1.x;
    case 36:
      state0 = 0;
      var d123_2 = $.mul(n123, $.sub(t55, $.mul(t53, t58)));
      var t60 = w1.x;
    case 37:
      state0 = 0;
      var t62 = w2.y;
    case 38:
      state0 = 0;
      t62 = $.mul(t60, t62);
      t60 = w1.y;
    case 39:
      state0 = 0;
      var t65 = w2.x;
    case 40:
      state0 = 0;
      var d123_3 = $.mul(n123, $.sub(t62, $.mul(t60, t65)));
      if ($.leB(d12_2, 0) && $.leB(d13_2, 0)) {
        t1.a = 1;
        this.count = 1;
        return;
      }
      if ($.gtB(w2e12, 0) && $.gtB(d12_2, 0) && $.leB(d123_3, 0)) {
        t3 = $.add(w2e12, d12_2);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        var inv_d12 = 1 / t3;
        t1.a = $.mul(w2e12, inv_d12);
        t2.a = $.mul(d12_2, inv_d12);
        this.count = 2;
        return;
      }
      if ($.gtB(w3e13, 0) && $.gtB(d13_2, 0) && $.leB(d123_2, 0)) {
        t4 = $.add(w3e13, d13_2);
        if (typeof t4 !== 'number')
          throw $.iae(t4);
        var inv_d13 = 1 / t4;
        t1.a = $.mul(w3e13, inv_d13);
        t3.a = $.mul(d13_2, inv_d13);
        this.count = 2;
        t2.setFrom$1(t3);
        return;
      }
      if ($.leB(w2e12, 0) && $.leB(d23_2, 0)) {
        t2.a = 1;
        this.count = 1;
        t1.setFrom$1(t2);
        return;
      }
      if ($.leB(w3e13, 0) && $.leB(w3e23, 0)) {
        t3.a = 1;
        this.count = 1;
        t1.setFrom$1(t3);
        return;
      }
      if ($.gtB(w3e23, 0) && $.gtB(d23_2, 0) && $.leB(d123_1, 0)) {
        t4 = $.add(w3e23, d23_2);
        if (typeof t4 !== 'number')
          throw $.iae(t4);
        var inv_d23 = 1 / t4;
        t2.a = $.mul(w3e23, inv_d23);
        t3.a = $.mul(d23_2, inv_d23);
        this.count = 2;
        t1.setFrom$1(t3);
        return;
      }
      t4 = $.add($.add(d123_1, d123_2), d123_3);
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      var inv_d123 = 1 / t4;
      t1.a = $.mul(d123_1, inv_d123);
      t2.a = $.mul(d123_2, inv_d123);
      t3.a = $.mul(d123_3, inv_d123);
      this.count = 3;
  }
},
 Simplex$0: function() {
  var t1 = this.vertices;
  var t2 = this.v1;
  var t3 = t1.length;
  if (0 >= t3)
    throw $.ioore(0);
  t1[0] = t2;
  t2 = this.v2;
  if (1 >= t3)
    throw $.ioore(1);
  t1[1] = t2;
  t2 = this.v3;
  if (2 >= t3)
    throw $.ioore(2);
  t1[2] = t2;
}
};

$$.SimplexCache = {"":
 ["metric?", "count?", "indexA?", "indexB?"],
 "super": "Object",
 setFrom$1: function(sc) {
  var t1 = this.indexA;
  $.setRange$3(t1, 0, $.get$length(t1), sc.get$indexA());
  t1 = this.indexB;
  $.setRange$3(t1, 0, $.get$length(t1), sc.get$indexB());
  this.metric = sc.get$metric();
  this.count = sc.get$count();
},
 SimplexCache$0: function() {
  var t1 = this.indexA;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.SimplexCache$0$bailout(1, t1, 0);
  var t3 = this.indexB;
  if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
    return this.SimplexCache$0$bailout(2, t1, t3);
  var t5 = t1.length;
  var t6 = t3.length;
  var i = 0;
  for (; i < 3; ++i) {
    if (i >= t5)
      throw $.ioore(i);
    t1[i] = 2147483647;
    if (i >= t6)
      throw $.ioore(i);
    t3[i] = 2147483647;
  }
},
 SimplexCache$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.indexA;
    case 1:
      state0 = 0;
      var t3 = this.indexB;
    case 2:
      state0 = 0;
      var i = 0;
      for (; i < 3; ++i) {
        $.indexSet(t1, i, 2147483647);
        $.indexSet(t3, i, 2147483647);
      }
  }
}
};

$$.SimplexVertex = {"":
 ["wA?", "wB?", "w?", "a=", "indexA=", "indexB="],
 "super": "Object",
 setFrom$1: function(sv) {
  this.wA.setFrom$1(sv.get$wA());
  this.wB.setFrom$1(sv.get$wB());
  this.w.setFrom$1(sv.get$w());
  this.a = sv.get$a();
  this.indexA = sv.get$indexA();
  this.indexB = sv.get$indexB();
},
 toString$0: function() {
  return 'wA: ' + $.S(this.wA) + ', wB: ' + $.S(this.wB) + ', w: ' + $.S(this.w);
}
};

$$.TimeOfImpact = {"":
 ["cache", "distanceInput", "xfA", "xfB", "distanceOutput", "fcn", "indexes", "sweepA", "sweepB", "pool"],
 "super": "Object",
 timeOfImpact$2: function(output, input) {
  var t1 = $.TimeOfImpact_toiCalls;
  if (typeof t1 !== 'number')
    return this.timeOfImpact$2$bailout(1, output, input, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  $.TimeOfImpact_toiCalls = t1 + 1;
  output.state = 0;
  output.t = input.tMax;
  var proxyA = input.proxyA;
  var proxyB = input.proxyB;
  var t3 = this.sweepA;
  t3.setFrom$1(input.sweepA);
  var t4 = this.sweepB;
  t4.setFrom$1(input.sweepB);
  t3.normalize$0();
  t4.normalize$0();
  var tMax = input.tMax;
  var t5 = proxyA.get$radius();
  if (typeof t5 !== 'number')
    return this.timeOfImpact$2$bailout(2, output, t3, t4, tMax, t5, proxyA, proxyB, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var t7 = proxyB.get$radius();
  if (typeof t7 !== 'number')
    return this.timeOfImpact$2$bailout(3, output, t3, t4, tMax, t5, t7, proxyA, proxyB, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var target = $.max(0.005, t5 + t7 - 0.015);
  var t9 = this.cache;
  t9.count = 0;
  var t10 = this.distanceInput;
  t10.proxyA = proxyA;
  t10.proxyB = proxyB;
  t10.useRadii = false;
  for (var t1 = this.xfA, t2 = this.xfB, t5 = this.pool, t6 = this.distanceOutput, t7 = target + 0.00125, t8 = this.fcn, t11 = this.indexes, t12 = target - 0.00125, t13 = t11.length, iter = 0, t14 = 0; true;) {
    t3.getTransform$2(t1, t14);
    t4.getTransform$2(t2, t14);
    t10.transformA = t1;
    t10.transformB = t2;
    t5.distance.distance$3(t6, t9, t10);
    var t15 = t6.distance;
    if (typeof t15 !== 'number')
      return this.timeOfImpact$2$bailout(4, output, t13, t4, t3, t15, target, tMax, t5, t8, t7, t9, t10, t11, t6, t1, t2, iter, t14, t12, proxyA, proxyB, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if (t15 <= 0) {
      output.state = 2;
      output.t = 0;
      break;
    }
    if (t15 < t7) {
      output.state = 3;
      output.t = t14;
      break;
    }
    t8.initialize$6(t9, proxyA, t3, proxyB, t4, t14);
    for (var t20 = tMax, pushBackIter = 0; done = false, true;) {
      var s2 = t8.findMinSeparation$2(t11, t20);
      if (typeof s2 !== 'number')
        return this.timeOfImpact$2$bailout(6, output, t13, t4, t3, pushBackIter, target, tMax, t5, t8, t7, t9, t10, t11, s2, proxyA, t1, t2, iter, t6, t14, t12, t20, proxyB, 0, 0, 0, 0, 0, 0, 0);
      if (s2 > t7) {
        output.state = 4;
        output.t = tMax;
        var done = true;
        break;
      }
      if (s2 > t12) {
        t14 = t20;
        done = false;
        break;
      }
      if (0 >= t13)
        throw $.ioore(0);
      t15 = t11[0];
      if (1 >= t13)
        throw $.ioore(1);
      var s1 = t8.evaluate$3(t15, t11[1], t14);
      if (typeof s1 !== 'number')
        return this.timeOfImpact$2$bailout(7, output, pushBackIter, t8, s2, t11, t12, proxyA, proxyB, t3, t13, t4, target, tMax, t7, s1, t9, t10, t1, t2, iter, t14, t5, t20, t6, 0, 0, 0, 0, 0, 0);
      if (s1 < t12) {
        output.state = 1;
        output.t = t14;
        done = true;
        break;
      }
      if (s1 <= t7) {
        output.state = 3;
        output.t = t14;
        done = true;
        break;
      }
      for (var a1 = t14, a2 = t20, rootIterCount = 0; true;) {
        var t = (rootIterCount & 1) === 1 ? a1 + (target - s1) * (a2 - a1) / (s2 - s1) : 0.5 * (a1 + a2);
        var s = t8.evaluate$3(t11[0], t11[1], t);
        if (typeof s !== 'number')
          return this.timeOfImpact$2$bailout(8, output, t6, pushBackIter, rootIterCount, t8, s2, a2, a1, t11, s1, t12, proxyA, proxyB, t3, t13, t4, target, tMax, t7, t9, t10, t, t1, t2, iter, t14, t5, t20, s, 0);
        t15 = $.abs(s - target);
        if (typeof t15 !== 'number')
          return this.timeOfImpact$2$bailout(9, output, t15, t6, pushBackIter, rootIterCount, t8, s2, a2, a1, t11, s1, t12, proxyA, proxyB, t3, t13, t4, target, tMax, t7, t9, t10, t, t1, t2, iter, t14, t5, t20, s);
        if (t15 < 0.00125) {
          t20 = t;
          break;
        }
        if (s > target) {
          s1 = s;
          a1 = t;
        } else {
          a2 = t;
          s2 = s;
        }
        ++rootIterCount;
        t15 = $.TimeOfImpact_toiRootIters;
        if (typeof t15 !== 'number')
          return this.timeOfImpact$2$bailout(10, output, pushBackIter, t8, t11, s2, a2, a1, s1, rootIterCount, t15, t12, proxyA, proxyB, t3, t13, t4, target, tMax, t7, t9, t10, t1, t2, iter, t14, t5, t20, t6, 0, 0);
        $.TimeOfImpact_toiRootIters = t15 + 1;
        if (rootIterCount === 50)
          break;
      }
      $.TimeOfImpact_toiMaxRootIters = $.max($.TimeOfImpact_toiMaxRootIters, rootIterCount);
      ++pushBackIter;
      if (pushBackIter === 8) {
        done = false;
        break;
      }
    }
    ++iter;
    t15 = $.TimeOfImpact_toiIters;
    if (typeof t15 !== 'number')
      return this.timeOfImpact$2$bailout(11, output, t13, t4, t3, target, tMax, t8, iter, t15, t12, t7, t10, t11, t9, proxyB, t1, t2, t6, done, t5, proxyA, t14, 0, 0, 0, 0, 0, 0, 0, 0);
    $.TimeOfImpact_toiIters = t15 + 1;
    if (done)
      break;
    if (iter === 1000) {
      output.state = 1;
      output.t = t14;
      break;
    }
  }
  $.TimeOfImpact_toiMaxIters = $.max($.TimeOfImpact_toiMaxIters, iter);
},
 timeOfImpact$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22, env23, env24, env25, env26, env27, env28, env29) {
  switch (state0) {
    case 1:
      var output = env0;
      var input = env1;
      t1 = env2;
      break;
    case 2:
      output = env0;
      t3 = env1;
      t4 = env2;
      tMax = env3;
      t5 = env4;
      proxyA = env5;
      proxyB = env6;
      break;
    case 3:
      output = env0;
      t3 = env1;
      t4 = env2;
      tMax = env3;
      t5 = env4;
      t7 = env5;
      proxyA = env6;
      proxyB = env7;
      break;
    case 4:
      output = env0;
      t13 = env1;
      t4 = env2;
      t3 = env3;
      t15 = env4;
      target = env5;
      tMax = env6;
      t5 = env7;
      t8 = env8;
      t7 = env9;
      t9 = env10;
      t10 = env11;
      t11 = env12;
      t6 = env13;
      t1 = env14;
      t2 = env15;
      iter = env16;
      t14 = env17;
      t12 = env18;
      proxyA = env19;
      proxyB = env20;
      break;
    case 5:
      output = env0;
      t13 = env1;
      t4 = env2;
      t3 = env3;
      target = env4;
      tMax = env5;
      t15 = env6;
      t8 = env7;
      t7 = env8;
      t9 = env9;
      t5 = env10;
      t11 = env11;
      t6 = env12;
      t10 = env13;
      t1 = env14;
      t2 = env15;
      iter = env16;
      t14 = env17;
      t12 = env18;
      proxyA = env19;
      proxyB = env20;
      break;
    case 6:
      output = env0;
      t13 = env1;
      t4 = env2;
      t3 = env3;
      pushBackIter = env4;
      target = env5;
      tMax = env6;
      t5 = env7;
      t8 = env8;
      t7 = env9;
      t9 = env10;
      t10 = env11;
      t11 = env12;
      s2 = env13;
      proxyA = env14;
      t1 = env15;
      t2 = env16;
      iter = env17;
      t6 = env18;
      t14 = env19;
      t12 = env20;
      t20 = env21;
      proxyB = env22;
      break;
    case 7:
      output = env0;
      pushBackIter = env1;
      t8 = env2;
      s2 = env3;
      t11 = env4;
      t12 = env5;
      proxyA = env6;
      proxyB = env7;
      t3 = env8;
      t13 = env9;
      t4 = env10;
      target = env11;
      tMax = env12;
      t7 = env13;
      s1 = env14;
      t9 = env15;
      t10 = env16;
      t1 = env17;
      t2 = env18;
      iter = env19;
      t14 = env20;
      t5 = env21;
      t20 = env22;
      t6 = env23;
      break;
    case 8:
      output = env0;
      t6 = env1;
      pushBackIter = env2;
      rootIterCount = env3;
      t8 = env4;
      s2 = env5;
      a2 = env6;
      a1 = env7;
      t11 = env8;
      s1 = env9;
      t12 = env10;
      proxyA = env11;
      proxyB = env12;
      t3 = env13;
      t13 = env14;
      t4 = env15;
      target = env16;
      tMax = env17;
      t7 = env18;
      t9 = env19;
      t10 = env20;
      t = env21;
      t1 = env22;
      t2 = env23;
      iter = env24;
      t14 = env25;
      t5 = env26;
      t20 = env27;
      s = env28;
      break;
    case 9:
      output = env0;
      t15 = env1;
      t6 = env2;
      pushBackIter = env3;
      rootIterCount = env4;
      t8 = env5;
      s2 = env6;
      a2 = env7;
      a1 = env8;
      t11 = env9;
      s1 = env10;
      t12 = env11;
      proxyA = env12;
      proxyB = env13;
      t3 = env14;
      t13 = env15;
      t4 = env16;
      target = env17;
      tMax = env18;
      t7 = env19;
      t9 = env20;
      t10 = env21;
      t = env22;
      t1 = env23;
      t2 = env24;
      iter = env25;
      t14 = env26;
      t5 = env27;
      t20 = env28;
      s = env29;
      break;
    case 10:
      output = env0;
      pushBackIter = env1;
      t8 = env2;
      t11 = env3;
      s2 = env4;
      a2 = env5;
      a1 = env6;
      s1 = env7;
      rootIterCount = env8;
      t15 = env9;
      t12 = env10;
      proxyA = env11;
      proxyB = env12;
      t3 = env13;
      t13 = env14;
      t4 = env15;
      target = env16;
      tMax = env17;
      t7 = env18;
      t9 = env19;
      t10 = env20;
      t1 = env21;
      t2 = env22;
      iter = env23;
      t14 = env24;
      t5 = env25;
      t20 = env26;
      t6 = env27;
      break;
    case 11:
      output = env0;
      t13 = env1;
      t4 = env2;
      t3 = env3;
      target = env4;
      tMax = env5;
      t8 = env6;
      iter = env7;
      t15 = env8;
      t12 = env9;
      t7 = env10;
      t10 = env11;
      t11 = env12;
      t9 = env13;
      proxyB = env14;
      t1 = env15;
      t2 = env16;
      t6 = env17;
      done = env18;
      t5 = env19;
      proxyA = env20;
      t14 = env21;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = $.TimeOfImpact_toiCalls;
    case 1:
      state0 = 0;
      $.TimeOfImpact_toiCalls = $.add(t1, 1);
      output.state = 0;
      output.t = input.tMax;
      var proxyA = input.proxyA;
      var proxyB = input.proxyB;
      var t3 = this.sweepA;
      t3.setFrom$1(input.sweepA);
      var t4 = this.sweepB;
      t4.setFrom$1(input.sweepB);
      t3.normalize$0();
      t4.normalize$0();
      var tMax = input.tMax;
      var t5 = proxyA.get$radius();
    case 2:
      state0 = 0;
      var t7 = proxyB.get$radius();
    case 3:
      state0 = 0;
      var target = $.max(0.005, $.sub($.add(t5, t7), 0.015));
      var t9 = this.cache;
      t9.count = 0;
      var t10 = this.distanceInput;
      t10.proxyA = proxyA;
      t10.proxyB = proxyB;
      t10.useRadii = false;
      t1 = this.xfA;
      var t2 = this.xfB;
      t5 = this.pool;
      var t6 = this.distanceOutput;
      t7 = target + 0.00125;
      var t8 = this.fcn;
      var t11 = this.indexes;
      var t12 = target - 0.00125;
      var t13 = t11.length;
      var iter = 0;
      var t14 = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t3.getTransform$2(t1, t14);
              t4.getTransform$2(t2, t14);
              t10.transformA = t1;
              t10.transformB = t2;
              t5.distance.distance$3(t6, t9, t10);
              var t15 = t6.distance;
            case 4:
              state0 = 0;
              if ($.leB(t15, 0)) {
                output.state = 2;
                output.t = 0;
                break L0;
              }
              t15 = t6.distance;
            case 5:
              state0 = 0;
              if ($.ltB(t15, t7)) {
                output.state = 3;
                output.t = t14;
                break L0;
              }
              t8.initialize$6(t9, proxyA, t3, proxyB, t4, t14);
              var t20 = tMax;
              var pushBackIter = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      var done = false;
                      if (!true)
                        break L1;
                      var s2 = t8.findMinSeparation$2(t11, t20);
                    case 6:
                      state0 = 0;
                      if ($.gtB(s2, t7)) {
                        output.state = 4;
                        output.t = tMax;
                        done = true;
                        break L1;
                      }
                      if ($.gtB(s2, t12)) {
                        t14 = t20;
                        done = false;
                        break L1;
                      }
                      if (0 >= t13)
                        throw $.ioore(0);
                      t15 = t11[0];
                      if (1 >= t13)
                        throw $.ioore(1);
                      var s1 = t8.evaluate$3(t15, t11[1], t14);
                    case 7:
                      state0 = 0;
                      if ($.ltB(s1, t12)) {
                        output.state = 1;
                        output.t = t14;
                        done = true;
                        break L1;
                      }
                      if ($.leB(s1, t7)) {
                        output.state = 3;
                        output.t = t14;
                        done = true;
                        break L1;
                      }
                      var a1 = t14;
                      var a2 = t20;
                      var rootIterCount = 0;
                    default:
                      L2:
                        while (true)
                          switch (state0) {
                            case 0:
                              if (!true)
                                break L2;
                              if ((rootIterCount & 1) === 1) {
                                if (typeof s1 !== 'number')
                                  throw $.iae(s1);
                                t15 = (target - s1) * (a2 - a1);
                                var t16 = $.sub(s2, s1);
                                if (typeof t16 !== 'number')
                                  throw $.iae(t16);
                                var t = a1 + t15 / t16;
                              } else
                                t = 0.5 * (a1 + a2);
                              var s = t8.evaluate$3(t11[0], t11[1], t);
                            case 8:
                              state0 = 0;
                              t15 = $.abs($.sub(s, target));
                            case 9:
                              state0 = 0;
                              if ($.ltB(t15, 0.00125)) {
                                t20 = t;
                                break L2;
                              }
                              if ($.gtB(s, target)) {
                                s1 = s;
                                a1 = t;
                              } else {
                                a2 = t;
                                s2 = s;
                              }
                              ++rootIterCount;
                              t15 = $.TimeOfImpact_toiRootIters;
                            case 10:
                              state0 = 0;
                              $.TimeOfImpact_toiRootIters = $.add(t15, 1);
                              if (rootIterCount === 50)
                                break L2;
                          }
                      $.TimeOfImpact_toiMaxRootIters = $.max($.TimeOfImpact_toiMaxRootIters, rootIterCount);
                      ++pushBackIter;
                      if (pushBackIter === 8) {
                        done = false;
                        break L1;
                      }
                  }
              ++iter;
              t15 = $.TimeOfImpact_toiIters;
            case 11:
              state0 = 0;
              $.TimeOfImpact_toiIters = $.add(t15, 1);
              if (done)
                break L0;
              if (iter === 1000) {
                output.state = 1;
                output.t = t14;
                break L0;
              }
          }
      $.TimeOfImpact_toiMaxIters = $.max($.TimeOfImpact_toiMaxIters, iter);
  }
},
 TimeOfImpact$_construct$1: function(argPool) {
  var t1 = this.indexes;
  var t2 = t1.length;
  if (0 >= t2)
    throw $.ioore(0);
  t1[0] = 0;
  if (1 >= t2)
    throw $.ioore(1);
  t1[1] = 0;
  $.TimeOfImpact_toiCalls = 0;
  $.TimeOfImpact_toiIters = 0;
  $.TimeOfImpact_toiMaxIters = 0;
  $.TimeOfImpact_toiRootIters = 0;
  $.TimeOfImpact_toiMaxRootIters = 0;
}
};

$$.SeparationFunction = {"":
 ["proxyA=", "proxyB=", "type=", "localPoint?", "axis", "sweepA", "sweepB", "localPointA", "localPointB", "pointA", "pointB", "localPointA1", "localPointA2", "normal?", "localPointB1", "localPointB2", "axisA", "axisB", "temp", "xfa", "xfb"],
 "super": "Object",
 initialize$6: function(cache, argProxyA, argSweepA, argProxyB, argSweepB, t1) {
  this.proxyA = argProxyA;
  this.proxyB = argProxyB;
  var count = cache.count;
  if (typeof count !== 'number')
    return this.initialize$6$bailout(1, cache, argSweepA, argSweepB, t1, count, 0, 0, 0, 0, 0, 0, 0, 0);
  this.sweepA = argSweepA;
  this.sweepB = argSweepB;
  var t3 = this.sweepA;
  var t4 = this.xfa;
  t3.getTransform$2(t4, t1);
  t3 = this.sweepB;
  var t5 = this.xfb;
  t3.getTransform$2(t5, t1);
  if (count === 1) {
    this.type = 0;
    t1 = this.localPointA;
    var t2 = this.proxyA.get$vertices();
    if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(2, cache, t4, t5, t1, t2, 0, 0, 0, 0, 0, 0, 0, 0);
    var t6 = cache.indexA;
    if (typeof t6 !== 'string' && (typeof t6 !== 'object' || t6 === null || t6.constructor !== Array && !t6.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(3, cache, t4, t5, t1, t6, t2, 0, 0, 0, 0, 0, 0, 0);
    if (0 >= t6.length)
      throw $.ioore(0);
    t6 = t6[0];
    if (t6 !== (t6 | 0))
      throw $.iae(t6);
    if (t6 < 0 || t6 >= t2.length)
      throw $.ioore(t6);
    t1.setFrom$1(t2[t6]);
    var t8 = this.localPointB;
    var t9 = this.proxyB.get$vertices();
    if (typeof t9 !== 'string' && (typeof t9 !== 'object' || t9 === null || t9.constructor !== Array && !t9.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(4, cache, t4, t5, t1, t9, t8, 0, 0, 0, 0, 0, 0, 0);
    var t11 = cache.indexB;
    if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(5, t4, t5, t1, t9, t8, t11, 0, 0, 0, 0, 0, 0, 0);
    if (0 >= t11.length)
      throw $.ioore(0);
    t11 = t11[0];
    if (t11 !== (t11 | 0))
      throw $.iae(t11);
    if (t11 < 0 || t11 >= t9.length)
      throw $.ioore(t11);
    t8.setFrom$1(t9[t11]);
    var t13 = this.pointA;
    $.Transform_mulToOut(t4, t1, t13);
    t1 = this.pointB;
    $.Transform_mulToOut(t5, t8, t1);
    t8 = this.axis;
    t8.setFrom$1(t1).subLocal$1(t13);
    return t8.normalize$0();
  } else {
    t1 = cache.indexA;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(6, cache, t4, t5, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    t3 = t1.length;
    if (0 >= t3)
      throw $.ioore(0);
    t6 = t1[0];
    if (1 >= t3)
      throw $.ioore(1);
    t6 = $.eqB(t6, t1[1]);
    var t7 = cache.indexB;
    if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(7, t6, t4, t5, t7, t1, 0, 0, 0, 0, 0, 0, 0, 0);
    t9 = this.pointA;
    var t10 = this.axis;
    t11 = this.temp;
    var t12 = this.normal;
    t13 = this.localPoint;
    var t14 = this.pointB;
    if (t6) {
      this.type = 2;
      t2 = this.localPointB1;
      t3 = this.proxyB.get$vertices();
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(8, t14, t1, t9, t2, t7, t11, t4, t5, t10, t3, t12, t13, 0);
      if (0 >= t7.length)
        throw $.ioore(0);
      t8 = t7[0];
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t3.length)
        throw $.ioore(t8);
      t2.setFrom$1(t3[t8]);
      var t15 = this.localPointB2;
      var t16 = this.proxyB.get$vertices();
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(9, t14, t1, t9, t2, t7, t15, t11, t4, t5, t10, t12, t13, t16);
      if (1 >= t7.length)
        throw $.ioore(1);
      t7 = t7[1];
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t16.length)
        throw $.ioore(t7);
      t15.setFrom$1(t16[t7]);
      t11.setFrom$1(t15).subLocal$1(t2);
      $.Vector_crossVectorAndNumToOut(t11, 1, t10);
      t10.normalize$0();
      $.Matrix22_mulMatrixAndVectorToOut(t5.rotation, t10, t12);
      t13.setFrom$1(t2);
      t13.addLocal$1(t15);
      t13.mulLocal$1(0.5);
      $.Transform_mulToOut(t5, t13, t14);
      t13 = this.localPointA;
      t5 = this.proxyA.get$vertices();
      if (typeof t5 !== 'string' && (typeof t5 !== 'object' || t5 === null || t5.constructor !== Array && !t5.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(10, t11, t14, t4, t13, t10, t1, t9, t12, t5, 0, 0, 0, 0);
      if (0 >= t1.length)
        throw $.ioore(0);
      t1 = t1[0];
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t5.length)
        throw $.ioore(t1);
      t13.setFrom$1(t5[t1]);
      $.Transform_mulToOut(t4, t13, t9);
      t11.setFrom$1(t9);
      t11.subLocal$1(t14);
      t14 = t11.x;
      if (typeof t14 !== 'number')
        return this.initialize$6$bailout(11, t11, t12, t10, t14, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      t13 = t12.x;
      if (typeof t13 !== 'number')
        return this.initialize$6$bailout(12, t11, t12, t10, t14, t13, 0, 0, 0, 0, 0, 0, 0, 0);
      t13 = t14 * t13;
      t11 = t11.y;
      if (typeof t11 !== 'number')
        return this.initialize$6$bailout(13, t11, t12, t10, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      t12 = t12.y;
      if (typeof t12 !== 'number')
        return this.initialize$6$bailout(14, t11, t12, t10, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      var s = t13 + t11 * t12;
      if (s < 0) {
        t10.negateLocal$0();
        s = -s;
      }
      return s;
    } else {
      this.type = 1;
      t2 = this.localPointA1;
      t3 = this.proxyA.get$vertices();
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(15, t14, t1, t9, t7, t3, t11, t4, t5, t10, t2, t12, t13, 0);
      if (0 >= t1.length)
        throw $.ioore(0);
      t8 = t1[0];
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t3.length)
        throw $.ioore(t8);
      t2.setFrom$1(t3[t8]);
      t15 = this.localPointA2;
      t16 = this.proxyA.get$vertices();
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(16, t14, t1, t9, t7, t11, t4, t5, t10, t2, t15, t12, t13, t16);
      if (1 >= t1.length)
        throw $.ioore(1);
      t1 = t1[1];
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t16.length)
        throw $.ioore(t1);
      t15.setFrom$1(t16[t1]);
      t11.setFrom$1(t15);
      t11.subLocal$1(t2);
      $.Vector_crossVectorAndNumToOut(t11, 1, t10);
      t10.normalize$0();
      $.Matrix22_mulMatrixAndVectorToOut(t4.rotation, t10, t12);
      t13.setFrom$1(t2);
      t13.addLocal$1(t15);
      t13.mulLocal$1(0.5);
      $.Transform_mulToOut(t4, t13, t9);
      t13 = this.localPointB;
      t4 = this.proxyB.get$vertices();
      if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(17, t11, t14, t5, t10, t4, t9, t12, t7, t13, 0, 0, 0, 0);
      if (0 >= t7.length)
        throw $.ioore(0);
      t7 = t7[0];
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t4.length)
        throw $.ioore(t7);
      t13.setFrom$1(t4[t7]);
      $.Transform_mulToOut(t5, t13, t14);
      t11.setFrom$1(t14);
      t11.subLocal$1(t9);
      t9 = t11.x;
      if (typeof t9 !== 'number')
        return this.initialize$6$bailout(18, t11, t12, t9, t10, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      t13 = t12.x;
      if (typeof t13 !== 'number')
        return this.initialize$6$bailout(19, t11, t12, t9, t13, t10, 0, 0, 0, 0, 0, 0, 0, 0);
      t13 = t9 * t13;
      t11 = t11.y;
      if (typeof t11 !== 'number')
        return this.initialize$6$bailout(20, t12, t11, t10, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      t12 = t12.y;
      if (typeof t12 !== 'number')
        return this.initialize$6$bailout(21, t11, t12, t13, t10, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      s = t13 + t11 * t12;
      if (s < 0) {
        t10.negateLocal$0();
        s = -s;
      }
      return s;
    }
  }
},
 initialize$6$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12) {
  switch (state0) {
    case 1:
      var cache = env0;
      var argSweepA = env1;
      var argSweepB = env2;
      var t1 = env3;
      count = env4;
      break;
    case 2:
      cache = env0;
      t4 = env1;
      t5 = env2;
      t1 = env3;
      t2 = env4;
      break;
    case 3:
      cache = env0;
      t4 = env1;
      t5 = env2;
      t1 = env3;
      t6 = env4;
      t2 = env5;
      break;
    case 4:
      cache = env0;
      t4 = env1;
      t5 = env2;
      t1 = env3;
      t9 = env4;
      t8 = env5;
      break;
    case 5:
      t4 = env0;
      t5 = env1;
      t1 = env2;
      t9 = env3;
      t8 = env4;
      t11 = env5;
      break;
    case 6:
      cache = env0;
      t4 = env1;
      t5 = env2;
      t1 = env3;
      break;
    case 7:
      t3 = env0;
      t4 = env1;
      t5 = env2;
      t6 = env3;
      t1 = env4;
      break;
    case 8:
      t13 = env0;
      t1 = env1;
      t8 = env2;
      t2 = env3;
      t6 = env4;
      t10 = env5;
      t4 = env6;
      t5 = env7;
      t9 = env8;
      t3 = env9;
      t11 = env10;
      t12 = env11;
      break;
    case 9:
      t13 = env0;
      t1 = env1;
      t8 = env2;
      t2 = env3;
      t6 = env4;
      t14 = env5;
      t10 = env6;
      t4 = env7;
      t5 = env8;
      t9 = env9;
      t11 = env10;
      t12 = env11;
      t15 = env12;
      break;
    case 10:
      t10 = env0;
      t13 = env1;
      t4 = env2;
      t12 = env3;
      t9 = env4;
      t1 = env5;
      t8 = env6;
      t11 = env7;
      t5 = env8;
      break;
    case 11:
      t10 = env0;
      t11 = env1;
      t9 = env2;
      t13 = env3;
      break;
    case 12:
      t10 = env0;
      t11 = env1;
      t9 = env2;
      t13 = env3;
      t12 = env4;
      break;
    case 13:
      t10 = env0;
      t11 = env1;
      t9 = env2;
      t12 = env3;
      break;
    case 14:
      t10 = env0;
      t11 = env1;
      t9 = env2;
      t12 = env3;
      break;
    case 15:
      t13 = env0;
      t1 = env1;
      t8 = env2;
      t6 = env3;
      t3 = env4;
      t10 = env5;
      t4 = env6;
      t5 = env7;
      t9 = env8;
      t2 = env9;
      t11 = env10;
      t12 = env11;
      break;
    case 16:
      t13 = env0;
      t1 = env1;
      t8 = env2;
      t6 = env3;
      t10 = env4;
      t4 = env5;
      t5 = env6;
      t9 = env7;
      t2 = env8;
      t14 = env9;
      t11 = env10;
      t12 = env11;
      t15 = env12;
      break;
    case 17:
      t10 = env0;
      t13 = env1;
      t5 = env2;
      t9 = env3;
      t4 = env4;
      t8 = env5;
      t11 = env6;
      t6 = env7;
      t12 = env8;
      break;
    case 18:
      t10 = env0;
      t11 = env1;
      t8 = env2;
      t9 = env3;
      break;
    case 19:
      t10 = env0;
      t11 = env1;
      t8 = env2;
      t12 = env3;
      t9 = env4;
      break;
    case 20:
      t11 = env0;
      t10 = env1;
      t9 = env2;
      t12 = env3;
      break;
    case 21:
      t10 = env0;
      t11 = env1;
      t12 = env2;
      t9 = env3;
      break;
  }
  switch (state0) {
    case 0:
      this.proxyA = argProxyA;
      this.proxyB = argProxyB;
      var count = cache.count;
    case 1:
      state0 = 0;
      this.sweepA = argSweepA;
      this.sweepB = argSweepB;
      var t3 = this.sweepA;
      var t4 = this.xfa;
      t3.getTransform$2(t4, t1);
      t3 = this.sweepB;
      var t5 = this.xfb;
      t3.getTransform$2(t5, t1);
    default:
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && $.eqB(count, 1))
        switch (state0) {
          case 0:
            this.type = 0;
            t1 = this.localPointA;
            var t2 = this.proxyA.get$vertices();
          case 2:
            state0 = 0;
            var t6 = cache.indexA;
          case 3:
            state0 = 0;
            t1.setFrom$1($.index(t2, $.index(t6, 0)));
            var t8 = this.localPointB;
            var t9 = this.proxyB.get$vertices();
          case 4:
            state0 = 0;
            var t11 = cache.indexB;
          case 5:
            state0 = 0;
            t8.setFrom$1($.index(t9, $.index(t11, 0)));
            var t13 = this.pointA;
            $.Transform_mulToOut(t4, t1, t13);
            t1 = this.pointB;
            $.Transform_mulToOut(t5, t8, t1);
            t8 = this.axis;
            t8.setFrom$1(t1).subLocal$1(t13);
            return t8.normalize$0();
        }
      else
        switch (state0) {
          case 0:
            t1 = cache.indexA;
          case 6:
            state0 = 0;
            t3 = $.eqB($.index(t1, 0), $.index(t1, 1));
            t6 = cache.indexB;
          case 7:
            state0 = 0;
            t8 = this.pointA;
            t9 = this.axis;
            var t10 = this.temp;
            t11 = this.normal;
            var t12 = this.localPoint;
            t13 = this.pointB;
          default:
            if (state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 0 && t3)
              switch (state0) {
                case 0:
                  this.type = 2;
                  t2 = this.localPointB1;
                  t3 = this.proxyB.get$vertices();
                case 8:
                  state0 = 0;
                  t2.setFrom$1($.index(t3, $.index(t6, 0)));
                  var t14 = this.localPointB2;
                  var t15 = this.proxyB.get$vertices();
                case 9:
                  state0 = 0;
                  t14.setFrom$1($.index(t15, $.index(t6, 1)));
                  t10.setFrom$1(t14).subLocal$1(t2);
                  $.Vector_crossVectorAndNumToOut(t10, 1, t9);
                  t9.normalize$0();
                  $.Matrix22_mulMatrixAndVectorToOut(t5.rotation, t9, t11);
                  t12.setFrom$1(t2);
                  t12.addLocal$1(t14);
                  t12.mulLocal$1(0.5);
                  $.Transform_mulToOut(t5, t12, t13);
                  t12 = this.localPointA;
                  t5 = this.proxyA.get$vertices();
                case 10:
                  state0 = 0;
                  t12.setFrom$1($.index(t5, $.index(t1, 0)));
                  $.Transform_mulToOut(t4, t12, t8);
                  t10.setFrom$1(t8);
                  t10.subLocal$1(t13);
                  t13 = t10.x;
                case 11:
                  state0 = 0;
                  t12 = t11.x;
                case 12:
                  state0 = 0;
                  t12 = $.mul(t13, t12);
                  t10 = t10.y;
                case 13:
                  state0 = 0;
                  t11 = t11.y;
                case 14:
                  state0 = 0;
                  var s = $.add(t12, $.mul(t10, t11));
                  if ($.ltB(s, 0)) {
                    t9.negateLocal$0();
                    s = $.neg(s);
                  }
                  return s;
              }
            else
              switch (state0) {
                case 0:
                  this.type = 1;
                  t2 = this.localPointA1;
                  t3 = this.proxyA.get$vertices();
                case 15:
                  state0 = 0;
                  t2.setFrom$1($.index(t3, $.index(t1, 0)));
                  t14 = this.localPointA2;
                  t15 = this.proxyA.get$vertices();
                case 16:
                  state0 = 0;
                  t14.setFrom$1($.index(t15, $.index(t1, 1)));
                  t10.setFrom$1(t14);
                  t10.subLocal$1(t2);
                  $.Vector_crossVectorAndNumToOut(t10, 1, t9);
                  t9.normalize$0();
                  $.Matrix22_mulMatrixAndVectorToOut(t4.rotation, t9, t11);
                  t12.setFrom$1(t2);
                  t12.addLocal$1(t14);
                  t12.mulLocal$1(0.5);
                  $.Transform_mulToOut(t4, t12, t8);
                  t12 = this.localPointB;
                  t4 = this.proxyB.get$vertices();
                case 17:
                  state0 = 0;
                  t12.setFrom$1($.index(t4, $.index(t6, 0)));
                  $.Transform_mulToOut(t5, t12, t13);
                  t10.setFrom$1(t13);
                  t10.subLocal$1(t8);
                  t8 = t10.x;
                case 18:
                  state0 = 0;
                  t12 = t11.x;
                case 19:
                  state0 = 0;
                  t12 = $.mul(t8, t12);
                  t10 = t10.y;
                case 20:
                  state0 = 0;
                  t11 = t11.y;
                case 21:
                  state0 = 0;
                  s = $.add(t12, $.mul(t10, t11));
                  if ($.ltB(s, 0)) {
                    t9.negateLocal$0();
                    s = $.neg(s);
                  }
                  return s;
              }
        }
  }
},
 findMinSeparation$2: function(indexes, t) {
  var t1 = this.sweepA;
  var t2 = this.xfa;
  t1.getTransform$2(t2, t);
  t1 = this.sweepB;
  var t3 = this.xfb;
  t1.getTransform$2(t3, t);
  switch (this.type) {
    case 0:
      t1 = t2.rotation;
      var t4 = this.axis;
      var t5 = this.axisA;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t4, t5);
      t1 = t3.rotation;
      var t6 = t4.negateLocal$0();
      var t7 = this.axisB;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t6, t7);
      t4.negateLocal$0();
      t5 = this.proxyA.getSupport$1(t5);
      t6 = indexes.length;
      if (0 >= t6)
        throw $.ioore(0);
      indexes[0] = t5;
      t7 = this.proxyB.getSupport$1(t7);
      if (1 >= t6)
        throw $.ioore(1);
      indexes[1] = t7;
      t7 = this.localPointA;
      t7.setFrom$1($.index(this.proxyA.get$vertices(), indexes[0]));
      t5 = this.localPointB;
      t5.setFrom$1($.index(this.proxyB.get$vertices(), indexes[1]));
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t7, t1);
      t7 = this.pointB;
      $.Transform_mulToOut(t3, t5, t7);
      t1 = t7.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t4.x), $.mul(t1.get$y(), t4.y));
    case 1:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t4, t1);
      t5.negateLocal$0();
      t4 = t3.rotation;
      t2 = this.axisB;
      $.Matrix22_mulTransMatrixAndVectorToOut(t4, t5, t2);
      t5.negateLocal$0();
      t4 = indexes.length;
      if (0 >= t4)
        throw $.ioore(0);
      indexes[0] = -1;
      t2 = this.proxyB.getSupport$1(t2);
      if (1 >= t4)
        throw $.ioore(1);
      indexes[1] = t2;
      t2 = this.localPointB;
      t2.setFrom$1($.index(this.proxyB.get$vertices(), indexes[1]));
      t6 = this.pointB;
      $.Transform_mulToOut(t3, t2, t6);
      t1 = t6.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    case 2:
      t1 = t3.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t4, t1);
      t4 = t2.rotation;
      t3 = t5.negateLocal$0();
      t6 = this.axisA;
      $.Matrix22_mulTransMatrixAndVectorToOut(t4, t3, t6);
      t5.negateLocal$0();
      if (1 >= indexes.length)
        throw $.ioore(1);
      indexes[1] = -1;
      indexes[0] = this.proxyA.getSupport$1(t6);
      t3 = this.localPointA;
      t3.setFrom$1($.index(this.proxyA.get$vertices(), indexes[0]));
      t4 = this.pointA;
      $.Transform_mulToOut(t2, t3, t4);
      t1 = t4.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    default:
      t1 = indexes.length;
      if (0 >= t1)
        throw $.ioore(0);
      indexes[0] = -1;
      if (1 >= t1)
        throw $.ioore(1);
      indexes[1] = -1;
      return 0;
  }
},
 evaluate$3: function(indexA, indexB, t) {
  var t1 = this.sweepA;
  var t2 = this.xfa;
  t1.getTransform$2(t2, t);
  t1 = this.sweepB;
  var t3 = this.xfb;
  t1.getTransform$2(t3, t);
  switch (this.type) {
    case 0:
      t1 = t2.rotation;
      var t4 = this.axis;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t4, this.axisA);
      $.Matrix22_mulTransMatrixAndVectorToOut(t3.rotation, t4.negateLocal$0(), this.axisB);
      t4.negateLocal$0();
      t1 = this.localPointA;
      t1.setFrom$1($.index(this.proxyA.get$vertices(), indexA));
      var t5 = this.localPointB;
      t5.setFrom$1($.index(this.proxyB.get$vertices(), indexB));
      var t6 = this.pointA;
      $.Transform_mulToOut(t2, t1, t6);
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t5, t1);
      t6 = t1.subLocal$1(t6);
      return $.add($.mul(t6.get$x(), t4.x), $.mul(t6.get$y(), t4.y));
    case 1:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t4, t1);
      t5.negateLocal$0();
      $.Matrix22_mulTransMatrixAndVectorToOut(t3.rotation, t5, this.axisB);
      t5.negateLocal$0();
      t4 = this.localPointB;
      t4.setFrom$1($.index(this.proxyB.get$vertices(), indexB));
      t2 = this.pointB;
      $.Transform_mulToOut(t3, t4, t2);
      t1 = t2.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    case 2:
      t1 = t3.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t4, t1);
      $.Matrix22_mulTransMatrixAndVectorToOut(t2.rotation, t5.negateLocal$0(), this.axisA);
      t5.negateLocal$0();
      t4 = this.localPointA;
      t4.setFrom$1($.index(this.proxyA.get$vertices(), indexA));
      t3 = this.pointA;
      $.Transform_mulToOut(t2, t4, t3);
      t1 = t3.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    default:
      return 0;
  }
}
};

$$.TimeOfImpactInput = {"":
 ["proxyA?", "proxyB?", "sweepA", "sweepB", "tMax"],
 "super": "Object"
};

$$.TimeOfImpactOutput = {"":
 ["state", "t"],
 "super": "Object"
};

$$.WorldManifold = {"":
 ["normal?", "points?", "pool3", "pool4"],
 "super": "Object",
 initialize$5: function(manifold, xfA, radiusA, xfB, radiusB) {
  switch (manifold.get$type()) {
    case 0:
      var pointA = this.pool3;
      var pointB = this.pool4;
      var t1 = this.normal;
      t1.x = 1;
      t1.y = 0;
      pointA.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localPoint().get$y()));
      pointA.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localPoint().get$y()));
      pointB.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), 0).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), 0).get$localPoint().get$y()));
      pointB.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), 0).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), 0).get$localPoint().get$y()));
      if ($.gtB($.MathBox_distanceSquared(pointA, pointB), 1.4208639999999999e-14)) {
        t1.x = $.sub(pointB.x, pointA.x);
        t1.y = $.sub(pointB.y, pointA.y);
        t1.normalize$0();
      }
      var cAx = $.add($.mul(t1.x, radiusA), pointA.x);
      var cAy = $.add($.mul(t1.y, radiusA), pointA.y);
      var cBx = $.add($.mul($.neg(t1.x), radiusB), pointB.x);
      var cBy = $.add($.mul($.neg(t1.y), radiusB), pointB.y);
      var t2 = $.mul($.add(cAx, cBx), 0.5);
      var t3 = this.points;
      if (0 >= t3.length)
        throw $.ioore(0);
      t3[0].set$x(t2);
      t2 = $.mul($.add(cAy, cBy), 0.5);
      t3[0].set$y(t2);
      return;
    case 1:
      var planePoint = this.pool3;
      t1 = $.add($.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localNormal().get$x()), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localNormal().get$y()));
      t2 = this.normal;
      t2.x = t1;
      t2.y = $.add($.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localNormal().get$x()), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localNormal().get$y()));
      planePoint.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localPoint().get$y()));
      planePoint.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localPoint().get$y()));
      var clipPoint = this.pool4;
      for (var t1 = this.points, t3 = t1.length, i = 0; $.ltB(i, manifold.get$pointCount()); ++i) {
        clipPoint.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        clipPoint.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        var scalar = $.sub(radiusA, $.add($.mul($.sub(clipPoint.x, planePoint.x), t2.x), $.mul($.sub(clipPoint.y, planePoint.y), t2.y)));
        cAx = $.add($.mul(t2.x, scalar), clipPoint.x);
        cAy = $.add($.mul(t2.y, scalar), clipPoint.y);
        cBx = $.add($.mul($.neg(t2.x), radiusB), clipPoint.x);
        cBy = $.add($.mul($.neg(t2.y), radiusB), clipPoint.y);
        var t4 = $.mul($.add(cAx, cBx), 0.5);
        if (i >= t3)
          throw $.ioore(i);
        t1[i].set$x(t4);
        t4 = $.mul($.add(cAy, cBy), 0.5);
        t1[i].set$y(t4);
      }
      return;
    case 2:
      planePoint = this.pool3;
      var R = xfB.get$rotation();
      t1 = $.add($.mul(R.get$col1().get$x(), manifold.get$localNormal().get$x()), $.mul(R.get$col2().get$x(), manifold.get$localNormal().get$y()));
      t2 = this.normal;
      t2.x = t1;
      t2.y = $.add($.mul(R.get$col1().get$y(), manifold.get$localNormal().get$x()), $.mul(R.get$col2().get$y(), manifold.get$localNormal().get$y()));
      var v = manifold.get$localPoint();
      planePoint.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y()));
      planePoint.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
      clipPoint = this.pool4;
      for (t1 = this.points, t3 = t1.length, i = 0; $.ltB(i, manifold.get$pointCount()); ++i) {
        clipPoint.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        clipPoint.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        scalar = $.sub(radiusB, $.add($.mul($.sub(clipPoint.x, planePoint.x), t2.x), $.mul($.sub(clipPoint.y, planePoint.y), t2.y)));
        cBx = $.add($.mul(t2.x, scalar), clipPoint.x);
        cBy = $.add($.mul(t2.y, scalar), clipPoint.y);
        cAx = $.add($.mul($.neg(t2.x), radiusA), clipPoint.x);
        cAy = $.add($.mul($.neg(t2.y), radiusA), clipPoint.y);
        t4 = $.mul($.add(cAx, cBx), 0.5);
        if (i >= t3)
          throw $.ioore(i);
        t1[i].set$x(t4);
        t4 = $.mul($.add(cAy, cBy), 0.5);
        t1[i].set$y(t4);
      }
      t2.x = $.neg(t2.x);
      t2.y = $.neg(t2.y);
      break;
  }
},
 WorldManifold$0: function() {
  for (var t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    var t3 = $.Vector$(0, 0);
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.BroadPhase = {"":
 ["_tree", "proxyCount", "moveBuffer", "_pairBuffer", "_pairCapacity", "_pairCount", "queryProxy"],
 "super": "Object",
 createProxy$2: function(box, userData) {
  var node = this._tree.createProxy$2(box, userData);
  this.proxyCount = this.proxyCount + 1;
  this._bufferMove$1(node);
  return node;
},
 destroyProxy$1: function(proxy) {
  this._unbufferMove$1(proxy);
  this.proxyCount = this.proxyCount - 1;
  this._tree.destroyProxy$1(proxy);
},
 moveProxy$3: function(proxy, box, displacement) {
  if (this._tree.moveProxy$3(proxy, box, displacement) === true)
    this._bufferMove$1(proxy);
},
 testOverlap$2: function(proxyA, proxyB) {
  return $.AxisAlignedBox_testOverlap(proxyA.get$box(), proxyB.get$box());
},
 updatePairs$1: function(callback) {
  this._pairCount = 0;
  for (var t1 = this._tree, i = 0; t2 = this.moveBuffer, i < t2.length; ++i) {
    this.queryProxy = t2[i];
    var t2 = this.queryProxy;
    if (t2 == null)
      continue;
    t1.query$2(this, t2.get$box());
  }
  this.moveBuffer = $.ListImplementation_List(null);
  var pairBuffer = $.ListImplementation_List$from($.getRange(this._pairBuffer, 0, this._pairCount));
  $.sort(pairBuffer, new $.BroadPhase_updatePairs_anon());
  $.setRange$3(this._pairBuffer, 0, this._pairCount, pairBuffer);
  for (i = 0; i < this._pairCount;) {
    t2 = this._pairBuffer;
    if (i < 0 || i >= t2.length)
      throw $.ioore(i);
    var primaryPair = t2[i];
    callback.addPair$2(primaryPair.get$proxyA().get$userData(), primaryPair.get$proxyB().get$userData());
    ++i;
    for (var t2 = this._pairCount, t3 = this._pairBuffer, t4 = t3.length, t5 = primaryPair.get$proxyA(), t6 = primaryPair.get$proxyB(); i < t2;) {
      if (i >= t4)
        throw $.ioore(i);
      var pair = t3[i];
      var t7 = pair.get$proxyA();
      if (t7 == null ? t5 == null : t7 === t5) {
        t7 = pair.get$proxyB();
        var t8 = !(t7 == null ? t6 == null : t7 === t6);
        t7 = t8;
      } else
        t7 = true;
      if (t7)
        break;
      ++i;
    }
  }
  t1.rebalance$1(4);
},
 treeCallback$1: function(proxy) {
  if ($.eqB(proxy, this.queryProxy))
    return true;
  var t1 = this._pairCount;
  var t2 = this._pairCapacity;
  if (t1 === t2) {
    var oldBuffer = this._pairBuffer;
    this._pairCapacity = t2 * 2;
    this._pairBuffer = $.ListImplementation_List(this._pairCapacity);
    for (var i = oldBuffer.length, t1 = this._pairBuffer, t2 = t1.length, i0 = 0; i0 < i; ++i0) {
      var t3 = oldBuffer[i0];
      if (i0 >= t2)
        throw $.ioore(i0);
      t1[i0] = t3;
    }
    for (; i < this._pairCapacity; ++i) {
      t1 = this._pairBuffer;
      t2 = $.Pair$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  t1 = $.ltB(proxy.get$key(), this.queryProxy.get$key());
  t2 = this._pairBuffer;
  t3 = this._pairCount;
  if (t1) {
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3].set$proxyA(proxy);
    t1 = this.queryProxy;
    var t4 = this._pairBuffer;
    var t5 = this._pairCount;
    if (t5 < 0 || t5 >= t4.length)
      throw $.ioore(t5);
    t4[t5].set$proxyB(t1);
  } else {
    t1 = this.queryProxy;
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3].set$proxyA(t1);
    t1 = this._pairBuffer;
    t4 = this._pairCount;
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    t1[t4].set$proxyB(proxy);
  }
  this._pairCount = this._pairCount + 1;
  return true;
},
 _bufferMove$1: function(node) {
  this.moveBuffer.push(node);
},
 _unbufferMove$1: function(proxy) {
  var index = $.indexOf$1(this.moveBuffer, proxy);
  if (!(index === -1))
    $.removeRange(this.moveBuffer, index, 1);
},
 BroadPhase$0: function() {
  this.moveBuffer = $.ListImplementation_List(null);
  this._pairBuffer = $.ListImplementation_List(this._pairCapacity);
  for (var i = 0; i < this._pairCapacity; ++i) {
    var t1 = this._pairBuffer;
    var t2 = $.Pair$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
}
};

$$.DynamicTree = {"":
 ["_root", "_nodeCount", "_lastLeaf", "_insertionCount", "_path", "_nodeStack", "_drawVectors", "_nodeCounter", "_tempVector", "_tempBox", "center?", "deltaOne", "deltaTwo"],
 "super": "Object",
 createProxy$2: function(box, userData) {
  var proxy = this._allocateNode$0();
  var t1 = box.get$lowerBound().get$x();
  if (typeof t1 !== 'number')
    return this.createProxy$2$bailout(1, box, userData, proxy, t1);
  t1 -= 0.1;
  proxy.get$box().get$lowerBound().set$x(t1);
  t1 = box.get$lowerBound().get$y();
  if (typeof t1 !== 'number')
    return this.createProxy$2$bailout(2, box, userData, proxy, t1);
  t1 -= 0.1;
  proxy.get$box().get$lowerBound().set$y(t1);
  t1 = box.get$upperBound().get$x();
  if (typeof t1 !== 'number')
    return this.createProxy$2$bailout(3, box, userData, proxy, t1);
  t1 += 0.1;
  proxy.get$box().get$upperBound().set$x(t1);
  t1 = box.get$upperBound().get$y();
  if (typeof t1 !== 'number')
    return this.createProxy$2$bailout(4, userData, proxy, t1, 0);
  t1 += 0.1;
  proxy.get$box().get$upperBound().set$y(t1);
  proxy.set$userData(userData);
  this._insertLeaf$1(proxy);
  var iterationCount = $.shr(this._nodeCount, 4);
  var height = this.computeHeightFromRoot$0();
  if (typeof height !== 'number')
    return this.createProxy$2$bailout(5, height, proxy, iterationCount, 0);
  var tryCount = 0;
  while (true) {
    if (!(height > 64 && tryCount < 10))
      break;
    this.rebalance$1(iterationCount);
    height = this.computeHeightFromRoot$0();
    if (typeof height !== 'number')
      return this.createProxy$2$bailout(6, height, tryCount, proxy, iterationCount);
    ++tryCount;
  }
  return proxy;
},
 createProxy$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var box = env0;
      var userData = env1;
      proxy = env2;
      t1 = env3;
      break;
    case 2:
      box = env0;
      userData = env1;
      proxy = env2;
      t1 = env3;
      break;
    case 3:
      box = env0;
      userData = env1;
      proxy = env2;
      t1 = env3;
      break;
    case 4:
      userData = env0;
      proxy = env1;
      t1 = env2;
      break;
    case 5:
      height = env0;
      proxy = env1;
      iterationCount = env2;
      break;
    case 6:
      height = env0;
      tryCount = env1;
      proxy = env2;
      iterationCount = env3;
      break;
  }
  switch (state0) {
    case 0:
      var proxy = this._allocateNode$0();
      var t1 = box.get$lowerBound().get$x();
    case 1:
      state0 = 0;
      t1 = $.sub(t1, 0.1);
      proxy.get$box().get$lowerBound().set$x(t1);
      t1 = box.get$lowerBound().get$y();
    case 2:
      state0 = 0;
      t1 = $.sub(t1, 0.1);
      proxy.get$box().get$lowerBound().set$y(t1);
      t1 = box.get$upperBound().get$x();
    case 3:
      state0 = 0;
      t1 = $.add(t1, 0.1);
      proxy.get$box().get$upperBound().set$x(t1);
      t1 = box.get$upperBound().get$y();
    case 4:
      state0 = 0;
      t1 = $.add(t1, 0.1);
      proxy.get$box().get$upperBound().set$y(t1);
      proxy.set$userData(userData);
      this._insertLeaf$1(proxy);
      var iterationCount = $.shr(this._nodeCount, 4);
      var height = this.computeHeightFromRoot$0();
    case 5:
      state0 = 0;
      var tryCount = 0;
    case 6:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!($.gtB(height, 64) && tryCount < 10))
                break L0;
              this.rebalance$1(iterationCount);
              height = this.computeHeightFromRoot$0();
            case 6:
              state0 = 0;
              ++tryCount;
          }
      return proxy;
  }
},
 destroyProxy$1: function(toDestroy) {
  this._removeLeaf$1(toDestroy);
  this._freeNode$1(toDestroy);
},
 moveProxy$3: function(argProxy, argBox, displacement) {
  if ($.contains$1(argProxy.get$box(), argBox) === true)
    return false;
  this._removeLeaf$1(argProxy);
  var t1 = argBox.lowerBound;
  t1.set$x($.sub(t1.get$x(), 0.1));
  t1 = argBox.lowerBound;
  t1.set$y($.sub(t1.get$y(), 0.1));
  t1 = argBox.upperBound;
  t1.set$x($.add(t1.get$x(), 0.1));
  t1 = argBox.upperBound;
  t1.set$y($.add(t1.get$y(), 0.1));
  t1 = this._tempVector;
  t1.setFrom$1(displacement);
  t1.mulLocal$1(2);
  if ($.ltB(t1.x, 0)) {
    var t2 = argBox.lowerBound;
    t2.set$x($.add(t2.get$x(), t1.x));
  } else {
    t2 = argBox.upperBound;
    t2.set$x($.add(t2.get$x(), t1.x));
  }
  if ($.ltB(t1.y, 0)) {
    t2 = argBox.lowerBound;
    t2.set$y($.add(t2.get$y(), t1.y));
  } else {
    t2 = argBox.upperBound;
    t2.set$y($.add(t2.get$y(), t1.y));
  }
  argProxy.get$box().setFrom$1(argBox);
  this._insertLeaf$1(argProxy);
  return true;
},
 _allocateNode$0: function() {
  var t1 = this._nodeStack;
  if ($.isEmpty(t1) === true)
    for (var i = 0; i < 6; ++i)
      t1.addFirst$1($.DynamicTreeNode$_construct());
  var node = t1.removeFirst$0();
  node.set$parent(null);
  node.set$childOne(null);
  node.set$childTwo(null);
  node.set$userData(null);
  node.set$key(this._nodeCounter);
  this._nodeCounter = this._nodeCounter + 1;
  this._nodeCount = this._nodeCount + 1;
  return node;
},
 query$2: function(callback, argBox) {
  this._query$4(callback, argBox, this._root, 1);
},
 _query$4: function(callback, argBox, node, count) {
  if (node == null)
    return true;
  if ($.AxisAlignedBox_testOverlap(argBox, node.get$box()))
    if (node.get$isLeaf() === true) {
      if (callback.treeCallback$1(node) !== true)
        return false;
    } else {
      if (count < 64) {
        ++count;
        if (this._query$4(callback, argBox, node.get$childOne(), count) !== true)
          return false;
      }
      if (count < 64) {
        ++count;
        if (this._query$4(callback, argBox, node.get$childTwo(), count) !== true)
          return false;
      }
    }
  return true;
},
 _insertLeaf$1: function(node) {
  this._insertionCount = this._insertionCount + 1;
  if (this._root == null) {
    this._root = node;
    node.set$parent(null);
    return;
  }
  var t1 = this.center;
  t1.setFrom$1(node.get$box().get$center());
  var sibling = this._root;
  if (sibling.get$isLeaf() !== true) {
    var t2 = this.deltaOne;
    var t3 = this.deltaTwo;
    var childOne = null;
    var childTwo = null;
    do {
      childOne = sibling.get$childOne();
      childTwo = sibling.get$childTwo();
      t2.setFrom$1(childOne.get$box().get$center());
      t3.setFrom$1(childTwo.get$box().get$center());
      t2.subLocal$1(t1).absLocal$0();
      t3.subLocal$1(t1).absLocal$0();
      var t4 = t2.x;
      if (typeof t4 !== 'number')
        return this._insertLeaf$1$bailout(1, node, t3, t4, childOne, childTwo, t1, t2, 0, 0);
      var t6 = t2.y;
      if (typeof t6 !== 'number')
        return this._insertLeaf$1$bailout(2, node, t3, t4, childOne, childTwo, t6, t1, t2, 0);
      var normOne = t4 + t6;
      t6 = t3.x;
      if (typeof t6 !== 'number')
        return this._insertLeaf$1$bailout(3, node, t3, childOne, childTwo, t6, t1, normOne, t2, 0);
      var t8 = t3.y;
      if (typeof t8 !== 'number')
        return this._insertLeaf$1$bailout(4, node, t3, childOne, childTwo, t6, t8, t1, normOne, t2);
      sibling = normOne < t6 + t8 ? childOne : childTwo;
      t4 = sibling.get$isLeaf();
      if (typeof t4 !== 'boolean')
        return this._insertLeaf$1$bailout(5, childTwo, sibling, t2, node, t4, t3, t1, childOne, 0);
    } while (!t4);
  }
  var node1 = sibling.get$parent();
  var node2 = this._allocateNode$0();
  node2.set$parent(node1);
  node2.set$userData(null);
  node2.get$box().setFromCombination$2(node.get$box(), sibling.get$box());
  if (!(node1 == null)) {
    t1 = sibling.get$parent().get$childOne();
    if (t1 == null ? sibling == null : t1 === sibling)
      node1.set$childOne(node2);
    else
      node1.set$childTwo(node2);
    node2.set$childOne(sibling);
    node2.set$childTwo(node);
    sibling.set$parent(node2);
    node.set$parent(node2);
    do {
      if ($.contains$1(node1.get$box(), node2.get$box()) === true)
        break;
      node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
      var node10 = node1.get$parent();
      node2 = node1;
      node1 = node10;
    } while (!(node1 == null));
  } else {
    node2.set$childOne(sibling);
    node2.set$childTwo(node);
    sibling.set$parent(node2);
    node.set$parent(node2);
    this._root = node2;
  }
},
 _insertLeaf$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      var node = env0;
      t3 = env1;
      t4 = env2;
      childOne = env3;
      childTwo = env4;
      t1 = env5;
      t2 = env6;
      break;
    case 2:
      node = env0;
      t3 = env1;
      t4 = env2;
      childOne = env3;
      childTwo = env4;
      t6 = env5;
      t1 = env6;
      t2 = env7;
      break;
    case 3:
      node = env0;
      t3 = env1;
      childOne = env2;
      childTwo = env3;
      t6 = env4;
      t1 = env5;
      normOne = env6;
      t2 = env7;
      break;
    case 4:
      node = env0;
      t3 = env1;
      childOne = env2;
      childTwo = env3;
      t6 = env4;
      t8 = env5;
      t1 = env6;
      normOne = env7;
      t2 = env8;
      break;
    case 5:
      childTwo = env0;
      sibling = env1;
      t2 = env2;
      node = env3;
      t4 = env4;
      t3 = env5;
      t1 = env6;
      childOne = env7;
      break;
  }
  switch (state0) {
    case 0:
      this._insertionCount = this._insertionCount + 1;
      if (this._root == null) {
        this._root = node;
        node.set$parent(null);
        return;
      }
      var t1 = this.center;
      t1.setFrom$1(node.get$box().get$center());
      var sibling = this._root;
    default:
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && sibling.get$isLeaf() !== true)
        switch (state0) {
          case 0:
            var t2 = this.deltaOne;
            var t3 = this.deltaTwo;
            var childOne = null;
            var childTwo = null;
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    childOne = sibling.get$childOne();
                    childTwo = sibling.get$childTwo();
                    t2.setFrom$1(childOne.get$box().get$center());
                    t3.setFrom$1(childTwo.get$box().get$center());
                    t2.subLocal$1(t1).absLocal$0();
                    t3.subLocal$1(t1).absLocal$0();
                    var t4 = t2.x;
                  case 1:
                    state0 = 0;
                    var t6 = t2.y;
                  case 2:
                    state0 = 0;
                    var normOne = $.add(t4, t6);
                    t6 = t3.x;
                  case 3:
                    state0 = 0;
                    var t8 = t3.y;
                  case 4:
                    state0 = 0;
                    sibling = $.ltB(normOne, $.add(t6, t8)) ? childOne : childTwo;
                    t4 = sibling.get$isLeaf();
                  case 5:
                    state0 = 0;
                    if (!$.eqB(t4, false))
                      break L0;
                }
        }
      var node1 = sibling.get$parent();
      var node2 = this._allocateNode$0();
      node2.set$parent(node1);
      node2.set$userData(null);
      node2.get$box().setFromCombination$2(node.get$box(), sibling.get$box());
      if (!(node1 == null)) {
        t1 = sibling.get$parent().get$childOne();
        if (t1 == null ? sibling == null : t1 === sibling)
          node1.set$childOne(node2);
        else
          node1.set$childTwo(node2);
        node2.set$childOne(sibling);
        node2.set$childTwo(node);
        sibling.set$parent(node2);
        node.set$parent(node2);
        do {
          if ($.contains$1(node1.get$box(), node2.get$box()) === true)
            break;
          node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
          var node10 = node1.get$parent();
          node2 = node1;
          node1 = node10;
        } while (!(node1 == null));
      } else {
        node2.set$childOne(sibling);
        node2.set$childTwo(node);
        sibling.set$parent(node2);
        node.set$parent(node2);
        this._root = node2;
      }
  }
},
 _removeLeaf$1: function(argNode) {
  var t1 = this._root;
  if (argNode == null ? t1 == null : argNode === t1) {
    this._root = null;
    t1 = this._lastLeaf;
    if (t1 == null ? argNode == null : t1 === argNode)
      this._lastLeaf = null;
    return;
  }
  var node2 = argNode.get$parent();
  var node1 = node2.get$parent();
  var sibling = node2.get$childOne();
  if (sibling == null ? argNode == null : sibling === argNode)
    sibling = node2.get$childTwo();
  if (!(node1 == null)) {
    t1 = node1.get$childOne();
    if (t1 == null ? node2 == null : t1 === node2)
      node1.set$childOne(sibling);
    else
      node1.set$childTwo(sibling);
    sibling.set$parent(node1);
    this._freeNode$1(node2);
    for (t1 = this._tempBox; !(node1 == null);) {
      t1.setFrom$1(node1.get$box());
      node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
      if (t1.contains$1(node1.get$box()) === true)
        break;
      node1 = node1.get$parent();
    }
  } else {
    this._root = sibling;
    sibling.set$parent(null);
    this._freeNode$1(node2);
  }
  t1 = this._lastLeaf;
  if (t1 == null ? argNode == null : t1 === argNode)
    this._lastLeaf = this._root;
},
 computeHeightFromRoot$0: function() {
  return this._computeHeight$1(this._root);
},
 _computeHeight$1: function(node) {
  if (node == null)
    return 0;
  return 1 + $.max(this._computeHeight$1(node.get$childOne()), this._computeHeight$1(node.get$childTwo()));
},
 rebalance$1: function(iterations) {
  if (this._root == null)
    return;
  for (var current = null, i = 0; i < iterations; ++i) {
    current = this._root;
    for (var bit = 0; current.get$isLeaf() !== true;) {
      current = ($.shr(this._path, bit) & 1) === 0 ? current.get$childOne() : current.get$childTwo();
      var bit0 = bit + 1 & 31;
      bit = bit0;
    }
    this._path = this._path + 1;
    this._removeLeaf$1(current);
    this._insertLeaf$1(current);
  }
},
 _freeNode$1: function(node) {
  this._nodeStack.addFirst$1(node);
  this._nodeCount = this._nodeCount - 1;
},
 DynamicTree$0: function() {
  for (var t1 = this._drawVectors, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.DynamicTreeNode = {"":
 ["box?", "parent=", "next=", "childOne=", "childTwo=", "userData=", "key="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 get$isLeaf: function() {
  return this.childOne == null;
},
 toString$0: function() {
  return this.box.toString$0();
}
};

$$.Pair = {"":
 ["proxyA=", "proxyB="],
 "super": "Object",
 compareTo$1: function(pair2) {
  if ($.ltB(this.proxyA.get$key(), pair2.get$proxyA().get$key()))
    return -1;
  if ($.eqB(this.proxyA.get$key(), pair2.get$proxyA().get$key())) {
    if ($.ltB(this.proxyB.get$key(), pair2.get$proxyB().get$key()))
      var t1 = -1;
    else
      t1 = $.eqB(this.proxyB.get$key(), pair2.get$proxyB().get$key()) ? 0 : 1;
    return t1;
  }
  return 1;
}
};

$$.CircleShape = {"":
 ["position?", "type", "radius"],
 "super": "Shape",
 computeAxisAlignedBox$2: function(argBox, argTransform) {
  var p = $.Vector$(0, 0);
  $.Matrix22_mulMatrixAndVectorToOut(argTransform.get$rotation(), this.position, p);
  p.addLocal$1(argTransform.get$position());
  argBox.get$lowerBound().setCoords$2($.sub(p.x, this.radius), $.sub(p.y, this.radius));
  argBox.get$upperBound().setCoords$2($.add(p.x, this.radius), $.add(p.y, this.radius));
},
 clone$0: function() {
  return $.CircleShape$copy(this);
},
 computeMass$2: function(massData, density) {
  massData.mass = $.mul($.mul($.mul(density, 3.141592653589793), this.radius), this.radius);
  var t1 = massData.center;
  var t2 = this.position;
  t1.setFrom$1(t2);
  t1 = massData.mass;
  var t3 = this.radius;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = 0.5 * t3 * t3;
  var t4 = $.add($.mul(t2.get$x(), t2.get$x()), $.mul(t2.get$y(), t2.get$y()));
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  massData.inertia = $.mul(t1, t3 + t4);
}
};

$$.MassData = {"":
 ["mass?", "center?", "inertia?"],
 "super": "Object",
 setFrom$1: function(md) {
  this.mass = md.get$mass();
  this.inertia = md.get$inertia();
  this.center.setFrom$1(md.get$center());
}
};

$$.PolygonShape = {"":
 ["centroid?", "vertices?", "normals?", "vertexCount?", "type", "radius"],
 "super": "Shape",
 getSupport$1: function(d) {
  var t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getSupport$1$bailout(1, d, t1, 0, 0, 0, 0, 0, 0, 0);
  if (0 >= t1.length)
    throw $.ioore(0);
  var one = t1[0];
  var t3 = one.get$x();
  if (typeof t3 !== 'number')
    return this.getSupport$1$bailout(2, d, t3, one, t1, 0, 0, 0, 0, 0);
  var t5 = d.x;
  if (typeof t5 !== 'number')
    return this.getSupport$1$bailout(3, d, t3, t5, one, t1, 0, 0, 0, 0);
  t5 = t3 * t5;
  t3 = one.get$y();
  if (typeof t3 !== 'number')
    return this.getSupport$1$bailout(4, d, t5, t3, one, t1, 0, 0, 0, 0);
  var t8 = d.y;
  if (typeof t8 !== 'number')
    return this.getSupport$1$bailout(5, d, one, t1, t8, t5, t3, 0, 0, 0);
  var bestValue = t5 + t3 * t8;
  var two = d;
  var bestIndex = 0;
  var i = 1;
  while (true) {
    var t2 = this.vertexCount;
    if (typeof t2 !== 'number')
      return this.getSupport$1$bailout(6, d, t1, bestIndex, bestValue, t2, one, i, two, 0);
    if (!(i < t2))
      break;
    if (i >= t1.length)
      throw $.ioore(i);
    one = t1[i];
    t2 = one.get$x();
    if (typeof t2 !== 'number')
      return this.getSupport$1$bailout(7, d, one, bestIndex, bestValue, t1, i, t2, 0, 0);
    var t4 = d.x;
    if (typeof t4 !== 'number')
      return this.getSupport$1$bailout(8, d, one, bestIndex, bestValue, t1, i, t2, t4, 0);
    t4 = t2 * t4;
    t2 = one.get$y();
    if (typeof t2 !== 'number')
      return this.getSupport$1$bailout(9, d, one, bestIndex, bestValue, t1, i, t4, t2, 0);
    var t7 = d.y;
    if (typeof t7 !== 'number')
      return this.getSupport$1$bailout(10, d, one, bestIndex, bestValue, t1, i, t4, t2, t7);
    var value = t4 + t2 * t7;
    if (value > bestValue) {
      bestValue = value;
      bestIndex = i;
    }
    two = d;
    ++i;
  }
  return bestIndex;
},
 getSupport$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      var d = env0;
      t1 = env1;
      break;
    case 2:
      d = env0;
      t3 = env1;
      one = env2;
      t1 = env3;
      break;
    case 3:
      d = env0;
      t3 = env1;
      t5 = env2;
      one = env3;
      t1 = env4;
      break;
    case 4:
      d = env0;
      t5 = env1;
      t3 = env2;
      one = env3;
      t1 = env4;
      break;
    case 5:
      d = env0;
      one = env1;
      t1 = env2;
      t8 = env3;
      t5 = env4;
      t3 = env5;
      break;
    case 6:
      d = env0;
      t1 = env1;
      bestIndex = env2;
      bestValue = env3;
      t2 = env4;
      one = env5;
      i = env6;
      two = env7;
      break;
    case 7:
      d = env0;
      one = env1;
      bestIndex = env2;
      bestValue = env3;
      t1 = env4;
      i = env5;
      t2 = env6;
      break;
    case 8:
      d = env0;
      one = env1;
      bestIndex = env2;
      bestValue = env3;
      t1 = env4;
      i = env5;
      t2 = env6;
      t4 = env7;
      break;
    case 9:
      d = env0;
      one = env1;
      bestIndex = env2;
      bestValue = env3;
      t1 = env4;
      i = env5;
      t4 = env6;
      t2 = env7;
      break;
    case 10:
      d = env0;
      one = env1;
      bestIndex = env2;
      bestValue = env3;
      t1 = env4;
      i = env5;
      t4 = env6;
      t2 = env7;
      t7 = env8;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.vertices;
    case 1:
      state0 = 0;
      var one = $.index(t1, 0);
      var t3 = one.get$x();
    case 2:
      state0 = 0;
      var t5 = d.x;
    case 3:
      state0 = 0;
      t5 = $.mul(t3, t5);
      t3 = one.get$y();
    case 4:
      state0 = 0;
      var t8 = d.y;
    case 5:
      state0 = 0;
      var bestValue = $.add(t5, $.mul(t3, t8));
      var two = d;
      var bestIndex = 0;
      var i = 1;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t2 = this.vertexCount;
            case 6:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L0;
              one = $.index(t1, i);
              t2 = one.get$x();
            case 7:
              state0 = 0;
              var t4 = d.x;
            case 8:
              state0 = 0;
              t4 = $.mul(t2, t4);
              t2 = one.get$y();
            case 9:
              state0 = 0;
              var t7 = d.y;
            case 10:
              state0 = 0;
              var value = $.add(t4, $.mul(t2, t7));
              if ($.gtB(value, bestValue)) {
                bestValue = value;
                bestIndex = i;
              }
              two = d;
              ++i;
          }
      return bestIndex;
  }
},
 clone$0: function() {
  return $.PolygonShape$copy(this);
},
 setAsBox$2: function(hx, hy) {
  this.vertexCount = 4;
  var t1 = this.vertices;
  var t2 = $.index(t1, 0);
  var t3 = -hx;
  var t4 = -hy;
  t2.setCoords$2(t3, t4);
  $.index(t1, 1).setCoords$2(hx, t4);
  $.index(t1, 2).setCoords$2(hx, hy);
  $.index(t1, 3).setCoords$2(t3, hy);
  t3 = this.normals;
  $.index(t3, 0).setCoords$2(0, -1);
  $.index(t3, 1).setCoords$2(1, 0);
  $.index(t3, 2).setCoords$2(0, 1);
  $.index(t3, 3).setCoords$2(-1, 0);
  this.centroid.setZero$0();
},
 setAsBoxWithCenterAndAngle$4: function(hx, hy, center, angle) {
  this.vertexCount = 4;
  var t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.setAsBoxWithCenterAndAngle$4$bailout(1, hx, hy, center, angle, t1);
  if (0 >= t1.length)
    throw $.ioore(0);
  var t3 = t1[0];
  var t4 = -hx;
  var t5 = -hy;
  t3.setCoords$2(t4, t5);
  if (1 >= t1.length)
    throw $.ioore(1);
  t1[1].setCoords$2(hx, t5);
  if (2 >= t1.length)
    throw $.ioore(2);
  t1[2].setCoords$2(hx, hy);
  if (3 >= t1.length)
    throw $.ioore(3);
  t1[3].setCoords$2(t4, hy);
  t4 = this.normals;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this.setAsBoxWithCenterAndAngle$4$bailout(2, t4, center, angle, t1, 0);
  if (0 >= t4.length)
    throw $.ioore(0);
  t4[0].setCoords$2(0, -1);
  if (1 >= t4.length)
    throw $.ioore(1);
  t4[1].setCoords$2(1, 0);
  if (2 >= t4.length)
    throw $.ioore(2);
  t4[2].setCoords$2(0, 1);
  if (3 >= t4.length)
    throw $.ioore(3);
  t4[3].setCoords$2(-1, 0);
  this.centroid.setFrom$1(center);
  var xf = $.Transform$();
  xf.position.setFrom$1(center);
  t3 = xf.rotation;
  t3.setAngle$1(angle);
  for (var i = 0; $.ltB(i, this.vertexCount); ++i) {
    if (i >= t1.length)
      throw $.ioore(i);
    var t2 = t1[i];
    $.Transform_mulToOut(xf, t2, t2);
    if (i >= t4.length)
      throw $.ioore(i);
    t2 = t4[i];
    $.Matrix22_mulMatrixAndVectorToOut(t3, t2, t2);
  }
},
 setAsBoxWithCenterAndAngle$4$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      var hx = env0;
      var hy = env1;
      var center = env2;
      var angle = env3;
      t1 = env4;
      break;
    case 2:
      t4 = env0;
      center = env1;
      angle = env2;
      t1 = env3;
      break;
  }
  switch (state0) {
    case 0:
      this.vertexCount = 4;
      var t1 = this.vertices;
    case 1:
      state0 = 0;
      var t3 = $.index(t1, 0);
      var t4 = -hx;
      var t5 = -hy;
      t3.setCoords$2(t4, t5);
      $.index(t1, 1).setCoords$2(hx, t5);
      $.index(t1, 2).setCoords$2(hx, hy);
      $.index(t1, 3).setCoords$2(t4, hy);
      t4 = this.normals;
    case 2:
      state0 = 0;
      $.index(t4, 0).setCoords$2(0, -1);
      $.index(t4, 1).setCoords$2(1, 0);
      $.index(t4, 2).setCoords$2(0, 1);
      $.index(t4, 3).setCoords$2(-1, 0);
      this.centroid.setFrom$1(center);
      var xf = $.Transform$();
      xf.position.setFrom$1(center);
      t3 = xf.rotation;
      t3.setAngle$1(angle);
      for (var i = 0; $.ltB(i, this.vertexCount); ++i) {
        $.Transform_mulToOut(xf, $.index(t1, i), $.index(t1, i));
        $.Matrix22_mulMatrixAndVectorToOut(t3, $.index(t4, i), $.index(t4, i));
      }
  }
},
 computeAxisAlignedBox$2: function(argAabb, argXf) {
  var lower = $.Vector$(0, 0);
  var upper = $.Vector$(0, 0);
  var v = $.Vector$(0, 0);
  var t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.computeAxisAlignedBox$2$bailout(1, argAabb, argXf, lower, upper, v, t1);
  if (0 >= t1.length)
    throw $.ioore(0);
  $.Transform_mulToOut(argXf, t1[0], lower);
  upper.setFrom$1(lower);
  for (var i = 1; $.ltB(i, this.vertexCount); ++i) {
    if (i >= t1.length)
      throw $.ioore(i);
    $.Transform_mulToOut(argXf, t1[i], v);
    $.Vector_minToOut(lower, v, lower);
    $.Vector_maxToOut(upper, v, upper);
  }
  t1 = $.sub(lower.x, this.radius);
  argAabb.get$lowerBound().set$x(t1);
  t1 = $.sub(lower.y, this.radius);
  argAabb.get$lowerBound().set$y(t1);
  t1 = $.add(upper.x, this.radius);
  argAabb.get$upperBound().set$x(t1);
  t1 = $.add(upper.y, this.radius);
  argAabb.get$upperBound().set$y(t1);
},
 computeAxisAlignedBox$2$bailout: function(state0, argAabb, argXf, lower, upper, v, t1) {
  $.Transform_mulToOut(argXf, $.index(t1, 0), lower);
  upper.setFrom$1(lower);
  for (var i = 1; $.ltB(i, this.vertexCount); ++i) {
    $.Transform_mulToOut(argXf, $.index(t1, i), v);
    $.Vector_minToOut(lower, v, lower);
    $.Vector_maxToOut(upper, v, upper);
  }
  t1 = $.sub(lower.x, this.radius);
  argAabb.get$lowerBound().set$x(t1);
  t1 = $.sub(lower.y, this.radius);
  argAabb.get$lowerBound().set$y(t1);
  t1 = $.add(upper.x, this.radius);
  argAabb.get$upperBound().set$x(t1);
  t1 = $.add(upper.y, this.radius);
  argAabb.get$upperBound().set$y(t1);
},
 computeMass$2: function(massData, density) {
  if ($.eqB(this.vertexCount, 2)) {
    var t1 = massData.center;
    var t2 = this.vertices;
    t1.setFrom$1($.index(t2, 0)).addLocal$1($.index(t2, 1)).mulLocal$1(0.5);
    massData.mass = 0;
    massData.inertia = 0;
    return;
  }
  var center = $.Vector$(0, 0);
  center.setZero$0();
  var pRef = $.Vector$(0, 0);
  pRef.setZero$0();
  var e1 = $.Vector$(0, 0);
  var e2 = $.Vector$(0, 0);
  t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.computeMass$2$bailout(1, massData, pRef, density, e1, e2, t1, center);
  var area = 0;
  var I = 0;
  var i = 0;
  for (; $.ltB(i, this.vertexCount); ++i) {
    if (i >= t1.length)
      throw $.ioore(i);
    var p2 = t1[i];
    t2 = i + 1;
    var t3 = $.ltB(t2, this.vertexCount);
    var t4 = t1.length;
    if (t3) {
      if (t2 >= t4)
        throw $.ioore(t2);
      var p3 = t1[t2];
    } else {
      if (0 >= t4)
        throw $.ioore(0);
      p3 = t1[0];
    }
    e1.setFrom$1(p2);
    e1.subLocal$1(pRef);
    e2.setFrom$1(p3);
    e2.subLocal$1(pRef);
    var D = $.sub($.mul(e1.x, e2.y), $.mul(e1.y, e2.x));
    if (typeof D !== 'number')
      throw $.iae(D);
    var triangleArea = 0.5 * D;
    area += triangleArea;
    t2 = center.x;
    t3 = triangleArea * 0.3333333333333333;
    t4 = $.add($.add(pRef.x, p2.get$x()), p3.get$x());
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    center.x = $.add(t2, t3 * t4);
    var t5 = center.y;
    var t6 = $.add($.add(pRef.y, p2.get$y()), p3.get$y());
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    center.y = $.add(t5, t3 * t6);
    var px = pRef.x;
    var py = pRef.y;
    var ex1 = e1.x;
    var ey1 = e1.y;
    var ex2 = e2.x;
    var ey2 = e2.y;
    var t7 = $.add($.add($.mul(ex1, ex1), $.mul(ex2, ex1)), $.mul(ex2, ex2));
    if (typeof t7 !== 'number')
      throw $.iae(t7);
    t7 = 0.25 * t7;
    var t8 = $.add($.mul(px, ex1), $.mul(px, ex2));
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    var t9 = 0.3333333333333333 * (t7 + t8);
    if (typeof px !== 'number')
      throw $.iae(px);
    var intx2 = t9 + 0.5 * px * px;
    t9 = $.add($.add($.mul(ey1, ey1), $.mul(ey2, ey1)), $.mul(ey2, ey2));
    if (typeof t9 !== 'number')
      throw $.iae(t9);
    t9 = 0.25 * t9;
    var t10 = $.add($.mul(py, ey1), $.mul(py, ey2));
    if (typeof t10 !== 'number')
      throw $.iae(t10);
    var t11 = 0.3333333333333333 * (t9 + t10);
    if (typeof py !== 'number')
      throw $.iae(py);
    I += D * (intx2 + (t11 + 0.5 * py * py));
  }
  massData.mass = $.mul(density, area);
  center.mulLocal$1(1 / area);
  massData.center.setFrom$1(center);
  if (typeof density !== 'number')
    throw $.iae(density);
  massData.inertia = I * density;
},
 computeMass$2$bailout: function(state0, massData, pRef, density, e1, e2, t1, center) {
  var area = 0;
  var I = 0;
  var i = 0;
  for (; $.ltB(i, this.vertexCount); ++i) {
    var p2 = $.index(t1, i);
    var t2 = i + 1;
    var p3 = $.ltB(t2, this.vertexCount) ? $.index(t1, t2) : $.index(t1, 0);
    e1.setFrom$1(p2);
    e1.subLocal$1(pRef);
    e2.setFrom$1(p3);
    e2.subLocal$1(pRef);
    var D = $.sub($.mul(e1.x, e2.y), $.mul(e1.y, e2.x));
    if (typeof D !== 'number')
      throw $.iae(D);
    var triangleArea = 0.5 * D;
    area += triangleArea;
    t2 = center.x;
    var t3 = triangleArea * 0.3333333333333333;
    var t4 = $.add($.add(pRef.x, p2.get$x()), p3.get$x());
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    center.x = $.add(t2, t3 * t4);
    var t5 = center.y;
    var t6 = $.add($.add(pRef.y, p2.get$y()), p3.get$y());
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    center.y = $.add(t5, t3 * t6);
    var px = pRef.x;
    var py = pRef.y;
    var ex1 = e1.x;
    var ey1 = e1.y;
    var ex2 = e2.x;
    var ey2 = e2.y;
    var t7 = $.add($.add($.mul(ex1, ex1), $.mul(ex2, ex1)), $.mul(ex2, ex2));
    if (typeof t7 !== 'number')
      throw $.iae(t7);
    t7 = 0.25 * t7;
    var t8 = $.add($.mul(px, ex1), $.mul(px, ex2));
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    var t9 = 0.3333333333333333 * (t7 + t8);
    if (typeof px !== 'number')
      throw $.iae(px);
    var intx2 = t9 + 0.5 * px * px;
    t9 = $.add($.add($.mul(ey1, ey1), $.mul(ey2, ey1)), $.mul(ey2, ey2));
    if (typeof t9 !== 'number')
      throw $.iae(t9);
    t9 = 0.25 * t9;
    var t10 = $.add($.mul(py, ey1), $.mul(py, ey2));
    if (typeof t10 !== 'number')
      throw $.iae(t10);
    var t11 = 0.3333333333333333 * (t9 + t10);
    if (typeof py !== 'number')
      throw $.iae(py);
    I += D * (intx2 + (t11 + 0.5 * py * py));
  }
  massData.mass = $.mul(density, area);
  center.mulLocal$1(1 / area);
  massData.center.setFrom$1(center);
  if (typeof density !== 'number')
    throw $.iae(density);
  massData.inertia = I * density;
},
 PolygonShape$copy$1: function(other) {
  var t1 = this.vertices;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$copy$1$bailout(1, other, t1);
  var i = 0;
  for (; $.ltB(i, $.get$length(other.get$vertices())); ++i) {
    var t2 = $.Vector$copy($.index(other.get$vertices(), i));
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  t1 = this.normals;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$copy$1$bailout(2, other, t1);
  i = 0;
  for (; $.ltB(i, $.get$length(other.get$normals())); ++i) {
    t2 = $.Vector$copy($.index(other.get$normals(), i));
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 PolygonShape$copy$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      var other = env0;
      t1 = env1;
      break;
    case 2:
      other = env0;
      t1 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.vertices;
    case 1:
      state0 = 0;
      var i = 0;
      for (; $.ltB(i, $.get$length(other.get$vertices())); ++i)
        $.indexSet(t1, i, $.Vector$copy($.index(other.get$vertices(), i)));
      t1 = this.normals;
    case 2:
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(other.get$normals())); ++i)
        $.indexSet(t1, i, $.Vector$copy($.index(other.get$normals(), i)));
  }
},
 PolygonShape$0: function() {
  var t1 = this.vertices;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$0$bailout(1, t1);
  var i = 0;
  for (; i < t1.length; ++i) {
    var t2 = $.Vector$(0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  t1 = this.normals;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$0$bailout(2, t1);
  i = 0;
  for (; i < t1.length; ++i) {
    t2 = $.Vector$(0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 PolygonShape$0$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.vertices;
    case 1:
      state0 = 0;
      var i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        $.indexSet(t1, i, $.Vector$(0, 0));
      t1 = this.normals;
    case 2:
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        $.indexSet(t1, i, $.Vector$(0, 0));
  }
}
};

$$.Shape = {"":
 ["type=", "radius="],
 "super": "Object"
};

$$.CanvasViewportTransform = {"":
 ["yFlip", "extents", "scale", "center"],
 "super": "IViewportTransform",
 CanvasViewportTransform$2: function(_extents, _center) {
  this.yFlip = true;
}
};

$$.Color3 = {"":
 ["x=", "y=", "z?"],
 "super": "Object",
 setFromRGBF$3: function(r, g, b) {
  this.x = $.toInt($.floor(r * 255));
  this.y = $.toInt($.floor(g * 255));
  this.z = $.toInt($.floor(b * 255));
},
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$Color3)
    var t1 = $.eqB(this.x, other.x) && $.eqB(this.y, other.y) && $.eqB(this.z, other.z);
  else
    t1 = false;
  return t1;
},
 is$Color3: true
};

$$.IViewportTransform = {"":
 ["scale=", "center?"],
 "super": "Object",
 get$translation: function() {
  var result = $.Vector$copy(this.extents);
  result.subLocal$1(this.center);
  return result;
},
 getWorldToScreen$2: function(argWorld, argScreen) {
  var t1 = $.mul(argWorld.get$x(), this.scale);
  var t2 = this.extents;
  var gridCorrectedX = $.add(t1, t2.x);
  var gridCorrectedY = $.sub(t2.y, $.mul(argWorld.get$y(), this.scale));
  argScreen.setCoords$2($.add(gridCorrectedX, this.get$translation().get$x()), $.add(gridCorrectedY, $.neg(this.get$translation().get$y())));
}
};

$$.Matrix22 = {"":
 ["col1?", "col2?"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$Matrix22)
    var t1 = $.eqB(this.col1, other.col1) && $.eqB(this.col2, other.col2);
  else
    t1 = false;
  return t1;
},
 setAngle$1: function(angle) {
  var cosin = $.cos(angle);
  var sin = $.sin(angle);
  this.col1.setCoords$2(cosin, sin);
  this.col2.setCoords$2(-sin, cosin);
},
 setFrom$1: function(matrix) {
  this.col1.setFrom$1(matrix.get$col1());
  this.col2.setFrom$1(matrix.get$col2());
},
 invertLocal$0: function() {
  var a = this.col1.get$x();
  if (typeof a !== 'number')
    return this.invertLocal$0$bailout(1, a, 0, 0, 0);
  var b = this.col2.get$x();
  if (typeof b !== 'number')
    return this.invertLocal$0$bailout(2, a, b, 0, 0);
  var c = this.col1.get$y();
  if (typeof c !== 'number')
    return this.invertLocal$0$bailout(3, a, b, c, 0);
  var d = this.col2.get$y();
  if (typeof d !== 'number')
    return this.invertLocal$0$bailout(4, d, a, b, c);
  var det = a * d - b * c;
  if (!(det === 0))
    det = 1 / det;
  var t1 = det * d;
  this.col1.set$x(t1);
  t1 = -det;
  var t2 = t1 * b;
  this.col2.set$x(t2);
  t1 *= c;
  this.col1.set$y(t1);
  t1 = det * a;
  this.col2.set$y(t1);
  return this;
},
 invertLocal$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      a = env0;
      break;
    case 2:
      a = env0;
      b = env1;
      break;
    case 3:
      a = env0;
      b = env1;
      c = env2;
      break;
    case 4:
      d = env0;
      a = env1;
      b = env2;
      c = env3;
      break;
  }
  switch (state0) {
    case 0:
      var a = this.col1.get$x();
    case 1:
      state0 = 0;
      var b = this.col2.get$x();
    case 2:
      state0 = 0;
      var c = this.col1.get$y();
    case 3:
      state0 = 0;
      var d = this.col2.get$y();
    case 4:
      state0 = 0;
      var det = $.sub($.mul(a, d), $.mul(b, c));
      if (!$.eqB(det, 0)) {
        if (typeof det !== 'number')
          throw $.iae(det);
        det = 1 / det;
      }
      var t1 = $.mul(det, d);
      this.col1.set$x(t1);
      t1 = $.mul($.neg(det), b);
      this.col2.set$x(t1);
      t1 = $.mul($.neg(det), c);
      this.col1.set$y(t1);
      t1 = $.mul(det, a);
      this.col2.set$y(t1);
      return this;
  }
},
 addLocal$1: function(other) {
  var t1 = this.col1;
  var t2 = t1.get$x();
  if (typeof t2 !== 'number')
    return this.addLocal$1$bailout(1, other, t1, t2, 0);
  var t4 = other.get$col1().get$x();
  if (typeof t4 !== 'number')
    return this.addLocal$1$bailout(2, other, t1, t2, t4);
  t1.set$x(t2 + t4);
  t1 = this.col1;
  var t6 = t1.get$y();
  if (typeof t6 !== 'number')
    return this.addLocal$1$bailout(3, other, t1, t6, 0);
  var t8 = other.get$col1().get$y();
  if (typeof t8 !== 'number')
    return this.addLocal$1$bailout(4, other, t1, t6, t8);
  t1.set$y(t6 + t8);
  t1 = this.col2;
  var t10 = t1.get$x();
  if (typeof t10 !== 'number')
    return this.addLocal$1$bailout(5, other, t10, t1, 0);
  var t12 = other.get$col2().get$x();
  if (typeof t12 !== 'number')
    return this.addLocal$1$bailout(6, other, t10, t1, t12);
  t1.set$x(t10 + t12);
  t1 = this.col2;
  var t14 = t1.get$y();
  if (typeof t14 !== 'number')
    return this.addLocal$1$bailout(7, other, t14, t1, 0);
  var t16 = other.get$col2().get$y();
  if (typeof t16 !== 'number')
    return this.addLocal$1$bailout(8, t14, t16, t1, 0);
  t1.set$y(t14 + t16);
  return this;
},
 addLocal$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var other = env0;
      t1 = env1;
      t2 = env2;
      break;
    case 2:
      other = env0;
      t1 = env1;
      t2 = env2;
      t4 = env3;
      break;
    case 3:
      other = env0;
      t1 = env1;
      t6 = env2;
      break;
    case 4:
      other = env0;
      t1 = env1;
      t6 = env2;
      t8 = env3;
      break;
    case 5:
      other = env0;
      t10 = env1;
      t1 = env2;
      break;
    case 6:
      other = env0;
      t10 = env1;
      t1 = env2;
      t12 = env3;
      break;
    case 7:
      other = env0;
      t14 = env1;
      t1 = env2;
      break;
    case 8:
      t14 = env0;
      t16 = env1;
      t1 = env2;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.col1;
      var t2 = t1.get$x();
    case 1:
      state0 = 0;
      var t4 = other.get$col1().get$x();
    case 2:
      state0 = 0;
      t1.set$x($.add(t2, t4));
      t1 = this.col1;
      var t6 = t1.get$y();
    case 3:
      state0 = 0;
      var t8 = other.get$col1().get$y();
    case 4:
      state0 = 0;
      t1.set$y($.add(t6, t8));
      t1 = this.col2;
      var t10 = t1.get$x();
    case 5:
      state0 = 0;
      var t12 = other.get$col2().get$x();
    case 6:
      state0 = 0;
      t1.set$x($.add(t10, t12));
      t1 = this.col2;
      var t14 = t1.get$y();
    case 7:
      state0 = 0;
      var t16 = other.get$col2().get$y();
    case 8:
      state0 = 0;
      t1.set$y($.add(t14, t16));
      return this;
  }
},
 solveToOut$2: function(b, out) {
  var a11 = this.col1.get$x();
  var a12 = this.col2.get$x();
  var a21 = this.col1.get$y();
  var a22 = this.col2.get$y();
  var det = $.sub($.mul(a11, a22), $.mul(a12, a21));
  if (!$.eqB(det, 0)) {
    if (typeof det !== 'number')
      throw $.iae(det);
    det = 1 / det;
  }
  var tempy = $.mul(det, $.sub($.mul(a11, b.get$y()), $.mul(a21, b.get$x())));
  out.x = $.mul(det, $.sub($.mul(a22, b.get$x()), $.mul(a12, b.get$y())));
  out.y = tempy;
},
 toString$0: function() {
  return $.S(this.col1) + ', ' + $.S(this.col2);
},
 Matrix22$2: function(c1, c2) {
  if (c1 == null)
    c1 = $.Vector$(0, 0);
  if (c2 == null)
    c2 = $.Vector$(0, 0);
  this.col1 = c1;
  this.col2 = c2;
},
 is$Matrix22: true
};

$$.Matrix33 = {"":
 ["col1?", "col2?", "col3"],
 "super": "Object",
 setZero$0: function() {
  this.col1.setZero$0();
  this.col2.setZero$0();
  this.col3.setZero$0();
},
 solve22ToOut$2: function(b, out) {
  var t1 = this.col1;
  var a11 = t1.x;
  var t2 = this.col2;
  var a12 = t2.x;
  var a21 = t1.y;
  var a22 = t2.y;
  var det = $.sub($.mul(a11, a22), $.mul(a12, a21));
  if (!$.eqB(det, 0)) {
    if (typeof det !== 'number')
      throw $.iae(det);
    det = 1 / det;
  }
  out.x = $.mul(det, $.sub($.mul(a22, b.get$x()), $.mul(a12, b.get$y())));
  out.y = $.mul(det, $.sub($.mul(a11, b.get$y()), $.mul(a21, b.get$x())));
},
 solve33ToOut$2: function(b, out) {
  var t1 = this.col2;
  var t2 = this.col3;
  $.Vector3_crossToOut(t1, t2, out);
  var t3 = this.col1;
  var det = $.add($.add($.mul(t3.x, out.x), $.mul(t3.y, out.y)), $.mul(t3.z, out.z));
  if (!$.eqB(det, 0)) {
    if (typeof det !== 'number')
      throw $.iae(det);
    det = 1 / det;
  }
  $.Vector3_crossToOut(t1, t2, out);
  var x = $.mul(det, $.add($.add($.mul(b.get$x(), out.x), $.mul(b.get$y(), out.y)), $.mul(b.get$z(), out.z)));
  $.Vector3_crossToOut(b, t2, out);
  var y = $.mul(det, $.add($.add($.mul(t3.x, out.x), $.mul(t3.y, out.y)), $.mul(t3.z, out.z)));
  $.Vector3_crossToOut(t1, b, out);
  var z = $.mul(det, $.add($.add($.mul(t3.x, out.x), $.mul(t3.y, out.y)), $.mul(t3.z, out.z)));
  out.x = x;
  out.y = y;
  out.z = z;
}
};

$$.Sweep = {"":
 ["localCenter?", "centerZero?", "center?", "angleZero=", "angle="],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.localCenter, other.get$localCenter()) && $.eqB(this.centerZero, other.get$centerZero()) && $.eqB(this.center, other.get$center()) && $.eqB(this.angleZero, other.get$angleZero()) && $.eqB(this.angle, other.get$angle());
},
 setFrom$1: function(other) {
  this.localCenter.setFrom$1(other.get$localCenter());
  this.centerZero.setFrom$1(other.get$centerZero());
  this.center.setFrom$1(other.get$center());
  this.angleZero = other.get$angleZero();
  this.angle = other.get$angle();
},
 normalize$0: function() {
  var t1 = $.floor($.div(this.angleZero, 6.283185307179586));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var d = 6.283185307179586 * t1;
  this.angleZero = $.sub(this.angleZero, d);
  this.angle = $.sub(this.angle, d);
},
 getTransform$2: function(xf, alpha) {
  var t1 = 1 - alpha;
  var t2 = this.centerZero;
  var t3 = t2.x;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = t1 * t3;
  var t4 = this.center;
  var t5 = t4.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t3 += alpha * t5;
  var t6 = xf.position;
  t6.x = t3;
  t2 = t2.y;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t2 = t1 * t2;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  t6.y = t2 + alpha * t4;
  t3 = xf.rotation;
  var t7 = this.angleZero;
  if (typeof t7 !== 'number')
    throw $.iae(t7);
  t7 = t1 * t7;
  t1 = this.angle;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t3.setAngle$1(t7 + alpha * t1);
  var t8 = t6.x;
  if (typeof t8 !== 'number')
    return this.getTransform$2$bailout(1, t8, t3, t6, 0, 0, 0, 0);
  var t10 = t3.col1.get$x();
  if (typeof t10 !== 'number')
    return this.getTransform$2$bailout(2, t10, t8, t3, t6, 0, 0, 0);
  var t12 = this.localCenter;
  var t13 = t12.x;
  if (typeof t13 !== 'number')
    return this.getTransform$2$bailout(3, t10, t3, t8, t12, t6, t13, 0);
  t13 = t10 * t13;
  t10 = t3.col2.get$x();
  if (typeof t10 !== 'number')
    return this.getTransform$2$bailout(4, t3, t13, t10, t8, t12, t6, 0);
  var t16 = t12.y;
  if (typeof t16 !== 'number')
    return this.getTransform$2$bailout(5, t16, t3, t13, t10, t8, t12, t6);
  t6.x = t8 - (t13 + t10 * t16);
  var t18 = t6.y;
  if (typeof t18 !== 'number')
    return this.getTransform$2$bailout(6, t12, t18, t3, t6, 0, 0, 0);
  var t20 = t3.col1.get$y();
  if (typeof t20 !== 'number')
    return this.getTransform$2$bailout(7, t12, t6, t18, t3, t20, 0, 0);
  var t22 = t12.x;
  if (typeof t22 !== 'number')
    return this.getTransform$2$bailout(8, t18, t3, t20, t22, t12, t6, 0);
  t22 = t20 * t22;
  t20 = t3.col2.get$y();
  if (typeof t20 !== 'number')
    return this.getTransform$2$bailout(9, t20, t22, t18, t12, t6, 0, 0);
  t12 = t12.y;
  if (typeof t12 !== 'number')
    return this.getTransform$2$bailout(10, t20, t22, t18, t12, t6, 0, 0);
  t6.y = t18 - (t22 + t20 * t12);
},
 getTransform$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t8 = env0;
      t3 = env1;
      t6 = env2;
      break;
    case 2:
      t10 = env0;
      t8 = env1;
      t3 = env2;
      t6 = env3;
      break;
    case 3:
      t10 = env0;
      t3 = env1;
      t8 = env2;
      t12 = env3;
      t6 = env4;
      t13 = env5;
      break;
    case 4:
      t3 = env0;
      t13 = env1;
      t10 = env2;
      t8 = env3;
      t12 = env4;
      t6 = env5;
      break;
    case 5:
      t16 = env0;
      t3 = env1;
      t13 = env2;
      t10 = env3;
      t8 = env4;
      t12 = env5;
      t6 = env6;
      break;
    case 6:
      t12 = env0;
      t18 = env1;
      t3 = env2;
      t6 = env3;
      break;
    case 7:
      t12 = env0;
      t6 = env1;
      t18 = env2;
      t3 = env3;
      t20 = env4;
      break;
    case 8:
      t18 = env0;
      t3 = env1;
      t20 = env2;
      t22 = env3;
      t12 = env4;
      t6 = env5;
      break;
    case 9:
      t20 = env0;
      t22 = env1;
      t18 = env2;
      t12 = env3;
      t6 = env4;
      break;
    case 10:
      t20 = env0;
      t22 = env1;
      t18 = env2;
      t12 = env3;
      t6 = env4;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = 1 - alpha;
      var t2 = this.centerZero;
      var t3 = t2.x;
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      t3 = t1 * t3;
      var t4 = this.center;
      var t5 = t4.x;
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      t3 += alpha * t5;
      var t6 = xf.position;
      t6.x = t3;
      t2 = t2.y;
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = t1 * t2;
      t4 = t4.y;
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      t6.y = t2 + alpha * t4;
      t3 = xf.rotation;
      var t7 = this.angleZero;
      if (typeof t7 !== 'number')
        throw $.iae(t7);
      t7 = t1 * t7;
      t1 = this.angle;
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      t3.setAngle$1(t7 + alpha * t1);
      var t8 = t6.x;
    case 1:
      state0 = 0;
      var t10 = t3.col1.get$x();
    case 2:
      state0 = 0;
      var t12 = this.localCenter;
      var t13 = t12.x;
    case 3:
      state0 = 0;
      t13 = $.mul(t10, t13);
      t10 = t3.col2.get$x();
    case 4:
      state0 = 0;
      var t16 = t12.y;
    case 5:
      state0 = 0;
      t6.x = $.sub(t8, $.add(t13, $.mul(t10, t16)));
      var t18 = t6.y;
    case 6:
      state0 = 0;
      var t20 = t3.col1.get$y();
    case 7:
      state0 = 0;
      var t22 = t12.x;
    case 8:
      state0 = 0;
      t22 = $.mul(t20, t22);
      t20 = t3.col2.get$y();
    case 9:
      state0 = 0;
      t12 = t12.y;
    case 10:
      state0 = 0;
      t6.y = $.sub(t18, $.add(t22, $.mul(t20, t12)));
  }
},
 advance$1: function(time) {
  var t1 = 1 - time;
  var t2 = this.centerZero;
  var t3 = t2.x;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = t1 * t3;
  var t4 = this.center;
  var t5 = t4.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t2.x = t3 + time * t5;
  var t6 = t2.y;
  if (typeof t6 !== 'number')
    throw $.iae(t6);
  t6 = t1 * t6;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  t2.y = t6 + time * t4;
  t2 = this.angleZero;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t2 = t1 * t2;
  t1 = this.angle;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  this.angleZero = t2 + time * t1;
}
};

$$.Transform = {"":
 ["position?", "rotation?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.position, other.get$position()) && $.eqB(this.rotation, other.get$rotation());
},
 setFrom$1: function(other) {
  this.position.setFrom$1(other.get$position());
  this.rotation.setFrom$1(other.get$rotation());
}
};

$$.Vector = {"":
 ["x=", "y="],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 addLocal$1: function(v) {
  var t1 = this.x;
  if (typeof t1 !== 'number')
    return this.addLocal$1$bailout(1, v, t1, 0);
  var t3 = v.get$x();
  if (typeof t3 !== 'number')
    return this.addLocal$1$bailout(2, v, t3, t1);
  this.x = t1 + t3;
  var t5 = this.y;
  if (typeof t5 !== 'number')
    return this.addLocal$1$bailout(3, v, t5, 0);
  var t7 = v.get$y();
  if (typeof t7 !== 'number')
    return this.addLocal$1$bailout(4, t5, t7, 0);
  this.y = t5 + t7;
  return this;
},
 addLocal$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var v = env0;
      t1 = env1;
      break;
    case 2:
      v = env0;
      t3 = env1;
      t1 = env2;
      break;
    case 3:
      v = env0;
      t5 = env1;
      break;
    case 4:
      t5 = env0;
      t7 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.x;
    case 1:
      state0 = 0;
      var t3 = v.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      var t5 = this.y;
    case 3:
      state0 = 0;
      var t7 = v.get$y();
    case 4:
      state0 = 0;
      this.y = $.add(t5, t7);
      return this;
  }
},
 subLocal$1: function(other) {
  var t1 = this.x;
  if (typeof t1 !== 'number')
    return this.subLocal$1$bailout(1, other, t1, 0);
  var t3 = other.get$x();
  if (typeof t3 !== 'number')
    return this.subLocal$1$bailout(2, other, t3, t1);
  this.x = t1 - t3;
  var t5 = this.y;
  if (typeof t5 !== 'number')
    return this.subLocal$1$bailout(3, other, t5, 0);
  var t7 = other.get$y();
  if (typeof t7 !== 'number')
    return this.subLocal$1$bailout(4, t5, t7, 0);
  this.y = t5 - t7;
  return this;
},
 subLocal$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var other = env0;
      t1 = env1;
      break;
    case 2:
      other = env0;
      t3 = env1;
      t1 = env2;
      break;
    case 3:
      other = env0;
      t5 = env1;
      break;
    case 4:
      t5 = env0;
      t7 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.x;
    case 1:
      state0 = 0;
      var t3 = other.get$x();
    case 2:
      state0 = 0;
      this.x = $.sub(t1, t3);
      var t5 = this.y;
    case 3:
      state0 = 0;
      var t7 = other.get$y();
    case 4:
      state0 = 0;
      this.y = $.sub(t5, t7);
      return this;
  }
},
 setCoords$2: function(xCoord, yCoord) {
  this.x = xCoord;
  this.y = yCoord;
  return this;
},
 setFrom$1: function(v) {
  this.setCoords$2(v.get$x(), v.get$y());
  return this;
},
 mulLocal$1: function(d) {
  if (typeof d !== 'number')
    return this.mulLocal$1$bailout(1, d, 0);
  var t1 = this.x;
  if (typeof t1 !== 'number')
    return this.mulLocal$1$bailout(2, d, t1);
  this.x = t1 * d;
  var t3 = this.y;
  if (typeof t3 !== 'number')
    return this.mulLocal$1$bailout(3, d, t3);
  this.y = t3 * d;
  return this;
},
 mulLocal$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      var d = env0;
      break;
    case 2:
      d = env0;
      t1 = env1;
      break;
    case 3:
      d = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var t1 = this.x;
    case 2:
      state0 = 0;
      this.x = $.mul(t1, d);
      var t3 = this.y;
    case 3:
      state0 = 0;
      this.y = $.mul(t3, d);
      return this;
  }
},
 setZero$0: function() {
  this.setCoords$2(0, 0);
  return this;
},
 get$length: function() {
  return $.sqrt(this.get$lengthSquared());
},
 get$lengthSquared: function() {
  var t1 = this.x;
  t1 = $.mul(t1, t1);
  var t2 = this.y;
  return $.add(t1, $.mul(t2, t2));
},
 absLocal$0: function() {
  this.x = $.abs(this.x);
  this.y = $.abs(this.y);
},
 normalize$0: function() {
  var len = $.get$length(this);
  if ($.ltB(len, 1.192e-7))
    return 0;
  if (typeof len !== 'number')
    throw $.iae(len);
  var invLength = 1 / len;
  this.x = $.mul(this.x, invLength);
  this.y = $.mul(this.y, invLength);
  return len;
},
 negateLocal$0: function() {
  this.x = $.neg(this.x);
  this.y = $.neg(this.y);
  return this;
},
 toString$0: function() {
  return '(' + $.S(this.x) + ', ' + $.S(this.y) + ')';
}
};

$$.Vector3 = {"":
 ["x=", "y=", "z?"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$Vector3)
    var t1 = $.eqB(this.x, other.x) && $.eqB(this.y, other.y) && $.eqB(this.z, other.z);
  else
    t1 = false;
  return t1;
},
 setFrom$1: function(argVec) {
  this.x = argVec.get$x();
  this.y = argVec.get$y();
  this.z = argVec.get$z();
  return this;
},
 setCoords$3: function(argX, argY, argZ) {
  this.x = argX;
  this.y = argY;
  this.z = argZ;
  return this;
},
 addLocal$1: function(argVec) {
  var t1 = this.x;
  if (typeof t1 !== 'number')
    return this.addLocal$1$bailout(1, argVec, t1, 0);
  var t3 = argVec.get$x();
  if (typeof t3 !== 'number')
    return this.addLocal$1$bailout(2, argVec, t1, t3);
  this.x = t1 + t3;
  var t5 = this.y;
  if (typeof t5 !== 'number')
    return this.addLocal$1$bailout(3, argVec, t5, 0);
  var t7 = argVec.get$y();
  if (typeof t7 !== 'number')
    return this.addLocal$1$bailout(4, argVec, t7, t5);
  this.y = t5 + t7;
  var t9 = this.z;
  if (typeof t9 !== 'number')
    return this.addLocal$1$bailout(5, t9, argVec, 0);
  var t11 = argVec.get$z();
  if (typeof t11 !== 'number')
    return this.addLocal$1$bailout(6, t9, t11, 0);
  this.z = t9 + t11;
  return this;
},
 addLocal$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var argVec = env0;
      t1 = env1;
      break;
    case 2:
      argVec = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 3:
      argVec = env0;
      t5 = env1;
      break;
    case 4:
      argVec = env0;
      t7 = env1;
      t5 = env2;
      break;
    case 5:
      t9 = env0;
      argVec = env1;
      break;
    case 6:
      t9 = env0;
      t11 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.x;
    case 1:
      state0 = 0;
      var t3 = argVec.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      var t5 = this.y;
    case 3:
      state0 = 0;
      var t7 = argVec.get$y();
    case 4:
      state0 = 0;
      this.y = $.add(t5, t7);
      var t9 = this.z;
    case 5:
      state0 = 0;
      var t11 = argVec.get$z();
    case 6:
      state0 = 0;
      this.z = $.add(t9, t11);
      return this;
  }
},
 add$1: function(argVec) {
  return $.Vector3$($.add(this.x, argVec.get$x()), $.add(this.y, argVec.get$y()), $.add(this.z, argVec.get$z()));
},
 subLocal$1: function(argVec) {
  var t1 = this.x;
  if (typeof t1 !== 'number')
    return this.subLocal$1$bailout(1, argVec, t1, 0);
  var t3 = argVec.get$x();
  if (typeof t3 !== 'number')
    return this.subLocal$1$bailout(2, argVec, t1, t3);
  this.x = t1 - t3;
  var t5 = this.y;
  if (typeof t5 !== 'number')
    return this.subLocal$1$bailout(3, argVec, t5, 0);
  var t7 = argVec.get$y();
  if (typeof t7 !== 'number')
    return this.subLocal$1$bailout(4, argVec, t7, t5);
  this.y = t5 - t7;
  var t9 = this.z;
  if (typeof t9 !== 'number')
    return this.subLocal$1$bailout(5, t9, argVec, 0);
  var t11 = argVec.get$z();
  if (typeof t11 !== 'number')
    return this.subLocal$1$bailout(6, t9, t11, 0);
  this.z = t9 - t11;
  return this;
},
 subLocal$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var argVec = env0;
      t1 = env1;
      break;
    case 2:
      argVec = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 3:
      argVec = env0;
      t5 = env1;
      break;
    case 4:
      argVec = env0;
      t7 = env1;
      t5 = env2;
      break;
    case 5:
      t9 = env0;
      argVec = env1;
      break;
    case 6:
      t9 = env0;
      t11 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.x;
    case 1:
      state0 = 0;
      var t3 = argVec.get$x();
    case 2:
      state0 = 0;
      this.x = $.sub(t1, t3);
      var t5 = this.y;
    case 3:
      state0 = 0;
      var t7 = argVec.get$y();
    case 4:
      state0 = 0;
      this.y = $.sub(t5, t7);
      var t9 = this.z;
    case 5:
      state0 = 0;
      var t11 = argVec.get$z();
    case 6:
      state0 = 0;
      this.z = $.sub(t9, t11);
      return this;
  }
},
 mulLocal$1: function(argScalar) {
  if (typeof argScalar !== 'number')
    return this.mulLocal$1$bailout(1, argScalar, 0);
  var t1 = this.x;
  if (typeof t1 !== 'number')
    return this.mulLocal$1$bailout(2, argScalar, t1);
  this.x = t1 * argScalar;
  var t3 = this.y;
  if (typeof t3 !== 'number')
    return this.mulLocal$1$bailout(3, argScalar, t3);
  this.y = t3 * argScalar;
  var t5 = this.z;
  if (typeof t5 !== 'number')
    return this.mulLocal$1$bailout(4, argScalar, t5);
  this.z = t5 * argScalar;
  return this;
},
 mulLocal$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      var argScalar = env0;
      break;
    case 2:
      argScalar = env0;
      t1 = env1;
      break;
    case 3:
      argScalar = env0;
      t3 = env1;
      break;
    case 4:
      argScalar = env0;
      t5 = env1;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var t1 = this.x;
    case 2:
      state0 = 0;
      this.x = $.mul(t1, argScalar);
      var t3 = this.y;
    case 3:
      state0 = 0;
      this.y = $.mul(t3, argScalar);
      var t5 = this.z;
    case 4:
      state0 = 0;
      this.z = $.mul(t5, argScalar);
      return this;
  }
},
 negateLocal$0: function() {
  this.x = $.neg(this.x);
  this.y = $.neg(this.y);
  this.z = $.neg(this.z);
  return this;
},
 setZero$0: function() {
  this.x = 0;
  this.y = 0;
  this.z = 0;
},
 toString$0: function() {
  return '(' + $.S(this.x) + ', ' + $.S(this.y) + ', ' + $.S(this.z) + ')';
},
 is$Vector3: true
};

$$.Body = {"":
 ["world", "flags=", "contactList=", "sleepTime=", "userData=", "_linearVelocity", "_angularVelocity", "mass?", "invMass?", "next=", "prev=", "fixtureList=", "fixtureCount!", "jointList=", "_force?", "_torque=", "_inertia", "invInertia?", "linearDamping?", "angularDamping?", "_lib2_type?", "islandIndex!", "originTransform?", "sweep?", "_fixDef", "_pmd", "_pxf", "oldCenter", "tempCenter"],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 createFixture$1: function(def) {
  var fixture = $.Fixture$();
  fixture.create$2(this, def);
  if ($.eqB($.and(this.flags, 32), 32))
    fixture.createProxy$2(this.world._contactManager.get$broadPhase(), this.originTransform);
  fixture.next = this.fixtureList;
  this.fixtureList = fixture;
  this.fixtureCount = $.add(this.fixtureCount, 1);
  fixture.body = this;
  if ($.gtB(fixture.density, 0))
    this.resetMassData$0();
  var t1 = this.world;
  t1._flags = (t1._flags | 1) >>> 0;
  return fixture;
},
 createFixtureFromShape$2: function(shape, density) {
  var t1 = this._fixDef;
  t1.shape = shape;
  t1.density = density;
  return this.createFixture$1(t1);
},
 createFixtureFromShape$1: function(shape) {
  return this.createFixtureFromShape$2(shape,0)
},
 get$position: function() {
  return this.originTransform.position;
},
 get$angle: function() {
  return this.sweep.angle;
},
 get$worldCenter: function() {
  return this.sweep.center;
},
 get$localCenter: function() {
  return this.sweep.localCenter;
},
 get$linearVelocity: function() {
  return this._linearVelocity;
},
 get$angularVelocity: function() {
  return this._angularVelocity;
},
 set$angularVelocity: function(w) {
  if (!$.eqB(this._lib2_type, 0)) {
    if ($.gtB($.mul(w, w), 0))
      this.set$awake(true);
    this._angularVelocity = w;
  }
},
 applyLinearImpulse$2: function(impulse, point) {
  if (!$.eqB(this._lib2_type, 2))
    return;
  this.set$awake(true);
  var t1 = this._linearVelocity;
  t1.x = $.add(t1.x, $.mul(impulse.get$x(), this.invMass));
  t1.y = $.add(t1.y, $.mul(impulse.get$y(), this.invMass));
  t1 = this._angularVelocity;
  var t2 = this.invInertia;
  var t3 = point.get$x();
  var t4 = this.sweep.center;
  var t5 = $.sub($.mul($.sub(t3, t4.x), impulse.get$y()), $.mul($.sub(point.get$y(), t4.y), impulse.get$x()));
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  this._angularVelocity = $.add(t1, t2 * t5);
},
 get$inertia: function() {
  var t1 = this._inertia;
  var t2 = this.mass;
  var t3 = this.sweep.localCenter;
  var t4 = t3.x;
  t4 = $.mul(t4, t4);
  t3 = t3.y;
  t4 = $.add(t4, $.mul(t3, t3));
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  return t1 + t2 * t4;
},
 getMassData$1: function(data) {
  data.mass = this.mass;
  var lc = this.sweep.localCenter;
  var t1 = this._inertia;
  var t2 = this.mass;
  var t3 = lc.get$lengthSquared();
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  data.inertia = t1 + t2 * t3;
  var t4 = lc.x;
  var t5 = data.center;
  t5.x = t4;
  t5.y = lc.y;
},
 resetMassData$0: function() {
  this.mass = 0;
  this.invMass = 0;
  this._inertia = 0;
  this.invInertia = 0;
  var t1 = this.sweep;
  var t2 = t1.localCenter;
  t2.setZero$0();
  if ($.eqB(this._lib2_type, 0) || $.eqB(this._lib2_type, 1)) {
    t2 = t1.center;
    var t3 = this.originTransform.position;
    t2.setFrom$1(t3);
    t1.centerZero.setFrom$1(t3);
    return;
  }
  t3 = this.tempCenter;
  t3.setZero$0();
  var massData = this._pmd;
  for (var f = this.fixtureList, t4 = massData.center; !(f == null); f = f.get$next()) {
    if ($.eqB(f.get$density(), 0))
      continue;
    f.getMassData$1(massData);
    var t5 = this.mass;
    var t6 = massData.mass;
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    this.mass = t5 + t6;
    var temp = $.Vector$copy(t4);
    temp.mulLocal$1(massData.mass);
    t3.addLocal$1(temp);
    var t7 = this._inertia;
    var t8 = massData.inertia;
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    this._inertia = t7 + t8;
  }
  t4 = this.mass;
  if (t4 > 0) {
    this.invMass = 1 / t4;
    t3.mulLocal$1(this.invMass);
  } else {
    this.mass = 1;
    this.invMass = 1;
  }
  if (this._inertia > 0 && $.eqB($.and(this.flags, 16), 0)) {
    t4 = this._inertia;
    t5 = this.mass;
    t6 = t3.x;
    t6 = $.mul(t6, t6);
    t7 = t3.y;
    t6 = $.add(t6, $.mul(t7, t7));
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    this._inertia = t4 - t5 * t6;
    this.invInertia = 1 / this._inertia;
  } else {
    this._inertia = 0;
    this.invInertia = 0;
  }
  t4 = this.oldCenter;
  t5 = t1.center;
  t4.setFrom$1(t5);
  t2.setFrom$1(t3);
  t3 = this.originTransform;
  t1 = t1.centerZero;
  $.Transform_mulToOut(t3, t2, t1);
  t5.setFrom$1(t1);
  temp = $.Vector$copy(t5);
  temp.subLocal$1(t4);
  $.Vector_crossNumAndVectorToOut(this._angularVelocity, temp, temp);
  this._linearVelocity.addLocal$1(temp);
},
 getWorldPoint$1: function(localPoint) {
  var v = $.Vector$(0, 0);
  this.getWorldPointToOut$2(localPoint, v);
  return v;
},
 getWorldPointToOut$2: function(localPoint, out) {
  $.Transform_mulToOut(this.originTransform, localPoint, out);
},
 getWorldVector$1: function(localVector) {
  var out = $.Vector$(0, 0);
  this.getWorldVectorToOut$2(localVector, out);
  return out;
},
 getWorldVectorToOut$2: function(localVector, out) {
  $.Matrix22_mulMatrixAndVectorToOut(this.originTransform.rotation, localVector, out);
},
 getLocalPointToOut$2: function(worldPoint, out) {
  $.Transform_mulTransToOut(this.originTransform, worldPoint, out);
},
 getLocalPoint$1: function(worldPoint) {
  var out = $.Vector$(0, 0);
  this.getLocalPointToOut$2(worldPoint, out);
  return out;
},
 get$type: function() {
  return this._lib2_type;
},
 set$type: function(otherType) {
  if ($.eqB(this._lib2_type, otherType))
    return;
  this._lib2_type = otherType;
  this.resetMassData$0();
  if ($.eqB(this._lib2_type, 0)) {
    this._linearVelocity.setZero$0();
    this._angularVelocity = 0;
  }
  this.set$awake(true);
  this._force.setZero$0();
  this._torque = 0;
  for (var ce = this.contactList; !(ce == null); ce = ce.get$next())
    ce.get$contact().flagForFiltering$0();
},
 get$bullet: function() {
  return $.eq($.and(this.flags, 8), 8);
},
 set$awake: function(flag) {
  if (flag === true) {
    if ($.eqB($.and(this.flags, 2), 0)) {
      this.flags = $.or(this.flags, 2);
      this.sleepTime = 0;
    }
  } else {
    this.flags = $.and(this.flags, 4294967293);
    this.sleepTime = 0;
    this._linearVelocity.setZero$0();
    this._angularVelocity = 0;
    this._force.setZero$0();
    this._torque = 0;
  }
},
 get$awake: function() {
  return $.eq($.and(this.flags, 2), 2);
},
 set$active: function(flag) {
  if ($.eqB(flag, this.get$active()))
    return;
  var t1 = flag === true;
  var t2 = this.flags;
  var t3 = this.world;
  if (t1) {
    this.flags = $.or(t2, 32);
    var broadPhase = t3._contactManager.get$broadPhase();
    for (var f = this.fixtureList, t1 = this.originTransform; !(f == null); f = f.get$next())
      f.createProxy$2(broadPhase, t1);
  } else {
    this.flags = $.and(t2, 4294967263);
    broadPhase = t3._contactManager.get$broadPhase();
    for (f = this.fixtureList; !(f == null); f = f.get$next())
      f.destroyProxy$1(broadPhase);
    var ce = this.contactList;
    for (; !(ce == null);) {
      var ce0 = ce.get$next();
      t3._contactManager.destroy$1(ce.get$contact());
      ce = ce0;
    }
    this.contactList = null;
  }
},
 get$active: function() {
  return $.eq($.and(this.flags, 32), 32);
},
 get$fixedRotation: function() {
  return $.eq($.and(this.flags, 16), 16);
},
 synchronizeFixtures$0: function() {
  var xf1 = this._pxf;
  var t1 = xf1.rotation;
  var t2 = this.sweep;
  t1.setAngle$1(t2.angleZero);
  var t3 = t2.localCenter;
  var t4 = xf1.position;
  $.Matrix22_mulMatrixAndVectorToOut(t1, t3, t4);
  t4.mulLocal$1(-1);
  t4.addLocal$1(t2.centerZero);
  var broadPhase = this.world._contactManager.get$broadPhase();
  for (var f = this.fixtureList, t1 = this.originTransform; !(f == null); f = f.get$next())
    f.synchronize$3(broadPhase, xf1, t1);
},
 synchronizeTransform$0: function() {
  var t1 = this.sweep;
  var c = $.cos(t1.angle);
  var s = $.sin(t1.angle);
  var t = this.originTransform;
  var r = t.rotation;
  var p = t.position;
  r.col1.set$x(c);
  var t2 = -s;
  r.col2.set$x(t2);
  r.col1.set$y(s);
  r.col2.set$y(c);
  t2 = r.col1.get$x();
  if (typeof t2 !== 'number')
    return this.synchronizeTransform$0$bailout(1, t2, r, p, t1, 0, 0, 0);
  var t4 = t1.localCenter;
  var t5 = t4.x;
  if (typeof t5 !== 'number')
    return this.synchronizeTransform$0$bailout(2, r, p, t2, t4, t5, t1, 0);
  t5 = t2 * t5;
  t2 = r.col2.get$x();
  if (typeof t2 !== 'number')
    return this.synchronizeTransform$0$bailout(3, t1, r, p, t4, t5, t2, 0);
  var t8 = t4.y;
  if (typeof t8 !== 'number')
    return this.synchronizeTransform$0$bailout(4, t1, t8, r, p, t4, t5, t2);
  var t10 = (t5 + t2 * t8) * -1;
  t1 = t1.center;
  var t11 = t1.x;
  if (typeof t11 !== 'number')
    return this.synchronizeTransform$0$bailout(5, t1, r, p, t11, t4, t10, 0);
  p.x = t10 + t11;
  var t13 = r.col1.get$y();
  if (typeof t13 !== 'number')
    return this.synchronizeTransform$0$bailout(6, t4, t1, r, p, t13, 0, 0);
  var t15 = t4.x;
  if (typeof t15 !== 'number')
    return this.synchronizeTransform$0$bailout(7, t1, r, p, t13, t15, t4, 0);
  t15 = t13 * t15;
  t13 = r.col2.get$y();
  if (typeof t13 !== 'number')
    return this.synchronizeTransform$0$bailout(8, t15, t1, t13, p, t4, 0, 0);
  t4 = t4.y;
  if (typeof t4 !== 'number')
    return this.synchronizeTransform$0$bailout(9, t15, t1, t13, p, t4, 0, 0);
  var t19 = (t15 + t13 * t4) * -1;
  t1 = t1.y;
  if (typeof t1 !== 'number')
    return this.synchronizeTransform$0$bailout(10, t1, p, t19, 0, 0, 0, 0);
  p.y = t19 + t1;
},
 synchronizeTransform$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t2 = env0;
      r = env1;
      p = env2;
      t1 = env3;
      break;
    case 2:
      r = env0;
      p = env1;
      t2 = env2;
      t4 = env3;
      t5 = env4;
      t1 = env5;
      break;
    case 3:
      t1 = env0;
      r = env1;
      p = env2;
      t4 = env3;
      t5 = env4;
      t2 = env5;
      break;
    case 4:
      t1 = env0;
      t8 = env1;
      r = env2;
      p = env3;
      t4 = env4;
      t5 = env5;
      t2 = env6;
      break;
    case 5:
      t1 = env0;
      r = env1;
      p = env2;
      t11 = env3;
      t4 = env4;
      t10 = env5;
      break;
    case 6:
      t4 = env0;
      t1 = env1;
      r = env2;
      p = env3;
      t13 = env4;
      break;
    case 7:
      t1 = env0;
      r = env1;
      p = env2;
      t13 = env3;
      t15 = env4;
      t4 = env5;
      break;
    case 8:
      t15 = env0;
      t1 = env1;
      t13 = env2;
      p = env3;
      t4 = env4;
      break;
    case 9:
      t15 = env0;
      t1 = env1;
      t13 = env2;
      p = env3;
      t4 = env4;
      break;
    case 10:
      t1 = env0;
      p = env1;
      t19 = env2;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.sweep;
      var c = $.cos(t1.angle);
      var s = $.sin(t1.angle);
      var t = this.originTransform;
      var r = t.rotation;
      var p = t.position;
      r.col1.set$x(c);
      var t2 = -s;
      r.col2.set$x(t2);
      r.col1.set$y(s);
      r.col2.set$y(c);
      t2 = r.col1.get$x();
    case 1:
      state0 = 0;
      var t4 = t1.localCenter;
      var t5 = t4.x;
    case 2:
      state0 = 0;
      t5 = $.mul(t2, t5);
      t2 = r.col2.get$x();
    case 3:
      state0 = 0;
      var t8 = t4.y;
    case 4:
      state0 = 0;
      var t10 = $.mul($.add(t5, $.mul(t2, t8)), -1);
      t1 = t1.center;
      var t11 = t1.x;
    case 5:
      state0 = 0;
      p.x = $.add(t10, t11);
      var t13 = r.col1.get$y();
    case 6:
      state0 = 0;
      var t15 = t4.x;
    case 7:
      state0 = 0;
      t15 = $.mul(t13, t15);
      t13 = r.col2.get$y();
    case 8:
      state0 = 0;
      t4 = t4.y;
    case 9:
      state0 = 0;
      var t19 = $.mul($.add(t15, $.mul(t13, t4)), -1);
      t1 = t1.y;
    case 10:
      state0 = 0;
      p.y = $.add(t19, t1);
  }
},
 shouldCollide$1: function(other) {
  var t1 = this._lib2_type;
  if (typeof t1 !== 'number')
    return this.shouldCollide$1$bailout(1, other, t1);
  if (!(t1 === 2)) {
    t1 = other.get$_lib2_type();
    if (typeof t1 !== 'number')
      return this.shouldCollide$1$bailout(2, t1, 0);
    var t3 = !(t1 === 2);
    t1 = t3;
  } else
    t1 = false;
  return !t1;
},
 shouldCollide$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      var other = env0;
      t1 = env1;
      break;
    case 2:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this._lib2_type;
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && !$.eqB(t1, 2))
        switch (state0) {
          case 0:
            t1 = other.get$_lib2_type();
          case 2:
            state0 = 0;
            var t3 = !$.eqB(t1, 2);
            t1 = t3;
        }
      else
        t1 = false;
      return !t1;
  }
},
 advance$1: function(t) {
  var t1 = this.sweep;
  t1.advance$1(t);
  t1.center.setFrom$1(t1.centerZero);
  t1.angle = t1.angleZero;
  this.synchronizeTransform$0();
},
 Body$2: function(bd, world) {
  if (bd.get$bullet() === true)
    this.flags = $.or(this.flags, 8);
  if (bd.get$fixedRotation() === true)
    this.flags = $.or(this.flags, 16);
  if (bd.get$allowSleep() === true)
    this.flags = $.or(this.flags, 4);
  if (bd.get$awake() === true)
    this.flags = $.or(this.flags, 2);
  if (bd.get$active() === true)
    this.flags = $.or(this.flags, 32);
  var t1 = this.originTransform;
  t1.position.setFrom$1(bd.get$position());
  t1.rotation.setAngle$1(bd.get$angle());
  var t2 = this.sweep;
  var t3 = t2.localCenter;
  t3.setZero$0();
  var t4 = t2.centerZero;
  $.Transform_mulToOut(t1, t3, t4);
  t2.center.setFrom$1(t4);
  t2.angle = bd.get$angle();
  t2.angleZero = bd.get$angle();
  if ($.eqB(this._lib2_type, 2)) {
    this.mass = 1;
    this.invMass = 1;
  } else {
    this.mass = 0;
    this.invMass = 0;
  }
}
};

$$.BodyDef = {"":
 ["type=", "angle=", "userData=", "position?", "linearVelocity?", "angularVelocity=", "fixedRotation?", "isSleeping", "bullet?", "allowSleep?", "linearDamping?", "angularDamping?", "awake=", "active="],
 "super": "Object"
};

$$.ContactManager = {"":
 ["broadPhase?", "contactList=", "contactCount?", "contactFilter", "contactListener?", "pool"],
 "super": "Object",
 addPair$2: function(fixtureA, fixtureB) {
  var bodyA = fixtureA.get$body();
  var bodyB = fixtureB.get$body();
  if (bodyA == null ? bodyB == null : bodyA === bodyB)
    return;
  var edge = bodyB.get$contactList();
  for (; !(edge == null);) {
    if ($.eqB(edge.get$other(), bodyA)) {
      var t1 = edge.get$contact();
      var fA = t1.get$fixtureA();
      var fB = t1.get$fixtureB();
      if ($.eqB(fA, fixtureA) && $.eqB(fB, fixtureB))
        return;
      if ($.eqB(fA, fixtureB) && $.eqB(fB, fixtureA))
        return;
    }
    edge = edge.get$next();
  }
  t1 = bodyB.shouldCollide$1(bodyA);
  if (typeof t1 !== 'boolean')
    return this.addPair$2$bailout(1, fixtureA, fixtureB, t1);
  if (!t1)
    return;
  t1 = this.contactFilter;
  t1 = t1.shouldCollide$2(fixtureA, fixtureB);
  if (typeof t1 !== 'boolean')
    return this.addPair$2$bailout(2, fixtureA, fixtureB, t1);
  t1 = !t1;
  if (t1)
    return;
  var c = this.pool.popContact$2(fixtureA, fixtureB);
  fixtureA = c.get$fixtureA();
  fixtureB = c.get$fixtureB();
  bodyA = fixtureA.get$body();
  bodyB = fixtureB.get$body();
  c.set$prev(null);
  c.set$next(this.contactList);
  t1 = this.contactList;
  if (!(t1 == null))
    t1.set$prev(c);
  this.contactList = c;
  c.get$edge1().set$contact(c);
  c.get$edge1().set$other(bodyB);
  c.get$edge1().set$prev(null);
  t1 = bodyA.get$contactList();
  c.get$edge1().set$next(t1);
  if (!(bodyA.get$contactList() == null)) {
    t1 = c.get$edge1();
    bodyA.get$contactList().set$prev(t1);
  }
  bodyA.set$contactList(c.get$edge1());
  c.get$edge2().set$contact(c);
  c.get$edge2().set$other(bodyA);
  c.get$edge2().set$prev(null);
  t1 = bodyB.get$contactList();
  c.get$edge2().set$next(t1);
  if (!(bodyB.get$contactList() == null)) {
    t1 = c.get$edge2();
    bodyB.get$contactList().set$prev(t1);
  }
  bodyB.set$contactList(c.get$edge2());
  this.contactCount = this.contactCount + 1;
},
 addPair$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var fixtureA = env0;
      var fixtureB = env1;
      t1 = env2;
      break;
    case 2:
      fixtureA = env0;
      fixtureB = env1;
      t1 = env2;
      break;
  }
  switch (state0) {
    case 0:
      var bodyA = fixtureA.get$body();
      var bodyB = fixtureB.get$body();
      if (bodyA == null ? bodyB == null : bodyA === bodyB)
        return;
      var edge = bodyB.get$contactList();
      for (; !(edge == null);) {
        if ($.eqB(edge.get$other(), bodyA)) {
          var t1 = edge.get$contact();
          var fA = t1.get$fixtureA();
          var fB = t1.get$fixtureB();
          if ($.eqB(fA, fixtureA) && $.eqB(fB, fixtureB))
            return;
          if ($.eqB(fA, fixtureB) && $.eqB(fB, fixtureA))
            return;
        }
        edge = edge.get$next();
      }
      t1 = bodyB.shouldCollide$1(bodyA);
    case 1:
      state0 = 0;
      if ($.eqB(t1, false))
        return;
      t1 = this.contactFilter;
      t1 = t1.shouldCollide$2(fixtureA, fixtureB);
    case 2:
      state0 = 0;
      t1 = $.eqB(t1, false);
      if (t1)
        return;
      var c = this.pool.popContact$2(fixtureA, fixtureB);
      fixtureA = c.get$fixtureA();
      fixtureB = c.get$fixtureB();
      bodyA = fixtureA.get$body();
      bodyB = fixtureB.get$body();
      c.set$prev(null);
      c.set$next(this.contactList);
      t1 = this.contactList;
      if (!(t1 == null))
        t1.set$prev(c);
      this.contactList = c;
      c.get$edge1().set$contact(c);
      c.get$edge1().set$other(bodyB);
      c.get$edge1().set$prev(null);
      t1 = bodyA.get$contactList();
      c.get$edge1().set$next(t1);
      if (!(bodyA.get$contactList() == null)) {
        t1 = c.get$edge1();
        bodyA.get$contactList().set$prev(t1);
      }
      bodyA.set$contactList(c.get$edge1());
      c.get$edge2().set$contact(c);
      c.get$edge2().set$other(bodyA);
      c.get$edge2().set$prev(null);
      t1 = bodyB.get$contactList();
      c.get$edge2().set$next(t1);
      if (!(bodyB.get$contactList() == null)) {
        t1 = c.get$edge2();
        bodyB.get$contactList().set$prev(t1);
      }
      bodyB.set$contactList(c.get$edge2());
      this.contactCount = this.contactCount + 1;
  }
},
 findNewContacts$0: function() {
  this.broadPhase.updatePairs$1(this);
},
 destroy$1: function(c) {
  var fixtureA = c.get$fixtureA();
  var fixtureB = c.get$fixtureB();
  var bodyA = fixtureA.get$body();
  var bodyB = fixtureB.get$body();
  var t1 = this.contactListener;
  if (!(t1 == null) && c.get$touching() === true)
    t1.endContact$1(c);
  t1 = c.get$prev();
  if (!(t1 == null))
    t1.set$next(c.get$next());
  t1 = c.get$next();
  if (!(t1 == null))
    t1.set$prev(c.get$prev());
  if ($.eqB(c, this.contactList))
    this.contactList = c.get$next();
  t1 = c.get$edge1();
  var t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = c.get$edge1();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(c.get$edge1(), bodyA.get$contactList()))
    bodyA.set$contactList(c.get$edge1().get$next());
  t1 = c.get$edge2();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = c.get$edge2();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(c.get$edge2(), bodyB.get$contactList()))
    bodyB.set$contactList(c.get$edge2().get$next());
  this.pool.pushContact$1(c);
  this.contactCount = this.contactCount - 1;
},
 collide$0: function() {
  var c = this.contactList;
  for (var t1 = this.contactFilter, t2 = this.broadPhase, t3 = this.contactListener; !(c == null);) {
    var fixtureA = c.get$fixtureA();
    var fixtureB = c.get$fixtureB();
    var bodyA = fixtureA.get$body();
    var bodyB = fixtureB.get$body();
    if ($.eqB(bodyA.get$awake(), false) && $.eqB(bodyB.get$awake(), false)) {
      c = c.get$next();
      continue;
    }
    if ($.eqB($.and(c.get$flags(), 8), 8)) {
      if ($.eqB(bodyB.shouldCollide$1(bodyA), false)) {
        var c0 = c.get$next();
        this.destroy$1(c);
        c = c0;
        continue;
      }
      if ($.eqB(t1.shouldCollide$2(fixtureA, fixtureB), false)) {
        c0 = c.get$next();
        this.destroy$1(c);
        c = c0;
        continue;
      }
      c.set$flags($.and(c.get$flags(), 4294967287));
    }
    if ($.eqB(t2.testOverlap$2(fixtureA.get$proxy(), fixtureB.get$proxy()), false)) {
      c0 = c.get$next();
      this.destroy$1(c);
      c = c0;
      continue;
    }
    c.update$1(t3);
    c = c.get$next();
  }
}
};

$$.Filter = {"":
 ["categoryBits?", "maskBits?", "groupIndex?"],
 "super": "Object",
 setFrom$1: function(other) {
  this.categoryBits = other.get$categoryBits();
  this.maskBits = other.get$maskBits();
  this.groupIndex = other.get$groupIndex();
}
};

$$.Fixture = {"":
 ["box?", "density?", "next=", "body?", "shape?", "friction=", "restitution=", "proxy?", "filter?", "isSensor?", "userData=", "_poolOne", "_poolTwo"],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 create$2: function(b, def) {
  this.userData = def.userData;
  this.friction = def.friction;
  this.restitution = def.restitution;
  this.body = b;
  this.next = null;
  this.filter.setFrom$1(def.filter);
  this.isSensor = def.isSensor;
  this.shape = def.shape.clone$0();
  this.density = def.density;
},
 destroy$0: function() {
  this.shape = null;
},
 createProxy$2: function(broadPhase, xf) {
  var t1 = this.shape;
  var t2 = this.box;
  t1.computeAxisAlignedBox$2(t2, xf);
  this.proxy = broadPhase.createProxy$2(t2, this);
},
 destroyProxy$1: function(broadPhase) {
  var t1 = this.proxy;
  if (t1 == null)
    return;
  broadPhase.destroyProxy$1(t1);
  this.proxy = null;
},
 synchronize$3: function(broadPhase, transformOne, transformTwo) {
  if (this.proxy == null)
    return;
  var t1 = this.shape;
  var t2 = this._poolOne;
  t1.computeAxisAlignedBox$2(t2, transformOne);
  t1 = this.shape;
  var t3 = this._poolTwo;
  t1.computeAxisAlignedBox$2(t3, transformTwo);
  t1 = t2.lowerBound.get$x();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(1, broadPhase, transformOne, transformTwo, t1, t2, t3, 0, 0);
  var t5 = t3.lowerBound.get$x();
  if (typeof t5 !== 'number')
    return this.synchronize$3$bailout(2, broadPhase, transformOne, transformTwo, t1, t2, t5, t3, 0);
  t1 = t1 < t5 ? t2.lowerBound.get$x() : t3.lowerBound.get$x();
  var t4 = this.box;
  t4.lowerBound.set$x(t1);
  t1 = t2.lowerBound.get$y();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(3, broadPhase, transformOne, transformTwo, t4, t2, t3, t1, 0);
  var t6 = t3.lowerBound.get$y();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(4, broadPhase, transformOne, transformTwo, t6, t4, t2, t3, t1);
  t1 = t1 < t6 ? t2.lowerBound.get$y() : t3.lowerBound.get$y();
  t4.lowerBound.set$y(t1);
  t1 = t2.upperBound.get$x();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(5, broadPhase, transformOne, transformTwo, t4, t1, t2, t3, 0);
  t6 = t3.upperBound.get$x();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(6, broadPhase, transformOne, transformTwo, t4, t1, t6, t2, t3);
  t1 = t1 > t6 ? t2.upperBound.get$x() : t3.upperBound.get$x();
  t4.upperBound.set$x(t1);
  t1 = t2.upperBound.get$y();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(7, broadPhase, transformOne, transformTwo, t4, t2, t3, t1, 0);
  t6 = t3.upperBound.get$y();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(8, broadPhase, transformOne, transformTwo, t4, t2, t3, t1, t6);
  t1 = t1 > t6 ? t2.upperBound.get$y() : t3.upperBound.get$y();
  t4.upperBound.set$y(t1);
  var disp = t2.lowerBound;
  t2 = transformTwo.position;
  t1 = t2.x;
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(9, broadPhase, transformOne, t4, disp, t2, t1, 0, 0);
  t5 = transformOne.position;
  t6 = t5.x;
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(10, broadPhase, t4, disp, t2, t1, t5, t6, 0);
  disp.set$x(t1 - t6);
  t2 = t2.y;
  if (typeof t2 !== 'number')
    return this.synchronize$3$bailout(11, broadPhase, disp, t5, t4, t2, 0, 0, 0);
  t5 = t5.y;
  if (typeof t5 !== 'number')
    return this.synchronize$3$bailout(12, broadPhase, t5, disp, t4, t2, 0, 0, 0);
  disp.set$y(t2 - t5);
  broadPhase.moveProxy$3(this.proxy, t4, disp);
},
 synchronize$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      var broadPhase = env0;
      var transformOne = env1;
      var transformTwo = env2;
      t1 = env3;
      t2 = env4;
      t3 = env5;
      break;
    case 2:
      broadPhase = env0;
      transformOne = env1;
      transformTwo = env2;
      t1 = env3;
      t2 = env4;
      t5 = env5;
      t3 = env6;
      break;
    case 3:
      broadPhase = env0;
      transformOne = env1;
      transformTwo = env2;
      t4 = env3;
      t2 = env4;
      t3 = env5;
      t1 = env6;
      break;
    case 4:
      broadPhase = env0;
      transformOne = env1;
      transformTwo = env2;
      t6 = env3;
      t4 = env4;
      t2 = env5;
      t3 = env6;
      t1 = env7;
      break;
    case 5:
      broadPhase = env0;
      transformOne = env1;
      transformTwo = env2;
      t4 = env3;
      t1 = env4;
      t2 = env5;
      t3 = env6;
      break;
    case 6:
      broadPhase = env0;
      transformOne = env1;
      transformTwo = env2;
      t4 = env3;
      t1 = env4;
      t6 = env5;
      t2 = env6;
      t3 = env7;
      break;
    case 7:
      broadPhase = env0;
      transformOne = env1;
      transformTwo = env2;
      t4 = env3;
      t2 = env4;
      t3 = env5;
      t1 = env6;
      break;
    case 8:
      broadPhase = env0;
      transformOne = env1;
      transformTwo = env2;
      t4 = env3;
      t2 = env4;
      t3 = env5;
      t1 = env6;
      t6 = env7;
      break;
    case 9:
      broadPhase = env0;
      transformOne = env1;
      t4 = env2;
      disp = env3;
      t2 = env4;
      t1 = env5;
      break;
    case 10:
      broadPhase = env0;
      t4 = env1;
      disp = env2;
      t2 = env3;
      t1 = env4;
      t5 = env5;
      t6 = env6;
      break;
    case 11:
      broadPhase = env0;
      disp = env1;
      t5 = env2;
      t4 = env3;
      t2 = env4;
      break;
    case 12:
      broadPhase = env0;
      t5 = env1;
      disp = env2;
      t4 = env3;
      t2 = env4;
      break;
  }
  switch (state0) {
    case 0:
      if (this.proxy == null)
        return;
      var t1 = this.shape;
      var t2 = this._poolOne;
      t1.computeAxisAlignedBox$2(t2, transformOne);
      t1 = this.shape;
      var t3 = this._poolTwo;
      t1.computeAxisAlignedBox$2(t3, transformTwo);
      t1 = t2.lowerBound.get$x();
    case 1:
      state0 = 0;
      var t5 = t3.lowerBound.get$x();
    case 2:
      state0 = 0;
      t1 = $.ltB(t1, t5) ? t2.lowerBound.get$x() : t3.lowerBound.get$x();
      var t4 = this.box;
      t4.lowerBound.set$x(t1);
      t1 = t2.lowerBound.get$y();
    case 3:
      state0 = 0;
      var t6 = t3.lowerBound.get$y();
    case 4:
      state0 = 0;
      t1 = $.ltB(t1, t6) ? t2.lowerBound.get$y() : t3.lowerBound.get$y();
      t4.lowerBound.set$y(t1);
      t1 = t2.upperBound.get$x();
    case 5:
      state0 = 0;
      t6 = t3.upperBound.get$x();
    case 6:
      state0 = 0;
      t1 = $.gtB(t1, t6) ? t2.upperBound.get$x() : t3.upperBound.get$x();
      t4.upperBound.set$x(t1);
      t1 = t2.upperBound.get$y();
    case 7:
      state0 = 0;
      t6 = t3.upperBound.get$y();
    case 8:
      state0 = 0;
      t1 = $.gtB(t1, t6) ? t2.upperBound.get$y() : t3.upperBound.get$y();
      t4.upperBound.set$y(t1);
      var disp = t2.lowerBound;
      t2 = transformTwo.position;
      t1 = t2.x;
    case 9:
      state0 = 0;
      t5 = transformOne.position;
      t6 = t5.x;
    case 10:
      state0 = 0;
      disp.set$x($.sub(t1, t6));
      t2 = t2.y;
    case 11:
      state0 = 0;
      t5 = t5.y;
    case 12:
      state0 = 0;
      disp.set$y($.sub(t2, t5));
      broadPhase.moveProxy$3(this.proxy, t4, disp);
  }
},
 getMassData$1: function(massData) {
  this.shape.computeMass$2(massData, this.density);
},
 get$type: function() {
  return this.shape.get$type();
}
};

$$.FixtureDef = {"":
 ["shape?", "userData=", "friction=", "restitution=", "density?", "isSensor?", "filter?"],
 "super": "Object",
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 FixtureDef$0: function() {
  var t1 = this.filter;
  t1.categoryBits = 1;
  t1.maskBits = 65535;
  t1.groupIndex = 0;
}
};

$$.Island = {"":
 ["listener", "bodies?", "contacts", "joints?", "positions", "velocities", "bodyCount", "jointCount", "contactCount?", "bodyCapacity", "contactCapacity", "jointCapacity", "positionIterationCount", "_contactSolver", "_translation", "impulse"],
 "super": "Object",
 init$4: function(argBodyCapacity, argContactCapacity, argJointCapacity, argListener) {
  this.bodyCapacity = argBodyCapacity;
  this.contactCapacity = argContactCapacity;
  this.jointCapacity = argJointCapacity;
  this.bodyCount = 0;
  this.contactCount = 0;
  this.listener = argListener;
  var t1 = this.bodies;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1)))
    this.bodies = $.ListImplementation_List(this.bodyCapacity);
  t1 = this.contacts;
  if (t1 == null || $.gtB(this.contactCapacity, $.get$length(t1)))
    this.contacts = $.ListImplementation_List(this.contactCapacity);
  t1 = this.joints;
  if (t1 == null || $.gtB(this.jointCapacity, $.get$length(t1)))
    this.joints = $.ListImplementation_List(this.jointCapacity);
  t1 = this.velocities;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))) {
    var old = this.velocities;
    if (old == null)
      old = $.ListImplementation_List(0);
    this.velocities = $.ListImplementation_List(this.bodyCapacity);
    $.setRange$3(this.velocities, 0, $.get$length(old), old);
    var i = $.get$length(old);
    if (i !== (i | 0))
      return this.init$4$bailout(1, i);
    for (; $.ltB(i, $.get$length(this.velocities)); ++i)
      $.indexSet(this.velocities, i, $.Velocity$());
  }
  t1 = this.positions;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))) {
    old = this.positions;
    if (old == null)
      old = $.ListImplementation_List(0);
    this.positions = $.ListImplementation_List(this.bodyCapacity);
    $.setRange$3(this.positions, 0, $.get$length(old), old);
    i = $.get$length(old);
    if (i !== (i | 0))
      return this.init$4$bailout(2, i);
    for (; $.ltB(i, $.get$length(this.positions)); ++i)
      $.indexSet(this.positions, i, $.Position$());
  }
},
 init$4$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      i = env0;
      break;
    case 2:
      i = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.bodyCapacity = argBodyCapacity;
      this.contactCapacity = argContactCapacity;
      this.jointCapacity = argJointCapacity;
      this.bodyCount = 0;
      this.contactCount = 0;
      this.listener = argListener;
      var t1 = this.bodies;
      if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1)))
        this.bodies = $.ListImplementation_List(this.bodyCapacity);
      t1 = this.contacts;
      if (t1 == null || $.gtB(this.contactCapacity, $.get$length(t1)))
        this.contacts = $.ListImplementation_List(this.contactCapacity);
      t1 = this.joints;
      if (t1 == null || $.gtB(this.jointCapacity, $.get$length(t1)))
        this.joints = $.ListImplementation_List(this.jointCapacity);
      t1 = this.velocities;
    case 1:
      if (state0 === 1 || state0 === 0 && (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))))
        switch (state0) {
          case 0:
            var old = this.velocities;
            if (old == null)
              old = $.ListImplementation_List(0);
            this.velocities = $.ListImplementation_List(this.bodyCapacity);
            $.setRange$3(this.velocities, 0, $.get$length(old), old);
            var i = $.get$length(old);
          case 1:
            state0 = 0;
            for (; $.ltB(i, $.get$length(this.velocities)); i = $.add(i, 1))
              $.indexSet(this.velocities, i, $.Velocity$());
        }
      t1 = this.positions;
    case 2:
      if (state0 === 2 || state0 === 0 && (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))))
        switch (state0) {
          case 0:
            old = this.positions;
            if (old == null)
              old = $.ListImplementation_List(0);
            this.positions = $.ListImplementation_List(this.bodyCapacity);
            $.setRange$3(this.positions, 0, $.get$length(old), old);
            i = $.get$length(old);
          case 2:
            state0 = 0;
            for (; $.ltB(i, $.get$length(this.positions)); i = $.add(i, 1))
              $.indexSet(this.positions, i, $.Position$());
        }
  }
},
 clear$0: function() {
  this.bodyCount = 0;
  this.contactCount = 0;
  this.jointCount = 0;
},
 solve$3: function(step, gravity, allowSleep) {
  var i = 0;
  while (true) {
    var t1 = this.bodyCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(1, step, gravity, allowSleep, t1, i, 0, 0, 0, 0, 0, 0);
    if (!(i < t1))
      break;
    c$0: {
      t1 = this.bodies;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(2, step, gravity, allowSleep, i, t1, 0, 0, 0, 0, 0, 0);
      if (i >= t1.length)
        throw $.ioore(i);
      var b = t1[i];
      t1 = b.get$type();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(3, step, gravity, allowSleep, b, t1, i, 0, 0, 0, 0, 0);
      if (!(t1 === 2))
        break c$0;
      t1 = b.get$_force().get$x();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(4, step, gravity, allowSleep, t1, b, i, 0, 0, 0, 0, 0);
      var t3 = b.get$invMass();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(5, step, gravity, allowSleep, t1, t3, b, i, 0, 0, 0, 0);
      t3 = t1 * t3;
      t1 = gravity.get$x();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(6, step, gravity, allowSleep, b, t3, t1, i, 0, 0, 0, 0);
      var t6 = (t3 + t1) * step.dt;
      var t7 = b.get$_force().get$y();
      if (typeof t7 !== 'number')
        return this.solve$3$bailout(7, step, gravity, allowSleep, t7, b, i, t6, 0, 0, 0, 0);
      var t9 = b.get$invMass();
      if (typeof t9 !== 'number')
        return this.solve$3$bailout(8, step, gravity, t9, t7, allowSleep, b, i, t6, 0, 0, 0);
      t9 = t7 * t9;
      t7 = gravity.get$y();
      if (typeof t7 !== 'number')
        return this.solve$3$bailout(9, step, gravity, allowSleep, t9, t7, b, i, t6, 0, 0, 0);
      var velocityDelta = $.Vector$(t6, (t9 + t7) * step.dt);
      b.get$linearVelocity().addLocal$1(velocityDelta);
      t6 = b.get$angularVelocity();
      if (typeof t6 !== 'number')
        return this.solve$3$bailout(10, step, gravity, allowSleep, b, i, t6, 0, 0, 0, 0, 0);
      var t13 = step.dt;
      var t14 = b.get$invInertia();
      if (typeof t14 !== 'number')
        return this.solve$3$bailout(11, step, gravity, allowSleep, b, i, t13, t6, t14, 0, 0, 0);
      t14 = t13 * t14;
      t13 = b.get$_torque();
      if (typeof t13 !== 'number')
        return this.solve$3$bailout(12, step, t14, t13, allowSleep, gravity, b, i, t6, 0, 0, 0);
      b.set$angularVelocity(t6 + t14 * t13);
      var t17 = step.dt;
      var t18 = b.get$linearDamping();
      if (typeof t18 !== 'number')
        return this.solve$3$bailout(13, step, gravity, allowSleep, b, t18, i, t17, 0, 0, 0, 0);
      var a = 1 - t17 * t18;
      t1 = a < 1;
      if (0 > (t1 ? a : 1))
        var a1 = 0;
      else
        a1 = t1 ? a : 1;
      b.get$linearVelocity().mulLocal$1(a1);
      t1 = step.dt;
      var t2 = b.get$angularDamping();
      if (typeof t2 !== 'number')
        return this.solve$3$bailout(14, step, gravity, allowSleep, b, t2, i, t1, 0, 0, 0, 0);
      var a2 = 1 - t1 * t2;
      var b1 = a2 < 1 ? a2 : 1;
      t1 = b.get$angularVelocity();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(15, step, gravity, allowSleep, b1, t1, b, i, 0, 0, 0, 0);
      b.set$angularVelocity(t1 * (0 > b1 ? 0 : b1));
    }
    ++i;
  }
  var i1 = -1;
  var i2 = 0;
  while (true) {
    t1 = this.contactCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(16, step, allowSleep, i1, i2, t1, 0, 0, 0, 0, 0, 0);
    if (!(i2 < t1))
      break;
    t1 = this.contacts;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.solve$3$bailout(17, step, allowSleep, i1, i2, t1, 0, 0, 0, 0, 0, 0);
    if (i2 >= t1.length)
      throw $.ioore(i2);
    var fixtureA = t1[i2].get$fixtureA();
    if (i2 >= t1.length)
      throw $.ioore(i2);
    var fixtureB = t1[i2].get$fixtureB();
    var bodyA = fixtureA.get$body();
    var bodyB = fixtureB.get$body();
    t1 = bodyA.get$type();
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(19, step, allowSleep, i1, i2, bodyB, t1, 0, 0, 0, 0, 0);
    if (!(t1 === 0)) {
      t1 = bodyB.get$type();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(20, step, allowSleep, i1, t1, i2, 0, 0, 0, 0, 0, 0);
      var nonStatic = !(t1 === 0);
    } else
      nonStatic = false;
    if (nonStatic) {
      ++i1;
      t1 = this.contacts;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(21, step, i1, t1, allowSleep, i2, 0, 0, 0, 0, 0, 0);
      if (i1 >= t1.length)
        throw $.ioore(i1);
      var temp = t1[i1];
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.solve$3$bailout(22, step, i1, t1, allowSleep, temp, i2, 0, 0, 0, 0, 0);
      var t4 = t1.length;
      if (i2 >= t4)
        throw $.ioore(i2);
      var t5 = t1[i2];
      if (i1 >= t4)
        throw $.ioore(i1);
      t1[i1] = t5;
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.solve$3$bailout(23, step, i1, allowSleep, t1, i2, temp, 0, 0, 0, 0, 0);
      if (i2 >= t1.length)
        throw $.ioore(i2);
      t1[i2] = temp;
    }
    ++i2;
  }
  t2 = this._contactSolver;
  t2.init$3(this.contacts, t1, step.dtRatio);
  t2.warmStart$0();
  i = 0;
  while (true) {
    t1 = this.jointCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(24, step, allowSleep, t2, i, t1, 0, 0, 0, 0, 0, 0);
    if (!(i < t1))
      break;
    t1 = this.joints;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.solve$3$bailout(25, step, allowSleep, t1, t2, i, 0, 0, 0, 0, 0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i].initVelocityConstraints$1(step);
    ++i;
  }
  for (i = 0; i < step.velocityIterations; ++i) {
    var j = 0;
    while (true) {
      t1 = this.jointCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(26, step, allowSleep, j, t2, t1, i, 0, 0, 0, 0, 0);
      if (!(j < t1))
        break;
      t1 = this.joints;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(27, step, t1, j, t2, allowSleep, i, 0, 0, 0, 0, 0);
      if (j >= t1.length)
        throw $.ioore(j);
      t1[j].solveVelocityConstraints$1(step);
      ++j;
    }
    t2.solveVelocityConstraints$0();
  }
  t2.storeImpulses$0();
  temp = $.Vector$(0, 0);
  t1 = this._translation;
  i = 0;
  while (true) {
    t3 = this.bodyCount;
    if (typeof t3 !== 'number')
      return this.solve$3$bailout(28, step, allowSleep, t3, t2, t1, i, temp, 0, 0, 0, 0);
    if (!(i < t3))
      break;
    c$0: {
      t3 = this.bodies;
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(29, step, allowSleep, t3, t2, t1, i, temp, 0, 0, 0, 0);
      if (i >= t3.length)
        throw $.ioore(i);
      b = t3[i];
      t3 = b.get$type();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(30, step, allowSleep, b, t3, t1, i, t2, temp, 0, 0, 0);
      if (t3 === 0)
        break c$0;
      t1.setFrom$1(b.get$linearVelocity());
      t1.mulLocal$1(step.dt);
      t3 = t1.x;
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(31, step, allowSleep, b, t2, t1, i, t3, temp, 0, 0, 0);
      t3 *= t3;
      t5 = t1.y;
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(32, step, allowSleep, b, t2, t1, i, t3, temp, t5, 0, 0);
      if (t3 + t5 * t5 > 4) {
        t3 = $.get$length(t1);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        var ratio = 2 / t3;
        b.get$linearVelocity().mulLocal$1(ratio);
      }
      t3 = step.dt;
      t4 = b.get$angularVelocity();
      if (typeof t4 !== 'number')
        return this.solve$3$bailout(33, step, t3, b, allowSleep, t2, t1, i, temp, t4, 0, 0);
      var rotation = t3 * t4;
      if (rotation * rotation > 2.4674011002723395) {
        t3 = $.abs(rotation);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        ratio = 1.5707963267948966 / t3;
        t3 = b.get$angularVelocity();
        if (typeof t3 !== 'number')
          return this.solve$3$bailout(34, step, allowSleep, b, t2, t1, i, temp, ratio, t3, 0, 0);
        b.set$angularVelocity(t3 * ratio);
      }
      t3 = b.get$sweep();
      t3.get$centerZero().setFrom$1(t3.get$center());
      t4 = b.get$sweep().get$angle();
      b.get$sweep().set$angleZero(t4);
      temp.setFrom$1(b.get$linearVelocity());
      temp.mulLocal$1(step.dt);
      b.get$sweep().get$center().addLocal$1(temp);
      t4 = b.get$sweep();
      t5 = t4.get$angle();
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(35, step, allowSleep, b, t4, t5, t1, i, t2, temp, 0, 0);
      t7 = step.dt;
      var t8 = b.get$angularVelocity();
      if (typeof t8 !== 'number')
        return this.solve$3$bailout(36, step, allowSleep, b, t7, t4, t5, t1, i, t8, t2, temp);
      t4.set$angle(t5 + t7 * t8);
      b.synchronizeTransform$0();
    }
    ++i;
  }
  for (i = 0; i < step.positionIterations; ++i) {
    var contactsOkay = t2.solvePositionConstraints$1(0.2);
    j = 0;
    var jointsOkay = true;
    while (true) {
      t1 = this.jointCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(37, step, allowSleep, t1, i, jointsOkay, t2, contactsOkay, j, 0, 0, 0);
      if (!(j < t1))
        break;
      t1 = this.joints;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(38, step, allowSleep, i, jointsOkay, t1, contactsOkay, t2, j, 0, 0, 0);
      if (j >= t1.length)
        throw $.ioore(j);
      var jointOkay = t1[j].solvePositionConstraints$1(0.2);
      jointsOkay = jointsOkay && jointOkay === true;
      ++j;
    }
    if (contactsOkay === true && jointsOkay)
      break;
  }
  this.report$1(t2.constraints);
  if (allowSleep) {
    var minSleepTime = 99999999999999;
    i = 0;
    while (true) {
      t1 = this.bodyCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(39, step, t1, minSleepTime, i, 0, 0, 0, 0, 0, 0, 0);
      if (!(i < t1))
        break;
      c$0: {
        t1 = this.bodies;
        if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.solve$3$bailout(40, step, minSleepTime, t1, i, 0, 0, 0, 0, 0, 0, 0);
        if (i >= t1.length)
          throw $.ioore(i);
        b = t1[i];
        t1 = b.get$type();
        if (typeof t1 !== 'number')
          return this.solve$3$bailout(41, step, b, minSleepTime, t1, i, 0, 0, 0, 0, 0, 0);
        if (t1 === 0)
          break c$0;
        t1 = b.get$flags();
        if (t1 !== (t1 | 0))
          return this.solve$3$bailout(42, step, b, minSleepTime, i, t1, 0, 0, 0, 0, 0, 0);
        if ((t1 & 4) === 0) {
          b.set$sleepTime(0);
          minSleepTime = 0;
        }
        t1 = b.get$flags();
        if (t1 !== (t1 | 0))
          return this.solve$3$bailout(43, step, b, i, minSleepTime, t1, 0, 0, 0, 0, 0, 0);
        if ((t1 & 4) !== 0) {
          t1 = b.get$angularVelocity();
          if (typeof t1 !== 'number')
            return this.solve$3$bailout(44, step, b, t1, i, minSleepTime, 0, 0, 0, 0, 0, 0);
          t3 = b.get$angularVelocity();
          if (typeof t3 !== 'number')
            return this.solve$3$bailout(45, step, b, t1, t3, i, minSleepTime, 0, 0, 0, 0, 0);
          if (!(t1 * t3 > 0.0012184696791468343)) {
            t1 = b.get$linearVelocity();
            t2 = b.get$linearVelocity();
            t3 = t1.get$x();
            if (typeof t3 !== 'number')
              return this.solve$3$bailout(46, step, t3, b, i, minSleepTime, t1, t2, 0, 0, 0, 0);
            t5 = t2.get$x();
            if (typeof t5 !== 'number')
              return this.solve$3$bailout(47, step, t3, t5, b, i, minSleepTime, t1, t2, 0, 0, 0);
            t5 = t3 * t5;
            t1 = t1.get$y();
            if (typeof t1 !== 'number')
              return this.solve$3$bailout(48, step, b, t5, t1, i, minSleepTime, t2, 0, 0, 0, 0);
            t2 = t2.get$y();
            if (typeof t2 !== 'number')
              return this.solve$3$bailout(49, step, b, t5, t1, i, minSleepTime, t2, 0, 0, 0, 0);
            t8 = t5 + t1 * t2 > 0.0001;
            t1 = t8;
          } else
            t1 = true;
        } else
          t1 = true;
        if (t1) {
          b.set$sleepTime(0);
          minSleepTime = 0;
        } else {
          t1 = b.get$sleepTime();
          if (typeof t1 !== 'number')
            return this.solve$3$bailout(50, step, b, i, minSleepTime, t1, 0, 0, 0, 0, 0, 0);
          b.set$sleepTime(t1 + step.dt);
          minSleepTime = $.min(minSleepTime, b.get$sleepTime());
        }
      }
      ++i;
    }
    if (minSleepTime >= 0.5) {
      i = 0;
      while (true) {
        t1 = this.bodyCount;
        if (typeof t1 !== 'number')
          return this.solve$3$bailout(51, t1, i, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (!(i < t1))
          break;
        t1 = this.bodies;
        if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.solve$3$bailout(52, t1, i, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i].set$awake(false);
        ++i;
      }
    }
  }
},
 solve$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      var step = env0;
      var gravity = env1;
      var allowSleep = env2;
      t1 = env3;
      i = env4;
      break;
    case 2:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      i = env3;
      t1 = env4;
      break;
    case 3:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      b = env3;
      t1 = env4;
      i = env5;
      break;
    case 4:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      t1 = env3;
      b = env4;
      i = env5;
      break;
    case 5:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      t1 = env3;
      t3 = env4;
      b = env5;
      i = env6;
      break;
    case 6:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      b = env3;
      t3 = env4;
      t1 = env5;
      i = env6;
      break;
    case 7:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      t7 = env3;
      b = env4;
      i = env5;
      t6 = env6;
      break;
    case 8:
      step = env0;
      gravity = env1;
      t9 = env2;
      t7 = env3;
      allowSleep = env4;
      b = env5;
      i = env6;
      t6 = env7;
      break;
    case 9:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      t9 = env3;
      t7 = env4;
      b = env5;
      i = env6;
      t6 = env7;
      break;
    case 10:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      b = env3;
      i = env4;
      t6 = env5;
      break;
    case 11:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      b = env3;
      i = env4;
      t13 = env5;
      t6 = env6;
      t14 = env7;
      break;
    case 12:
      step = env0;
      t14 = env1;
      t13 = env2;
      allowSleep = env3;
      gravity = env4;
      b = env5;
      i = env6;
      t6 = env7;
      break;
    case 13:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      b = env3;
      t18 = env4;
      i = env5;
      t17 = env6;
      break;
    case 14:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      b = env3;
      t2 = env4;
      i = env5;
      t1 = env6;
      break;
    case 15:
      step = env0;
      gravity = env1;
      allowSleep = env2;
      b1 = env3;
      t1 = env4;
      b = env5;
      i = env6;
      break;
    case 16:
      step = env0;
      allowSleep = env1;
      i1 = env2;
      i2 = env3;
      t1 = env4;
      break;
    case 17:
      step = env0;
      allowSleep = env1;
      i1 = env2;
      i2 = env3;
      t1 = env4;
      break;
    case 18:
      step = env0;
      allowSleep = env1;
      i1 = env2;
      fixtureA = env3;
      i2 = env4;
      t3 = env5;
      break;
    case 19:
      step = env0;
      allowSleep = env1;
      i1 = env2;
      i2 = env3;
      bodyB = env4;
      t1 = env5;
      break;
    case 20:
      step = env0;
      allowSleep = env1;
      i1 = env2;
      t1 = env3;
      i2 = env4;
      break;
    case 21:
      step = env0;
      i1 = env1;
      t1 = env2;
      allowSleep = env3;
      i2 = env4;
      break;
    case 22:
      step = env0;
      i1 = env1;
      t1 = env2;
      allowSleep = env3;
      temp = env4;
      i2 = env5;
      break;
    case 23:
      step = env0;
      i1 = env1;
      allowSleep = env2;
      t1 = env3;
      i2 = env4;
      temp = env5;
      break;
    case 24:
      step = env0;
      allowSleep = env1;
      t1 = env2;
      i = env3;
      t2 = env4;
      break;
    case 25:
      step = env0;
      allowSleep = env1;
      t2 = env2;
      t1 = env3;
      i = env4;
      break;
    case 26:
      step = env0;
      allowSleep = env1;
      j = env2;
      t1 = env3;
      t2 = env4;
      i = env5;
      break;
    case 27:
      step = env0;
      t2 = env1;
      j = env2;
      t1 = env3;
      allowSleep = env4;
      i = env5;
      break;
    case 28:
      step = env0;
      allowSleep = env1;
      t3 = env2;
      t1 = env3;
      t2 = env4;
      i = env5;
      temp = env6;
      break;
    case 29:
      step = env0;
      allowSleep = env1;
      t3 = env2;
      t1 = env3;
      t2 = env4;
      i = env5;
      temp = env6;
      break;
    case 30:
      step = env0;
      allowSleep = env1;
      b = env2;
      t3 = env3;
      t2 = env4;
      i = env5;
      t1 = env6;
      temp = env7;
      break;
    case 31:
      step = env0;
      allowSleep = env1;
      b = env2;
      t1 = env3;
      t2 = env4;
      i = env5;
      t3 = env6;
      temp = env7;
      break;
    case 32:
      step = env0;
      allowSleep = env1;
      b = env2;
      t1 = env3;
      t2 = env4;
      i = env5;
      t3 = env6;
      temp = env7;
      t5 = env8;
      break;
    case 33:
      step = env0;
      t3 = env1;
      b = env2;
      allowSleep = env3;
      t1 = env4;
      t2 = env5;
      i = env6;
      temp = env7;
      t4 = env8;
      break;
    case 34:
      step = env0;
      allowSleep = env1;
      b = env2;
      t1 = env3;
      t2 = env4;
      i = env5;
      temp = env6;
      ratio = env7;
      t3 = env8;
      break;
    case 35:
      step = env0;
      allowSleep = env1;
      b = env2;
      t4 = env3;
      t5 = env4;
      t2 = env5;
      i = env6;
      t1 = env7;
      temp = env8;
      break;
    case 36:
      step = env0;
      allowSleep = env1;
      b = env2;
      t7 = env3;
      t4 = env4;
      t5 = env5;
      t2 = env6;
      i = env7;
      t8 = env8;
      t1 = env9;
      temp = env10;
      break;
    case 37:
      step = env0;
      allowSleep = env1;
      t2 = env2;
      i = env3;
      jointsOkay = env4;
      t1 = env5;
      contactsOkay = env6;
      j = env7;
      break;
    case 38:
      step = env0;
      allowSleep = env1;
      i = env2;
      jointsOkay = env3;
      t2 = env4;
      contactsOkay = env5;
      t1 = env6;
      j = env7;
      break;
    case 39:
      step = env0;
      t1 = env1;
      minSleepTime = env2;
      i = env3;
      break;
    case 40:
      step = env0;
      minSleepTime = env1;
      t1 = env2;
      i = env3;
      break;
    case 41:
      step = env0;
      b = env1;
      minSleepTime = env2;
      t1 = env3;
      i = env4;
      break;
    case 42:
      step = env0;
      b = env1;
      minSleepTime = env2;
      i = env3;
      t1 = env4;
      break;
    case 43:
      step = env0;
      b = env1;
      i = env2;
      minSleepTime = env3;
      t1 = env4;
      break;
    case 44:
      step = env0;
      b = env1;
      t1 = env2;
      i = env3;
      minSleepTime = env4;
      break;
    case 45:
      step = env0;
      b = env1;
      t1 = env2;
      t3 = env3;
      i = env4;
      minSleepTime = env5;
      break;
    case 46:
      step = env0;
      t3 = env1;
      b = env2;
      i = env3;
      minSleepTime = env4;
      t1 = env5;
      t2 = env6;
      break;
    case 47:
      step = env0;
      t3 = env1;
      t5 = env2;
      b = env3;
      i = env4;
      minSleepTime = env5;
      t1 = env6;
      t2 = env7;
      break;
    case 48:
      step = env0;
      b = env1;
      t5 = env2;
      t1 = env3;
      i = env4;
      minSleepTime = env5;
      t2 = env6;
      break;
    case 49:
      step = env0;
      b = env1;
      t5 = env2;
      t1 = env3;
      i = env4;
      minSleepTime = env5;
      t2 = env6;
      break;
    case 50:
      step = env0;
      b = env1;
      i = env2;
      minSleepTime = env3;
      t1 = env4;
      break;
    case 51:
      t1 = env0;
      i = env1;
      break;
    case 52:
      t1 = env0;
      i = env1;
      break;
  }
  switch (state0) {
    case 0:
      var i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t1 = this.bodyCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t1 = this.bodies;
                  case 2:
                    state0 = 0;
                    var b = $.index(t1, i);
                    t1 = b.get$type();
                  case 3:
                    state0 = 0;
                    if (!$.eqB(t1, 2))
                      break c$0;
                    t1 = b.get$_force().get$x();
                  case 4:
                    state0 = 0;
                    var t3 = b.get$invMass();
                  case 5:
                    state0 = 0;
                    t3 = $.mul(t1, t3);
                    t1 = gravity.get$x();
                  case 6:
                    state0 = 0;
                    var t6 = $.mul($.add(t3, t1), step.dt);
                    var t7 = b.get$_force().get$y();
                  case 7:
                    state0 = 0;
                    var t9 = b.get$invMass();
                  case 8:
                    state0 = 0;
                    t9 = $.mul(t7, t9);
                    t7 = gravity.get$y();
                  case 9:
                    state0 = 0;
                    var velocityDelta = $.Vector$(t6, $.mul($.add(t9, t7), step.dt));
                    b.get$linearVelocity().addLocal$1(velocityDelta);
                    t6 = b.get$angularVelocity();
                  case 10:
                    state0 = 0;
                    var t13 = step.dt;
                    var t14 = b.get$invInertia();
                  case 11:
                    state0 = 0;
                    if (typeof t14 !== 'number')
                      throw $.iae(t14);
                    t14 = t13 * t14;
                    t13 = b.get$_torque();
                  case 12:
                    state0 = 0;
                    if (typeof t13 !== 'number')
                      throw $.iae(t13);
                    b.set$angularVelocity($.add(t6, t14 * t13));
                    var t17 = step.dt;
                    var t18 = b.get$linearDamping();
                  case 13:
                    state0 = 0;
                    if (typeof t18 !== 'number')
                      throw $.iae(t18);
                    t18 = t17 * t18;
                    if (typeof t18 !== 'number')
                      throw $.iae(t18);
                    var a = 1 - t18;
                    t1 = a < 1;
                    if (0 > (t1 ? a : 1))
                      var a1 = 0;
                    else
                      a1 = t1 ? a : 1;
                    b.get$linearVelocity().mulLocal$1(a1);
                    t1 = step.dt;
                    var t2 = b.get$angularDamping();
                  case 14:
                    state0 = 0;
                    if (typeof t2 !== 'number')
                      throw $.iae(t2);
                    t2 = t1 * t2;
                    if (typeof t2 !== 'number')
                      throw $.iae(t2);
                    var a2 = 1 - t2;
                    var b1 = a2 < 1 ? a2 : 1;
                    t1 = b.get$angularVelocity();
                  case 15:
                    state0 = 0;
                    b.set$angularVelocity($.mul(t1, 0 > b1 ? 0 : b1));
                }
              }
              ++i;
          }
      var i1 = -1;
      var i2 = 0;
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      L1:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.contactCount;
            case 16:
              state0 = 0;
              if (!$.ltB(i2, t1))
                break L1;
              t1 = this.contacts;
            case 17:
              state0 = 0;
              var fixtureA = $.index(t1, i2).get$fixtureA();
              t3 = this.contacts;
            case 18:
              state0 = 0;
              var fixtureB = $.index(t3, i2).get$fixtureB();
              var bodyA = fixtureA.get$body();
              var bodyB = fixtureB.get$body();
              t1 = bodyA.get$type();
            case 19:
              state0 = 0;
            case 20:
              if (state0 === 20 || state0 === 0 && !$.eqB(t1, 0))
                switch (state0) {
                  case 0:
                    t1 = bodyB.get$type();
                  case 20:
                    state0 = 0;
                    var nonStatic = !$.eqB(t1, 0);
                }
              else
                nonStatic = false;
            default:
              if (state0 === 23 || state0 === 22 || state0 === 21 || state0 === 0 && nonStatic)
                switch (state0) {
                  case 0:
                    ++i1;
                    t1 = this.contacts;
                  case 21:
                    state0 = 0;
                    var temp = $.index(t1, i1);
                    t1 = this.contacts;
                  case 22:
                    state0 = 0;
                    $.indexSet(t1, i1, $.index(t1, i2));
                    t1 = this.contacts;
                  case 23:
                    state0 = 0;
                    $.indexSet(t1, i2, temp);
                }
              ++i2;
          }
      t1 = this._contactSolver;
      t1.init$3(this.contacts, this.contactCount, step.dtRatio);
      t1.warmStart$0();
      i = 0;
    case 24:
    case 25:
      L2:
        while (true)
          switch (state0) {
            case 0:
              t2 = this.jointCount;
            case 24:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L2;
              t2 = this.joints;
            case 25:
              state0 = 0;
              $.index(t2, i).initVelocityConstraints$1(step);
              ++i;
          }
      i = 0;
    case 26:
    case 27:
      L3:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < step.velocityIterations))
                break L3;
              var j = 0;
            default:
              L4:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = this.jointCount;
                    case 26:
                      state0 = 0;
                      if (!$.ltB(j, t2))
                        break L4;
                      t2 = this.joints;
                    case 27:
                      state0 = 0;
                      $.index(t2, j).solveVelocityConstraints$1(step);
                      ++j;
                  }
              t1.solveVelocityConstraints$0();
              ++i;
          }
      t1.storeImpulses$0();
      temp = $.Vector$(0, 0);
      t2 = this._translation;
      i = 0;
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
      L5:
        while (true)
          switch (state0) {
            case 0:
              t3 = this.bodyCount;
            case 28:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L5;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t3 = this.bodies;
                  case 29:
                    state0 = 0;
                    b = $.index(t3, i);
                    t3 = b.get$type();
                  case 30:
                    state0 = 0;
                    if ($.eqB(t3, 0))
                      break c$0;
                    t2.setFrom$1(b.get$linearVelocity());
                    t2.mulLocal$1(step.dt);
                    t3 = t2.x;
                  case 31:
                    state0 = 0;
                    t3 = $.mul(t3, t3);
                    var t5 = t2.y;
                  case 32:
                    state0 = 0;
                    if ($.gtB($.add(t3, $.mul(t5, t5)), 4)) {
                      t3 = $.get$length(t2);
                      if (typeof t3 !== 'number')
                        throw $.iae(t3);
                      var ratio = 2 / t3;
                      b.get$linearVelocity().mulLocal$1(ratio);
                    }
                    t3 = step.dt;
                    var t4 = b.get$angularVelocity();
                  case 33:
                    state0 = 0;
                    if (typeof t4 !== 'number')
                      throw $.iae(t4);
                    var rotation = t3 * t4;
                  case 34:
                    if (state0 === 34 || state0 === 0 && rotation * rotation > 2.4674011002723395)
                      switch (state0) {
                        case 0:
                          t3 = $.abs(rotation);
                          if (typeof t3 !== 'number')
                            throw $.iae(t3);
                          ratio = 1.5707963267948966 / t3;
                          t3 = b.get$angularVelocity();
                        case 34:
                          state0 = 0;
                          b.set$angularVelocity($.mul(t3, ratio));
                      }
                    t3 = b.get$sweep();
                    t3.get$centerZero().setFrom$1(t3.get$center());
                    t4 = b.get$sweep().get$angle();
                    b.get$sweep().set$angleZero(t4);
                    temp.setFrom$1(b.get$linearVelocity());
                    temp.mulLocal$1(step.dt);
                    b.get$sweep().get$center().addLocal$1(temp);
                    t4 = b.get$sweep();
                    t5 = t4.get$angle();
                  case 35:
                    state0 = 0;
                    t7 = step.dt;
                    var t8 = b.get$angularVelocity();
                  case 36:
                    state0 = 0;
                    if (typeof t8 !== 'number')
                      throw $.iae(t8);
                    t4.set$angle($.add(t5, t7 * t8));
                    b.synchronizeTransform$0();
                }
              }
              ++i;
          }
      i = 0;
    case 37:
    case 38:
      L6:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < step.positionIterations))
                break L6;
              var contactsOkay = t1.solvePositionConstraints$1(0.2);
              j = 0;
              var jointsOkay = true;
            default:
              L7:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = this.jointCount;
                    case 37:
                      state0 = 0;
                      if (!$.ltB(j, t2))
                        break L7;
                      t2 = this.joints;
                    case 38:
                      state0 = 0;
                      var jointOkay = $.index(t2, j).solvePositionConstraints$1(0.2);
                      jointsOkay = jointsOkay && jointOkay === true;
                      ++j;
                  }
              if (contactsOkay === true && jointsOkay)
                break L6;
              ++i;
          }
      this.report$1(t1.constraints);
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
      if (state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 0 && allowSleep)
        switch (state0) {
          case 0:
            var minSleepTime = 99999999999999;
            i = 0;
          default:
            L8:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = this.bodyCount;
                  case 39:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L8;
                  default:
                    c$0: {
                      switch (state0) {
                        case 0:
                          t1 = this.bodies;
                        case 40:
                          state0 = 0;
                          b = $.index(t1, i);
                          t1 = b.get$type();
                        case 41:
                          state0 = 0;
                          if ($.eqB(t1, 0))
                            break c$0;
                          t1 = b.get$flags();
                        case 42:
                          state0 = 0;
                          if ($.eqB($.and(t1, 4), 0)) {
                            b.set$sleepTime(0);
                            minSleepTime = 0;
                          }
                          t1 = b.get$flags();
                        case 43:
                          state0 = 0;
                        default:
                          if (state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 0 && !$.eqB($.and(t1, 4), 0))
                            switch (state0) {
                              case 0:
                                t1 = b.get$angularVelocity();
                              case 44:
                                state0 = 0;
                                t3 = b.get$angularVelocity();
                              case 45:
                                state0 = 0;
                              default:
                                if (state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 0 && !$.gtB($.mul(t1, t3), 0.0012184696791468343))
                                  switch (state0) {
                                    case 0:
                                      t1 = b.get$linearVelocity();
                                      t2 = b.get$linearVelocity();
                                      t3 = t1.get$x();
                                    case 46:
                                      state0 = 0;
                                      t5 = t2.get$x();
                                    case 47:
                                      state0 = 0;
                                      t5 = $.mul(t3, t5);
                                      t1 = t1.get$y();
                                    case 48:
                                      state0 = 0;
                                      t2 = t2.get$y();
                                    case 49:
                                      state0 = 0;
                                      t8 = $.gtB($.add(t5, $.mul(t1, t2)), 0.0001);
                                      t1 = t8;
                                  }
                                else
                                  t1 = true;
                            }
                          else
                            t1 = true;
                        case 50:
                          if (state0 === 0 && t1) {
                            b.set$sleepTime(0);
                            minSleepTime = 0;
                          } else
                            switch (state0) {
                              case 0:
                                t1 = b.get$sleepTime();
                              case 50:
                                state0 = 0;
                                b.set$sleepTime($.add(t1, step.dt));
                                minSleepTime = $.min(minSleepTime, b.get$sleepTime());
                            }
                      }
                    }
                    ++i;
                }
          case 51:
          case 52:
            if (state0 === 52 || state0 === 51 || state0 === 0 && minSleepTime >= 0.5)
              switch (state0) {
                case 0:
                  i = 0;
                default:
                  L9:
                    while (true)
                      switch (state0) {
                        case 0:
                          t1 = this.bodyCount;
                        case 51:
                          state0 = 0;
                          if (!$.ltB(i, t1))
                            break L9;
                          t1 = this.bodies;
                        case 52:
                          state0 = 0;
                          $.index(t1, i).set$awake(false);
                          ++i;
                      }
              }
        }
  }
},
 addBody$1: function(body) {
  body.set$islandIndex(this.bodyCount);
  var t1 = this.bodies;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addBody$1$bailout(1, body, t1, 0);
  var t3 = this.bodyCount;
  if (typeof t3 !== 'number')
    return this.addBody$1$bailout(2, body, t1, t3);
  this.bodyCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = body;
},
 addBody$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var body = env0;
      t1 = env1;
      break;
    case 2:
      body = env0;
      t1 = env1;
      t3 = env2;
      break;
  }
  switch (state0) {
    case 0:
      body.set$islandIndex(this.bodyCount);
      var t1 = this.bodies;
    case 1:
      state0 = 0;
      var t3 = this.bodyCount;
    case 2:
      state0 = 0;
      this.bodyCount = $.add(t3, 1);
      $.indexSet(t1, t3, body);
  }
},
 addContact$1: function(contact) {
  var t1 = this.contacts;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addContact$1$bailout(1, contact, t1, 0);
  var t3 = this.contactCount;
  if (typeof t3 !== 'number')
    return this.addContact$1$bailout(2, contact, t1, t3);
  this.contactCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = contact;
},
 addContact$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var contact = env0;
      t1 = env1;
      break;
    case 2:
      contact = env0;
      t1 = env1;
      t3 = env2;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.contacts;
    case 1:
      state0 = 0;
      var t3 = this.contactCount;
    case 2:
      state0 = 0;
      this.contactCount = $.add(t3, 1);
      $.indexSet(t1, t3, contact);
  }
},
 addJoint$1: function(joint) {
  var t1 = this.joints;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addJoint$1$bailout(1, joint, t1, 0);
  var t3 = this.jointCount;
  if (typeof t3 !== 'number')
    return this.addJoint$1$bailout(2, joint, t1, t3);
  this.jointCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = joint;
},
 addJoint$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var joint = env0;
      t1 = env1;
      break;
    case 2:
      joint = env0;
      t1 = env1;
      t3 = env2;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.joints;
    case 1:
      state0 = 0;
      var t3 = this.jointCount;
    case 2:
      state0 = 0;
      this.jointCount = $.add(t3, 1);
      $.indexSet(t1, t3, joint);
  }
},
 report$1: function(constraints) {
  if (this.listener == null)
    return;
  for (var i = 0; $.ltB(i, this.contactCount); ++i) {
    var c = $.index(this.contacts, i);
    if (i >= constraints.length)
      throw $.ioore(i);
    var cc = constraints[i];
    for (var j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
      var t1 = this.impulse.normalImpulses;
      var t2 = $.index(cc.get$points(), j).get$normalImpulse();
      if (j >= t1.length)
        throw $.ioore(j);
      t1[j] = t2;
      t2 = this.impulse.tangentImpulses;
      t1 = $.index(cc.get$points(), j).get$tangentImpulse();
      if (j >= t2.length)
        throw $.ioore(j);
      t2[j] = t1;
    }
    this.listener.postSolve$2(c, this.impulse);
  }
}
};

$$.Position = {"":
 ["x=", "a="],
 "super": "Object",
 Position$0: function() {
  this.x = $.Vector$(0, 0);
  this.a = 0;
}
};

$$.Velocity = {"":
 ["v?", "a="],
 "super": "Object",
 Velocity$0: function() {
  this.v = $.Vector$(0, 0);
  this.a = 0;
}
};

$$.TimeStep = {"":
 ["dt", "inv_dt", "dtRatio?", "velocityIterations", "positionIterations", "warmStarting?"],
 "super": "Object"
};

$$.World = {"":
 ["_flags", "_contactManager", "_bodyList", "_jointList", "_bodyCount", "_jointCount", "_gravity", "_allowSleep", "_debugDraw", "_fixtureDestructionListener", "_jointDestructionListener", "_pool", "_inverseTimestep", "_warmStarting", "_continuousPhysics", "_contactStacks", "center?", "axis", "timestep", "cA", "cB", "wqwrapper", "toiInput", "toiOutput", "backup", "toiSolver", "contacts", "island", "stack"],
 "super": "Object",
 _fixtureDestructionListener$1: function(arg0) { return this._fixtureDestructionListener.call$1(arg0); },
 _jointDestructionListener$1: function(arg0) { return this._jointDestructionListener.call$1(arg0); },
 _addType$3: function(creatorStack, type1, type2) {
  var register = $.ContactRegister$();
  register.creator = creatorStack;
  register.primary = true;
  var t1 = this._contactStacks;
  var t2 = t1.length;
  if (type1 < 0 || type1 >= t2)
    throw $.ioore(type1);
  $.indexSet(t1[type1], type2, register);
  if (type1 !== type2) {
    var register2 = $.ContactRegister$();
    register2.creator = creatorStack;
    register2.primary = false;
    if (type2 < 0 || type2 >= t2)
      throw $.ioore(type2);
    $.indexSet(t1[type2], type1, register2);
  }
},
 _initializeRegisters$0: function() {
  var t1 = this._pool;
  this._addType$3(t1.getCircleContactStack$0(), 0, 0);
  this._addType$3(t1.getPolyCircleContactStack$0(), 1, 0);
  this._addType$3(t1.getPolyContactStack$0(), 1, 1);
},
 popContact$2: function(fixtureA, fixtureB) {
  var type1 = fixtureA.get$type();
  var type2 = fixtureB.get$type();
  var t1 = this._contactStacks;
  if (type1 !== (type1 | 0))
    throw $.iae(type1);
  if (type1 < 0 || type1 >= t1.length)
    throw $.ioore(type1);
  var reg = $.index(t1[type1], type2);
  var creator = reg.get$creator();
  if (!(creator == null)) {
    if ($.isEmpty(creator) === true)
      creator = this._getFreshContactStack$2(type1, type2);
    if (reg.get$primary() === true) {
      var c = creator.removeFirst$0();
      c.init$2(fixtureA, fixtureB);
      return c;
    } else {
      c = creator.removeFirst$0();
      c.init$2(fixtureB, fixtureA);
      return c;
    }
  } else
    return;
},
 _getFreshContactStack$2: function(type1, type2) {
  if (type1 === 0 && $.eqB(type2, 0))
    return this._pool.getCircleContactStack$0();
  else {
    var t1 = type1 === 1 && $.eqB(type2, 1);
    var t2 = this._pool;
    if (t1)
      return t2.getPolyContactStack$0();
    else
      return t2.getPolyCircleContactStack$0();
  }
},
 pushContact$1: function(contact) {
  if ($.gtB(contact.get$manifold().get$pointCount(), 0)) {
    contact.get$fixtureA().get$body().set$awake(true);
    contact.get$fixtureB().get$body().set$awake(true);
  }
  var type1 = contact.get$fixtureA().get$type();
  var type2 = contact.get$fixtureB().get$type();
  var t1 = this._contactStacks;
  if (type1 !== (type1 | 0))
    throw $.iae(type1);
  if (type1 < 0 || type1 >= t1.length)
    throw $.ioore(type1);
  $.index(t1[type1], type2).get$creator().addFirst$1(contact);
},
 get$contactListener: function() {
  return this._contactManager.get$contactListener();
},
 set$debugDraw: function(debugDraw) {
  this._debugDraw = debugDraw;
},
 createBody$1: function(def) {
  if (this.get$locked() === true)
    return;
  var b = $.Body$(def, this);
  b.prev = null;
  b.next = this._bodyList;
  var t1 = this._bodyList;
  if (!(t1 == null))
    t1.set$prev(b);
  this._bodyList = b;
  this._bodyCount = this._bodyCount + 1;
  return b;
},
 createJoint$1: function(def) {
  if (this.get$locked() === true)
    return;
  var j = $.Joint_Joint$create(this, def);
  j.set$_prev(null);
  j.set$_lib2_next(this._jointList);
  var t1 = this._jointList;
  if (!(t1 == null))
    t1.set$_prev(j);
  this._jointList = j;
  this._jointCount = this._jointCount + 1;
  j.get$edgeA().set$joint(j);
  t1 = j.get$bodyB();
  j.get$edgeA().set$other(t1);
  j.get$edgeA().set$prev(null);
  t1 = j.get$bodyA().get$jointList();
  j.get$edgeA().set$next(t1);
  if (!(j.get$bodyA().get$jointList() == null)) {
    t1 = j.get$edgeA();
    j.get$bodyA().get$jointList().set$prev(t1);
  }
  t1 = j.get$edgeA();
  j.get$bodyA().set$jointList(t1);
  j.get$edgeB().set$joint(j);
  t1 = j.get$bodyA();
  j.get$edgeB().set$other(t1);
  j.get$edgeB().set$prev(null);
  t1 = j.get$bodyB().get$jointList();
  j.get$edgeB().set$next(t1);
  if (!(j.get$bodyB().get$jointList() == null)) {
    t1 = j.get$edgeB();
    j.get$bodyB().get$jointList().set$prev(t1);
  }
  t1 = j.get$edgeB();
  j.get$bodyB().set$jointList(t1);
  var bodyA = def.get$bodyA();
  var bodyB = def.get$bodyB();
  t1 = def.get$collideConnected();
  if (typeof t1 !== 'boolean')
    return this.createJoint$1$bailout(1, bodyA, j, bodyB, t1);
  if (!t1) {
    var edge = bodyB.get$contactList();
    for (; !(edge == null);) {
      if ($.eqB(edge.get$other(), bodyA))
        edge.get$contact().flagForFiltering$0();
      edge = edge.get$next();
    }
  }
  return j;
},
 createJoint$1$bailout: function(state0, bodyA, j, bodyB, t1) {
  if ($.eqB(t1, false)) {
    var edge = bodyB.get$contactList();
    for (; !(edge == null);) {
      if ($.eqB(edge.get$other(), bodyA))
        edge.get$contact().flagForFiltering$0();
      edge = edge.get$next();
    }
  }
  return j;
},
 destroyJoint$1: function(joint) {
  if (this.get$locked() === true)
    return;
  var collideConnected = joint.get$collideConnected();
  if (typeof collideConnected !== 'boolean')
    return this.destroyJoint$1$bailout(1, joint, collideConnected);
  var t1 = joint.get$_prev();
  if (!(t1 == null))
    t1.set$_lib2_next(joint.get$_lib2_next());
  t1 = joint.get$_lib2_next();
  if (!(t1 == null))
    t1.set$_prev(joint.get$_prev());
  if ($.eqB(joint, this._jointList))
    this._jointList = joint.get$_lib2_next();
  var bodyA = joint.get$bodyA();
  var bodyB = joint.get$bodyB();
  bodyA.set$awake(true);
  bodyB.set$awake(true);
  t1 = joint.get$edgeA();
  var t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeA();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeA(), bodyA.get$jointList()))
    bodyA.set$jointList(joint.get$edgeA().get$next());
  joint.get$edgeA().set$prev(null);
  joint.get$edgeA().set$next(null);
  t1 = joint.get$edgeB();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeB();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeB(), bodyB.get$jointList()))
    bodyB.set$jointList(joint.get$edgeB().get$next());
  joint.get$edgeB().set$prev(null);
  joint.get$edgeB().set$next(null);
  joint.destructor$0();
  this._jointCount = this._jointCount - 1;
  if (!collideConnected) {
    var edge = bodyB.get$contactList();
    for (; !(edge == null);) {
      if ($.eqB(edge.get$other(), bodyA))
        edge.get$contact().flagForFiltering$0();
      edge = edge.get$next();
    }
  }
},
 destroyJoint$1$bailout: function(state0, joint, collideConnected) {
  var t1 = joint.get$_prev();
  if (!(t1 == null))
    t1.set$_lib2_next(joint.get$_lib2_next());
  t1 = joint.get$_lib2_next();
  if (!(t1 == null))
    t1.set$_prev(joint.get$_prev());
  if ($.eqB(joint, this._jointList))
    this._jointList = joint.get$_lib2_next();
  var bodyA = joint.get$bodyA();
  var bodyB = joint.get$bodyB();
  bodyA.set$awake(true);
  bodyB.set$awake(true);
  t1 = joint.get$edgeA();
  var t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeA();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeA(), bodyA.get$jointList()))
    bodyA.set$jointList(joint.get$edgeA().get$next());
  joint.get$edgeA().set$prev(null);
  joint.get$edgeA().set$next(null);
  t1 = joint.get$edgeB();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = joint.get$edgeB();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(joint.get$edgeB(), bodyB.get$jointList()))
    bodyB.set$jointList(joint.get$edgeB().get$next());
  joint.get$edgeB().set$prev(null);
  joint.get$edgeB().set$next(null);
  joint.destructor$0();
  this._jointCount = this._jointCount - 1;
  if ($.eqB(collideConnected, false)) {
    var edge = bodyB.get$contactList();
    for (; !(edge == null);) {
      if ($.eqB(edge.get$other(), bodyA))
        edge.get$contact().flagForFiltering$0();
      edge = edge.get$next();
    }
  }
},
 destroyBody$1: function(body) {
  if (this.get$locked() === true)
    return;
  var je = body.get$jointList();
  for (var t1 = !(this._jointDestructionListener == null); !(je == null);) {
    var je0 = je.get$next();
    if (t1)
      this._jointDestructionListener$1(je.get$joint());
    this.destroyJoint$1(je.get$joint());
    je = je0;
  }
  body.set$jointList(null);
  var ce = body.get$contactList();
  for (; !(ce == null);) {
    var ce0 = ce.get$next();
    this._contactManager.destroy$1(ce.get$contact());
    ce = ce0;
  }
  body.set$contactList(null);
  var f = body.get$fixtureList();
  for (t1 = !(this._fixtureDestructionListener == null); !(f == null);) {
    var f0 = f.get$next();
    if (t1)
      this._fixtureDestructionListener$1(f);
    f.destroyProxy$1(this._contactManager.get$broadPhase());
    f.destroy$0();
    f = f0;
  }
  body.set$fixtureList(null);
  body.set$fixtureCount(0);
  t1 = body.get$prev();
  if (!(t1 == null))
    t1.set$next(body.get$next());
  t1 = body.get$next();
  if (!(t1 == null))
    t1.set$prev(body.get$prev());
  if ($.eqB(body, this._bodyList))
    this._bodyList = body.get$next();
  this._bodyCount = this._bodyCount - 1;
},
 step$3: function(dt, velocityIterations, positionIterations) {
  if ((this._flags & 1) === 1) {
    this._contactManager.findNewContacts$0();
    this._flags = (this._flags & 4294967294) >>> 0;
  }
  this._flags = (this._flags | 2) >>> 0;
  var t1 = this.timestep;
  t1.dt = dt;
  t1.velocityIterations = velocityIterations;
  t1.positionIterations = positionIterations;
  if (dt > 0)
    t1.inv_dt = 1 / dt;
  else
    t1.inv_dt = 0;
  t1.dtRatio = this._inverseTimestep * dt;
  t1.warmStarting = this._warmStarting;
  this._contactManager.collide$0();
  if (t1.dt > 0)
    this.solve$1(t1);
  if (this._continuousPhysics && t1.dt > 0)
    this.solveTimeOfImpact$0();
  if (t1.dt > 0)
    this._inverseTimestep = t1.inv_dt;
  if ((this._flags & 4) === 4)
    this.clearForces$0();
  this._flags = (this._flags & 4294967293) >>> 0;
},
 clearForces$0: function() {
  for (var body = this._bodyList; !(body == null); body = body.get$next()) {
    body.get$_force().setZero$0();
    body.set$_torque(0);
  }
},
 drawDebugData$0: function() {
  var t1 = this._debugDraw;
  if (t1 == null)
    return;
  var drawFlags = t1.get$flags();
  if (drawFlags !== (drawFlags | 0))
    return this.drawDebugData$0$bailout(1, drawFlags);
  if ((drawFlags & 1) === 1) {
    var xf = $.Transform$();
    var color = $.Color3$();
    for (var b = this._bodyList; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      for (var f = b.get$fixtureList(); !(f == null); f = f.get$next())
        if ($.eqB(b.get$active(), false)) {
          color.setFromRGBF$3(0.5, 0.5, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 0)) {
          color.setFromRGBF$3(0.5, 0.9, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 1)) {
          color.setFromRGBF$3(0.5, 0.5, 0.9);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$awake(), false)) {
          color.setFromRGBF$3(0.9, 0.9, 0.9);
          this.drawShape$3(f, xf, color);
        } else {
          color.setFromRGBF$3(0.9, 0.7, 0.7);
          this.drawShape$3(f, xf, color);
        }
    }
  }
  if ((drawFlags & 2) === 2)
    for (var j = this._jointList; !(j == null); j = j.get$_lib2_next())
      this.drawJoint$1(j);
  if ((drawFlags & 8) === 8) {
    color = $.Color3$fromRGBF(0.3, 0.9, 0.9);
    for (var c = this._contactManager.get$contactList(), t1 = this.cA, t2 = this.cB; !(c == null); c = c.get$next()) {
      var fixtureA = c.get$fixtureA();
      var fixtureB = c.get$fixtureB();
      t1.setFrom$1(fixtureA.get$box().get$center());
      t2.setFrom$1(fixtureB.get$box().get$center());
      this._debugDraw.drawSegment$3(t1, t2, color);
    }
  }
  if ((drawFlags & 4) === 4) {
    color = $.Color3$fromRGBF(0.9, 0.3, 0.9);
    for (b = this._bodyList, t1 = 0 !== (drawFlags & 64); !(b == null); b = b.get$next()) {
      if (b.get$active() !== true)
        continue;
      for (f = b.get$fixtureList(); !(f == null); f = f.get$next()) {
        var aabb = f.get$proxy().get$box();
        var vs = $.ListImplementation_List(4);
        for (var i = 0; i < 4; ++i)
          vs[i] = $.Vector$(0, 0);
        vs[0].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$lowerBound().get$y());
        vs[1].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$lowerBound().get$y());
        vs[2].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$upperBound().get$y());
        vs[3].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$upperBound().get$y());
        t2 = this._debugDraw;
        if (t1)
          t2.drawPolygon$3(vs, 4, color);
        else
          t2.drawSolidPolygon$3(vs, 4, color);
      }
    }
  }
  if ((drawFlags & 16) === 16) {
    xf = $.Transform$();
    color = $.Color3$fromRGB(1, 0, 0);
    for (b = this._bodyList, t1 = xf.position; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      t1.setFrom$1(b.get$worldCenter());
      this._debugDraw.drawTransform$2(xf, color);
    }
  }
},
 drawDebugData$0$bailout: function(state0, drawFlags) {
  if ($.eqB($.and(drawFlags, 1), 1)) {
    var xf = $.Transform$();
    var color = $.Color3$();
    for (var b = this._bodyList; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      for (var f = b.get$fixtureList(); !(f == null); f = f.get$next())
        if ($.eqB(b.get$active(), false)) {
          color.setFromRGBF$3(0.5, 0.5, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 0)) {
          color.setFromRGBF$3(0.5, 0.9, 0.3);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$type(), 1)) {
          color.setFromRGBF$3(0.5, 0.5, 0.9);
          this.drawShape$3(f, xf, color);
        } else if ($.eqB(b.get$awake(), false)) {
          color.setFromRGBF$3(0.9, 0.9, 0.9);
          this.drawShape$3(f, xf, color);
        } else {
          color.setFromRGBF$3(0.9, 0.7, 0.7);
          this.drawShape$3(f, xf, color);
        }
    }
  }
  if ($.eqB($.and(drawFlags, 2), 2))
    for (var j = this._jointList; !(j == null); j = j.get$_lib2_next())
      this.drawJoint$1(j);
  if ($.eqB($.and(drawFlags, 8), 8)) {
    color = $.Color3$fromRGBF(0.3, 0.9, 0.9);
    for (var c = this._contactManager.get$contactList(), t1 = this.cA, t2 = this.cB; !(c == null); c = c.get$next()) {
      var fixtureA = c.get$fixtureA();
      var fixtureB = c.get$fixtureB();
      t1.setFrom$1(fixtureA.get$box().get$center());
      t2.setFrom$1(fixtureB.get$box().get$center());
      this._debugDraw.drawSegment$3(t1, t2, color);
    }
  }
  if ($.eqB($.and(drawFlags, 4), 4)) {
    color = $.Color3$fromRGBF(0.9, 0.3, 0.9);
    for (b = this._bodyList; !(b == null); b = b.get$next()) {
      if (b.get$active() !== true)
        continue;
      for (f = b.get$fixtureList(); !(f == null); f = f.get$next()) {
        var aabb = f.get$proxy().get$box();
        var vs = $.ListImplementation_List(4);
        for (var i = 0; i < 4; ++i)
          vs[i] = $.Vector$(0, 0);
        vs[0].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$lowerBound().get$y());
        vs[1].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$lowerBound().get$y());
        vs[2].setCoords$2(aabb.get$upperBound().get$x(), aabb.get$upperBound().get$y());
        vs[3].setCoords$2(aabb.get$lowerBound().get$x(), aabb.get$upperBound().get$y());
        t1 = !(0 === $.and(drawFlags, 64));
        t2 = this._debugDraw;
        if (t1)
          t2.drawPolygon$3(vs, 4, color);
        else
          t2.drawSolidPolygon$3(vs, 4, color);
      }
    }
  }
  if ($.eqB($.and(drawFlags, 16), 16)) {
    xf = $.Transform$();
    color = $.Color3$fromRGB(1, 0, 0);
    for (b = this._bodyList, t1 = xf.position; !(b == null); b = b.get$next()) {
      xf.setFrom$1(b.get$originTransform());
      t1.setFrom$1(b.get$worldCenter());
      this._debugDraw.drawTransform$2(xf, color);
    }
  }
},
 get$contactList: function() {
  return this._contactManager.get$contactList();
},
 get$contactCount: function() {
  return this._contactManager.get$contactCount();
},
 get$locked: function() {
  return (this._flags & 2) === 2;
},
 get$jointList: function() {
  return this._jointList;
},
 solve$1: function(timeStep) {
  var t1 = this.island;
  t1.init$4(this._bodyCount, this._contactManager.get$contactCount(), this._jointCount, this._contactManager.get$contactListener());
  for (var b = this._bodyList; !(b == null); b = b.get$next())
    b.set$flags($.and(b.get$flags(), 4294967294));
  for (var c = this._contactManager.get$contactList(); !(c == null); c = c.get$next())
    c.set$flags($.and(c.get$flags(), 4294967294));
  for (var j = this.get$jointList(); !(j == null); j = j.get$_lib2_next())
    j.set$islandFlag(false);
  var stackSize = this._bodyCount;
  if (this.stack.length < stackSize)
    this.stack = $.ListImplementation_List(stackSize);
  for (var seed = this._bodyList, t2 = this._gravity, t3 = this._allowSleep; !(seed == null); seed = seed.get$next()) {
    if ($.eqB($.and(seed.get$flags(), 1), 1))
      continue;
    if ($.eqB(seed.get$awake(), false) || $.eqB(seed.get$active(), false))
      continue;
    if ($.eqB(seed.get$type(), 0))
      continue;
    t1.clear$0();
    var t4 = this.stack;
    if (0 >= t4.length)
      throw $.ioore(0);
    t4[0] = seed;
    seed.set$flags($.or(seed.get$flags(), 1));
    for (var stackCount = 1; stackCount > 0;) {
      t4 = this.stack;
      --stackCount;
      if (stackCount >= t4.length)
        throw $.ioore(stackCount);
      b = t4[stackCount];
      t1.addBody$1(b);
      b.set$awake(true);
      if ($.eqB(b.get$type(), 0))
        continue;
      for (var ce = b.get$contactList(); !(ce == null); ce = ce.get$next()) {
        var contact = ce.get$contact();
        if ($.eqB($.and(contact.get$flags(), 1), 1))
          continue;
        if ($.eqB(contact.get$enabled(), false) || $.eqB(contact.get$touching(), false))
          continue;
        var sensorA = contact.get$fixtureA().get$isSensor();
        var sensorB = contact.get$fixtureB().get$isSensor();
        if (sensorA === true || sensorB === true)
          continue;
        t1.addContact$1(contact);
        contact.set$flags($.or(contact.get$flags(), 1));
        var other = ce.get$other();
        if ($.eqB($.and(other.get$flags(), 1), 1))
          continue;
        t4 = this.stack;
        var stackCount0 = stackCount + 1;
        if (stackCount >= t4.length)
          throw $.ioore(stackCount);
        t4[stackCount] = other;
        other.set$flags($.or(other.get$flags(), 1));
        stackCount = stackCount0;
      }
      for (var je = b.get$jointList(); !(je == null); je = je.get$next()) {
        if ($.eqB(je.get$joint().get$islandFlag(), true))
          continue;
        other = je.get$other();
        if ($.eqB(other.get$active(), false))
          continue;
        t1.addJoint$1(je.get$joint());
        je.get$joint().set$islandFlag(true);
        if ($.eqB($.and(other.get$flags(), 1), 1))
          continue;
        t4 = this.stack;
        stackCount0 = stackCount + 1;
        if (stackCount >= t4.length)
          throw $.ioore(stackCount);
        t4[stackCount] = other;
        other.set$flags($.or(other.get$flags(), 1));
        stackCount = stackCount0;
      }
    }
    t1.solve$3(timeStep, t2, t3);
    for (var i = 0; $.ltB(i, t1.bodyCount); ++i) {
      b = $.index(t1.bodies, i);
      if ($.eqB(b.get$type(), 0))
        b.set$flags($.and(b.get$flags(), 4294967294));
    }
  }
  for (b = this._bodyList; !(b == null); b = b.get$next()) {
    if ($.eqB($.and(b.get$flags(), 1), 0))
      continue;
    if ($.eqB(b.get$type(), 0))
      continue;
    b.synchronizeFixtures$0();
  }
  this._contactManager.findNewContacts$0();
},
 solveTimeOfImpact$0: function() {
  for (var c = this._contactManager.get$contactList(); !(c == null); c = c.get$next()) {
    c.set$flags($.or(c.get$flags(), 4));
    c.set$toiCount(0);
  }
  for (var body = this._bodyList; !(body == null); body = body.get$next()) {
    var t1 = $.eqB($.and(body.get$flags(), 1), 0) || $.eqB(body.get$type(), 1) || $.eqB(body.get$type(), 0);
    var t2 = body.get$flags();
    if (t1)
      body.set$flags($.or(t2, 64));
    else
      body.set$flags($.and(t2, 4294967231));
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    if ($.eqB($.and(body.get$flags(), 64), 64))
      continue;
    if ($.eqB(body.get$bullet(), true))
      continue;
    this.solveTimeOfImpactGivenBody$1(body);
    body.set$flags($.or(body.get$flags(), 64));
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    if ($.eqB($.and(body.get$flags(), 64), 64))
      continue;
    if ($.eqB(body.get$bullet(), false))
      continue;
    this.solveTimeOfImpactGivenBody$1(body);
    body.set$flags($.or(body.get$flags(), 64));
  }
},
 solveTimeOfImpactGivenBody$1: function(body) {
  var bullet = body.get$bullet();
  if (typeof bullet !== 'boolean')
    return this.solveTimeOfImpactGivenBody$1$bailout(1, body, bullet, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var t2 = this.toiInput;
  var t3 = t2.proxyA;
  var t4 = t2.proxyB;
  var t5 = t2.sweepA;
  var t6 = t2.sweepB;
  var t7 = this._pool;
  var t8 = this.toiOutput;
  var iter = 0;
  var toiContact = null;
  var toi = 1;
  var toiOther = null;
  var count = null;
  var found = null;
  do {
    for (var ce = body.get$contactList(), count = 0, found = false; !(ce == null); ce = ce.get$next()) {
      if ($.eqB(ce.get$contact(), toiContact))
        continue;
      var other = ce.get$other();
      var type = other.get$type();
      if (typeof type !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(2, found, body, ce, bullet, iter, t2, other, t3, t4, t5, t6, type, toiContact, t7, toiOther, t8, toi, count, 0);
      if (bullet) {
        var t1 = other.get$flags();
        if (t1 !== (t1 | 0))
          return this.solveTimeOfImpactGivenBody$1$bailout(3, found, body, count, t8, bullet, iter, t2, other, t3, t4, t5, t6, type, t1, t7, toi, toiContact, ce, toiOther);
        if ((t1 & 64) === 0)
          continue;
        if (!(type === 0)) {
          t1 = ce.get$contact().get$flags();
          if (t1 !== (t1 | 0))
            return this.solveTimeOfImpactGivenBody$1$bailout(4, found, body, ce, bullet, iter, t1, t2, other, t3, t4, t5, t6, toiContact, t7, toi, toiOther, t8, count, 0);
          var t10 = (t1 & 16) !== 0;
          t1 = t10;
        } else
          t1 = false;
        if (t1)
          continue;
      } else if (type === 2)
        continue;
      var contact = ce.get$contact();
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(5, found, t7, body, bullet, contact, iter, t1, t2, other, t3, t4, t5, t6, toiContact, toi, toiOther, t8, ce, count);
      if (!t1)
        continue;
      t1 = contact.get$toiCount();
      if (typeof t1 !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(6, found, t7, body, bullet, contact, iter, t2, other, t3, t4, t1, t5, t6, toiContact, toi, toiOther, t8, ce, count);
      if (t1 > 10)
        continue;
      var fixtureA = contact.get$fixtureA();
      var fixtureB = contact.get$fixtureB();
      if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
        continue;
      var bodyA = fixtureA.get$body();
      var bodyB = fixtureB.get$body();
      t3.setFromShape$1(fixtureA.get$shape());
      t4.setFromShape$1(fixtureB.get$shape());
      t5.setFrom$1(bodyA.get$sweep());
      t6.setFrom$1(bodyB.get$sweep());
      t2.tMax = toi;
      t7.timeOfImpact.timeOfImpact$2(t8, t2);
      if (t8.state === 3 && t8.t < toi) {
        toi = t8.t;
        toiContact = contact;
        toiOther = other;
        found = true;
      }
      ++count;
    }
    ++iter;
  } while (found === true && $.gtB(count, 1) && iter < 50);
  if (toiContact == null) {
    body.advance$1(1);
    return;
  }
  t1 = this.backup;
  t1.setFrom$1(body.get$sweep());
  body.advance$1(toi);
  toiContact.update$1(this._contactManager.get$contactListener());
  t2 = toiContact.get$enabled();
  if (typeof t2 !== 'boolean')
    return this.solveTimeOfImpactGivenBody$1$bailout(7, body, t2, toiContact, t1, toiOther, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  if (!t2) {
    body.get$sweep().setFrom$1(t1);
    this.solveTimeOfImpactGivenBody$1(body);
  }
  t1 = toiContact.get$toiCount();
  if (typeof t1 !== 'number')
    return this.solveTimeOfImpactGivenBody$1$bailout(8, body, toiContact, t1, toiOther, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  toiContact.set$toiCount(t1 + 1);
  t1 = this.contacts;
  if (t1.length < 32)
    this.contacts = $.ListImplementation_List(32);
  ce = body.get$contactList();
  count = 0;
  while (true) {
    if (!(!(ce == null) && count < 32))
      break;
    c$0: {
      type = ce.get$other().get$type();
      if (typeof type !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(9, body, type, ce, count, toiContact, toiOther, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      if (type === 2)
        break c$0;
      contact = ce.get$contact();
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(10, body, ce, contact, count, toiContact, t1, toiOther, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      if (!t1)
        break c$0;
      fixtureA = contact.get$fixtureA();
      fixtureB = contact.get$fixtureB();
      if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
        break c$0;
      if (!$.eqB(contact, toiContact))
        contact.update$1(this._contactManager.get$contactListener());
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(11, body, t1, ce, contact, count, toiContact, toiOther, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      if (!t1)
        break c$0;
      t1 = contact.get$touching();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(12, body, ce, contact, count, toiContact, t1, toiOther, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      if (!t1)
        break c$0;
      t1 = this.contacts;
      if (count >= t1.length)
        throw $.ioore(count);
      t1[count] = contact;
      ++count;
    }
    ce = ce.get$next();
  }
  t1 = this.toiSolver;
  t1.initialize$3(this.contacts, count, body);
  for (var i = 0; i < 20; ++i)
    if (t1.solve$1(0.75) === true)
      break;
  t1 = toiOther.get$type();
  if (typeof t1 !== 'number')
    return this.solveTimeOfImpactGivenBody$1$bailout(13, t1, toiContact, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  if (!(t1 === 0)) {
    t1 = toiContact.get$flags();
    if (t1 !== (t1 | 0))
      return this.solveTimeOfImpactGivenBody$1$bailout(14, toiContact, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    toiContact.set$flags((t1 | 16) >>> 0);
  }
},
 solveTimeOfImpactGivenBody$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18) {
  switch (state0) {
    case 1:
      var body = env0;
      bullet = env1;
      break;
    case 2:
      found = env0;
      body = env1;
      ce = env2;
      bullet = env3;
      iter = env4;
      t2 = env5;
      other = env6;
      t3 = env7;
      t4 = env8;
      t5 = env9;
      t6 = env10;
      type = env11;
      toiContact = env12;
      t7 = env13;
      toiOther = env14;
      t8 = env15;
      toi = env16;
      count = env17;
      break;
    case 3:
      found = env0;
      body = env1;
      count = env2;
      t8 = env3;
      bullet = env4;
      iter = env5;
      t2 = env6;
      other = env7;
      t3 = env8;
      t4 = env9;
      t5 = env10;
      t6 = env11;
      type = env12;
      t1 = env13;
      t7 = env14;
      toi = env15;
      toiContact = env16;
      ce = env17;
      toiOther = env18;
      break;
    case 4:
      found = env0;
      body = env1;
      ce = env2;
      bullet = env3;
      iter = env4;
      t1 = env5;
      t2 = env6;
      other = env7;
      t3 = env8;
      t4 = env9;
      t5 = env10;
      t6 = env11;
      toiContact = env12;
      t7 = env13;
      toi = env14;
      toiOther = env15;
      t8 = env16;
      count = env17;
      break;
    case 5:
      found = env0;
      t7 = env1;
      body = env2;
      bullet = env3;
      contact = env4;
      iter = env5;
      t1 = env6;
      t2 = env7;
      other = env8;
      t3 = env9;
      t4 = env10;
      t5 = env11;
      t6 = env12;
      toiContact = env13;
      toi = env14;
      toiOther = env15;
      t8 = env16;
      ce = env17;
      count = env18;
      break;
    case 6:
      found = env0;
      t7 = env1;
      body = env2;
      bullet = env3;
      contact = env4;
      iter = env5;
      t2 = env6;
      other = env7;
      t3 = env8;
      t4 = env9;
      t1 = env10;
      t5 = env11;
      t6 = env12;
      toiContact = env13;
      toi = env14;
      toiOther = env15;
      t8 = env16;
      ce = env17;
      count = env18;
      break;
    case 7:
      body = env0;
      t2 = env1;
      toiContact = env2;
      t1 = env3;
      toiOther = env4;
      break;
    case 8:
      body = env0;
      toiContact = env1;
      t1 = env2;
      toiOther = env3;
      break;
    case 9:
      body = env0;
      type = env1;
      ce = env2;
      count = env3;
      toiContact = env4;
      toiOther = env5;
      break;
    case 10:
      body = env0;
      ce = env1;
      contact = env2;
      count = env3;
      toiContact = env4;
      t1 = env5;
      toiOther = env6;
      break;
    case 11:
      body = env0;
      t1 = env1;
      ce = env2;
      contact = env3;
      count = env4;
      toiContact = env5;
      toiOther = env6;
      break;
    case 12:
      body = env0;
      ce = env1;
      contact = env2;
      count = env3;
      toiContact = env4;
      t1 = env5;
      toiOther = env6;
      break;
    case 13:
      t1 = env0;
      toiContact = env1;
      break;
    case 14:
      toiContact = env0;
      t1 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var bullet = body.get$bullet();
    case 1:
      state0 = 0;
      var t2 = this.toiInput;
      var t3 = t2.proxyA;
      var t4 = t2.proxyB;
      var t5 = t2.sweepA;
      var t6 = t2.sweepB;
      var t7 = this._pool;
      var t8 = this.toiOutput;
      var iter = 0;
      var toiContact = null;
      var toi = 1;
      var toiOther = null;
      var count = null;
      var found = null;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var ce = body.get$contactList();
              count = 0;
              found = false;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!!(ce == null))
                        break L1;
                    default:
                      c$1: {
                        switch (state0) {
                          case 0:
                            if ($.eqB(ce.get$contact(), toiContact))
                              break c$1;
                            var other = ce.get$other();
                            var type = other.get$type();
                          case 2:
                            state0 = 0;
                          default:
                            if (state0 === 4 || state0 === 3 || state0 === 0 && $.eqB(bullet, true))
                              switch (state0) {
                                case 0:
                                  var t1 = other.get$flags();
                                case 3:
                                  state0 = 0;
                                  if ($.eqB($.and(t1, 64), 0))
                                    break c$1;
                                case 4:
                                  if (state0 === 4 || state0 === 0 && !$.eqB(type, 0))
                                    switch (state0) {
                                      case 0:
                                        t1 = ce.get$contact().get$flags();
                                      case 4:
                                        state0 = 0;
                                        var t10 = !$.eqB($.and(t1, 16), 0);
                                        t1 = t10;
                                    }
                                  else
                                    t1 = false;
                                  if (t1)
                                    break c$1;
                              }
                            else if ($.eqB(type, 2))
                              break c$1;
                            var contact = ce.get$contact();
                            t1 = contact.get$enabled();
                          case 5:
                            state0 = 0;
                            if ($.eqB(t1, false))
                              break c$1;
                            t1 = contact.get$toiCount();
                          case 6:
                            state0 = 0;
                            if ($.gtB(t1, 10))
                              break c$1;
                            var fixtureA = contact.get$fixtureA();
                            var fixtureB = contact.get$fixtureB();
                            if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
                              break c$1;
                            var bodyA = fixtureA.get$body();
                            var bodyB = fixtureB.get$body();
                            t3.setFromShape$1(fixtureA.get$shape());
                            t4.setFromShape$1(fixtureB.get$shape());
                            t5.setFrom$1(bodyA.get$sweep());
                            t6.setFrom$1(bodyB.get$sweep());
                            t2.tMax = toi;
                            t7.timeOfImpact.timeOfImpact$2(t8, t2);
                            if (t8.state === 3 && t8.t < toi) {
                              toi = t8.t;
                              toiContact = contact;
                              toiOther = other;
                              found = true;
                            }
                            ++count;
                        }
                      }
                      ce = ce.get$next();
                  }
              ++iter;
              if (!(found === true && $.gtB(count, 1) && iter < 50))
                break L0;
          }
      if (toiContact == null) {
        body.advance$1(1);
        return;
      }
      t1 = this.backup;
      t1.setFrom$1(body.get$sweep());
      body.advance$1(toi);
      toiContact.update$1(this._contactManager.get$contactListener());
      t2 = toiContact.get$enabled();
    case 7:
      state0 = 0;
      if ($.eqB(t2, false)) {
        body.get$sweep().setFrom$1(t1);
        this.solveTimeOfImpactGivenBody$1(body);
      }
      t1 = toiContact.get$toiCount();
    case 8:
      state0 = 0;
      toiContact.set$toiCount($.add(t1, 1));
      t1 = this.contacts;
      if (t1.length < 32)
        this.contacts = $.ListImplementation_List(32);
      ce = body.get$contactList();
      count = 0;
    case 9:
    case 10:
    case 11:
    case 12:
      L2:
        while (true)
          switch (state0) {
            case 0:
              if (!(!(ce == null) && count < 32))
                break L2;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    type = ce.get$other().get$type();
                  case 9:
                    state0 = 0;
                    if ($.eqB(type, 2))
                      break c$0;
                    contact = ce.get$contact();
                    t1 = contact.get$enabled();
                  case 10:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    fixtureA = contact.get$fixtureA();
                    fixtureB = contact.get$fixtureB();
                    if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
                      break c$0;
                    if (!$.eqB(contact, toiContact))
                      contact.update$1(this._contactManager.get$contactListener());
                    t1 = contact.get$enabled();
                  case 11:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    t1 = contact.get$touching();
                  case 12:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    t1 = this.contacts;
                    if (count >= t1.length)
                      throw $.ioore(count);
                    t1[count] = contact;
                    ++count;
                }
              }
              ce = ce.get$next();
          }
      t1 = this.toiSolver;
      t1.initialize$3(this.contacts, count, body);
      for (var i = 0; i < 20; ++i)
        if (t1.solve$1(0.75) === true)
          break;
      t1 = toiOther.get$type();
    case 13:
      state0 = 0;
    case 14:
      if (state0 === 14 || state0 === 0 && !$.eqB(t1, 0))
        switch (state0) {
          case 0:
            t1 = toiContact.get$flags();
          case 14:
            state0 = 0;
            toiContact.set$flags($.or(t1, 16));
        }
  }
},
 drawShape$3: function(fixture, xf, color) {
  switch (fixture.get$type()) {
    case 0:
      var circle = fixture.get$shape();
      var t1 = circle.get$position();
      var t2 = this.center;
      $.Transform_mulToOut(xf, t1, t2);
      var radius = circle.get$radius();
      t1 = this.axis;
      t1.setFrom$1(xf.rotation.col1);
      var t3 = !(0 === $.and(this._debugDraw.get$flags(), 64));
      var t4 = this._debugDraw;
      if (t3)
        t4.drawCircle$4(t2, radius, color, t1);
      else
        t4.drawSolidCircle$4(t2, radius, color, t1);
      break;
    case 1:
      var poly = fixture.get$shape();
      var vertexCount = poly.get$vertexCount();
      var vertices = $.ListImplementation_List(vertexCount);
      for (var i = 0; $.ltB(i, vertexCount); ++i) {
        t1 = $.Vector$(0, 0);
        if (i >= vertices.length)
          throw $.ioore(i);
        vertices[i] = t1;
      }
      for (i = 0; $.ltB(i, vertexCount); ++i) {
        t1 = $.index(poly.get$vertices(), i);
        if (i >= vertices.length)
          throw $.ioore(i);
        $.Transform_mulToOut(xf, t1, vertices[i]);
      }
      if (!(0 === $.and(this._debugDraw.get$flags(), 64)))
        this._debugDraw.drawPolygon$3(vertices, vertexCount, color);
      else {
        t1 = $.gtB(vertexCount, 2);
        t2 = this._debugDraw;
        if (t1)
          t2.drawSolidPolygon$3(vertices, vertexCount, color);
        else
          t2.drawPolygon$3(vertices, vertexCount, color);
      }
      break;
  }
},
 drawJoint$1: function(joint) {
  var bodyA = joint.get$bodyA();
  var bodyB = joint.get$bodyB();
  var xf1 = bodyA.get$originTransform();
  var xf2 = bodyB.get$originTransform();
  var x1 = $.Vector$copy(xf1.get$position());
  var x2 = $.Vector$copy(xf2.get$position());
  var p1 = $.Vector$(0, 0);
  var p2 = $.Vector$(0, 0);
  joint.getAnchorA$1(p1);
  joint.getAnchorB$1(p2);
  var color = $.Color3$fromRGBF(0.5, 0.3, 0.3);
  switch (joint.get$type()) {
    case 3:
      this._debugDraw.drawSegment$3(p1, p2, color);
      break;
    case 4:
      throw $.$$throw($.NotImplementedException$(null));
    case 9:
      this._debugDraw.drawSegment$3(x1, x2, color);
      break;
    case 10:
    case 5:
      break;
    default:
      var p1t = $.Vector$copy(p1);
      var p2t = $.Vector$copy(p2);
      this._debugDraw.drawSegment$3(x1, p1, color);
      this._debugDraw.drawSegment$3(p1t, p2, color);
      this._debugDraw.drawSegment$3(x2, p2t, color);
  }
},
 World$3: function(gravity, doSleep, argPool) {
  this._contactManager = $.ContactManager$(this);
  for (var t1 = this._contactStacks, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.ListImplementation_List(2);
  this._initializeRegisters$0();
}
};

$$.WorldQueryWrapper = {"":
 ["broadPhase?", "callback"],
 "super": "Object"
};

$$.Contact = {"":
 ["flags=", "prev=", "next=", "edge1?", "edge2?", "fixtureA?", "fixtureB?", "manifold=", "toiCount="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 init$2: function(fixA, fixB) {
  this.flags = 0;
  this.fixtureA = fixA;
  this.fixtureB = fixB;
  this.manifold.set$pointCount(0);
  this.prev = null;
  this.next = null;
  var t1 = this.edge1;
  t1.contact = null;
  t1.prev = null;
  t1.next = null;
  t1.other = null;
  t1 = this.edge2;
  t1.contact = null;
  t1.prev = null;
  t1.next = null;
  t1.other = null;
  this.toiCount = 0;
},
 get$touching: function() {
  return $.eq($.and(this.flags, 2), 2);
},
 get$enabled: function() {
  return $.eq($.and(this.flags, 4), 4);
},
 flagForFiltering$0: function() {
  var t1 = this.flags;
  if (t1 !== (t1 | 0))
    return this.flagForFiltering$0$bailout(1, t1);
  this.flags = (t1 | 8) >>> 0;
},
 flagForFiltering$0$bailout: function(state0, t1) {
  this.flags = $.or(t1, 8);
},
 update$1: function(listener) {
  var t1 = this._oldManifold;
  t1.setFrom$1(this.manifold);
  var t2 = this.flags;
  if (t2 !== (t2 | 0))
    return this.update$1$bailout(1, listener, t1, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  this.flags = (t2 | 4) >>> 0;
  var t4 = this.flags;
  if (t4 !== (t4 | 0))
    return this.update$1$bailout(2, listener, t1, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var wasTouching = (t4 & 2) === 2;
  var t6 = this.fixtureA;
  var sensorA = t6.get$isSensor();
  var t7 = this.fixtureB;
  var sensorB = t7.get$isSensor();
  var sensor = sensorA === true || sensorB === true;
  var bodyA = t6.get$body();
  var bodyB = t7.get$body();
  var xfA = bodyA.get$originTransform();
  var xfB = bodyB.get$originTransform();
  if (sensor) {
    var shapeA = t6.get$shape();
    var shapeB = t7.get$shape();
    var touching = this.pool.collision.testOverlap$4(shapeA, shapeB, xfA, xfB);
    if (typeof touching !== 'boolean')
      return this.update$1$bailout(3, listener, wasTouching, t1, touching, sensor, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    this.manifold.set$pointCount(0);
  } else {
    this.evaluate$3(this.manifold, xfA, xfB);
    t2 = this.manifold.get$pointCount();
    if (typeof t2 !== 'number')
      return this.update$1$bailout(4, listener, bodyA, wasTouching, bodyB, t2, t1, sensor, 0, 0, 0, 0, 0, 0, 0);
    touching = t2 > 0;
    t2 = t1.points;
    var t3 = t2.length;
    var i = 0;
    while (true) {
      t4 = this.manifold;
      var t5 = t4.get$pointCount();
      if (typeof t5 !== 'number')
        return this.update$1$bailout(5, i, t2, bodyA, listener, bodyB, t5, t1, t3, wasTouching, touching, sensor, 0, 0, 0);
      if (!(i < t5))
        break;
      t4 = t4.get$points();
      if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.update$1$bailout(6, i, t2, t4, t3, bodyA, listener, wasTouching, bodyB, t1, touching, sensor, 0, 0, 0);
      if (i >= t4.length)
        throw $.ioore(i);
      var mp2 = t4[i];
      mp2.set$normalImpulse(0);
      mp2.set$tangentImpulse(0);
      var id2 = mp2.get$id();
      var j = 0;
      while (true) {
        t4 = t1.pointCount;
        if (typeof t4 !== 'number')
          return this.update$1$bailout(7, i, t2, bodyA, bodyB, listener, t1, t3, wasTouching, mp2, id2, touching, j, t4, sensor);
        if (!(j < t4))
          break;
        if (j >= t3)
          throw $.ioore(j);
        var mp1 = t2[j];
        if (mp1.get$id().isEqual$1(id2) === true) {
          mp2.set$normalImpulse(mp1.get$normalImpulse());
          mp2.set$tangentImpulse(mp1.get$tangentImpulse());
          break;
        }
        ++j;
      }
      ++i;
    }
    if (!(touching === wasTouching)) {
      bodyA.set$awake(true);
      bodyB.set$awake(true);
    }
  }
  t2 = this.flags;
  if (t2 !== (t2 | 0))
    return this.update$1$bailout(8, listener, wasTouching, t2, touching, t1, touching, sensor, 0, 0, 0, 0, 0, 0, 0);
  if (touching)
    this.flags = (t2 | 2) >>> 0;
  else
    this.flags = (t2 & 4294967293) >>> 0;
  if (listener == null)
    return;
  if (!wasTouching && touching)
    listener.beginContact$1(this);
  if (wasTouching && !touching)
    listener.endContact$1(this);
  if (!sensor && touching)
    listener.preSolve$2(this, t1);
},
 update$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      var listener = env0;
      t1 = env1;
      t2 = env2;
      break;
    case 2:
      listener = env0;
      t1 = env1;
      t4 = env2;
      break;
    case 3:
      listener = env0;
      wasTouching = env1;
      t1 = env2;
      touching = env3;
      sensor = env4;
      break;
    case 4:
      listener = env0;
      bodyA = env1;
      wasTouching = env2;
      bodyB = env3;
      t2 = env4;
      t1 = env5;
      sensor = env6;
      break;
    case 5:
      i = env0;
      t2 = env1;
      bodyA = env2;
      listener = env3;
      bodyB = env4;
      t4 = env5;
      t1 = env6;
      t3 = env7;
      wasTouching = env8;
      touching = env9;
      sensor = env10;
      break;
    case 6:
      i = env0;
      t2 = env1;
      t4 = env2;
      t3 = env3;
      bodyA = env4;
      listener = env5;
      wasTouching = env6;
      bodyB = env7;
      t1 = env8;
      touching = env9;
      sensor = env10;
      break;
    case 7:
      i = env0;
      t2 = env1;
      bodyA = env2;
      bodyB = env3;
      listener = env4;
      t1 = env5;
      t3 = env6;
      wasTouching = env7;
      mp2 = env8;
      id2 = env9;
      touching = env10;
      j = env11;
      t4 = env12;
      sensor = env13;
      break;
    case 8:
      listener = env0;
      wasTouching = env1;
      t3 = env2;
      touching = env3;
      t1 = env4;
      t2 = env5;
      sensor = env6;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this._oldManifold;
      t1.setFrom$1(this.manifold);
      var t2 = this.flags;
    case 1:
      state0 = 0;
      this.flags = $.or(t2, 4);
      var t4 = this.flags;
    case 2:
      state0 = 0;
      var wasTouching = $.eq($.and(t4, 2), 2);
      var t6 = this.fixtureA;
      var sensorA = t6.get$isSensor();
      var t7 = this.fixtureB;
      var sensorB = t7.get$isSensor();
      var sensor = sensorA === true || sensorB === true;
      var bodyA = t6.get$body();
      var bodyB = t7.get$body();
      var xfA = bodyA.get$originTransform();
      var xfB = bodyB.get$originTransform();
    default:
      if (state0 === 3 || state0 === 0 && sensor)
        switch (state0) {
          case 0:
            var shapeA = t6.get$shape();
            var shapeB = t7.get$shape();
            var touching = this.pool.collision.testOverlap$4(shapeA, shapeB, xfA, xfB);
          case 3:
            state0 = 0;
            this.manifold.set$pointCount(0);
        }
      else
        switch (state0) {
          case 0:
            this.evaluate$3(this.manifold, xfA, xfB);
            t2 = this.manifold.get$pointCount();
          case 4:
            state0 = 0;
            touching = $.gt(t2, 0);
            t2 = t1.points;
            var t3 = t2.length;
            var i = 0;
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t4 = this.manifold.get$pointCount();
                  case 5:
                    state0 = 0;
                    if (!$.ltB(i, t4))
                      break L0;
                    t4 = this.manifold.get$points();
                  case 6:
                    state0 = 0;
                    var mp2 = $.index(t4, i);
                    mp2.set$normalImpulse(0);
                    mp2.set$tangentImpulse(0);
                    var id2 = mp2.get$id();
                    var j = 0;
                  case 7:
                    L1:
                      while (true)
                        switch (state0) {
                          case 0:
                            t4 = t1.pointCount;
                          case 7:
                            state0 = 0;
                            if (!$.ltB(j, t4))
                              break L1;
                            if (j >= t3)
                              throw $.ioore(j);
                            var mp1 = t2[j];
                            if (mp1.get$id().isEqual$1(id2) === true) {
                              mp2.set$normalImpulse(mp1.get$normalImpulse());
                              mp2.set$tangentImpulse(mp1.get$tangentImpulse());
                              break L1;
                            }
                            ++j;
                        }
                    ++i;
                }
            if (!$.eqB(touching, wasTouching)) {
              bodyA.set$awake(true);
              bodyB.set$awake(true);
            }
        }
      t2 = touching === true;
      t3 = this.flags;
    case 8:
      state0 = 0;
      if (t2)
        this.flags = $.or(t3, 2);
      else
        this.flags = $.and(t3, 4294967293);
      if (listener == null)
        return;
      if ($.eqB(wasTouching, false) && $.eqB(touching, true))
        listener.beginContact$1(this);
      if ($.eqB(wasTouching, true) && $.eqB(touching, false))
        listener.endContact$1(this);
      if (!sensor && t2)
        listener.preSolve$2(this, t1);
  }
}
};

$$.ContactConstraint = {"":
 ["points?", "localNormal?", "localPoint?", "normal?", "normalMass?", "K?", "bodyA=", "bodyB=", "type=", "radius=", "friction=", "restitution=", "pointCount=", "manifold="],
 "super": "Object",
 setFrom$1: function(cp) {
  this.pointCount = cp.get$pointCount();
  this.localNormal.setFrom$1(cp.get$localNormal());
  this.localPoint.setFrom$1(cp.get$localPoint());
  this.normal.setFrom$1(cp.get$normal());
  this.normalMass.setFrom$1(cp.get$normalMass());
  this.K.setFrom$1(cp.get$K());
  this.bodyA = cp.get$bodyA();
  this.bodyB = cp.get$bodyB();
  this.type = cp.get$type();
  this.radius = cp.get$radius();
  this.friction = cp.get$friction();
  this.restitution = cp.get$restitution();
  this.manifold = cp.get$manifold();
  var t1 = this.points;
  var t2 = t1.length;
  var i = 0;
  while (true) {
    var t3 = cp.get$pointCount();
    if (typeof t3 !== 'number')
      return this.setFrom$1$bailout(1, cp, t2, i, t3, t1, 0);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    var t4 = cp.get$points();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(2, cp, t2, t3, t4, i, t1);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
    ++i;
  }
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      var cp = env0;
      t2 = env1;
      i = env2;
      t3 = env3;
      t1 = env4;
      break;
    case 2:
      cp = env0;
      t2 = env1;
      t3 = env2;
      t4 = env3;
      i = env4;
      t1 = env5;
      break;
  }
  switch (state0) {
    case 0:
      this.pointCount = cp.get$pointCount();
      this.localNormal.setFrom$1(cp.get$localNormal());
      this.localPoint.setFrom$1(cp.get$localPoint());
      this.normal.setFrom$1(cp.get$normal());
      this.normalMass.setFrom$1(cp.get$normalMass());
      this.K.setFrom$1(cp.get$K());
      this.bodyA = cp.get$bodyA();
      this.bodyB = cp.get$bodyB();
      this.type = cp.get$type();
      this.radius = cp.get$radius();
      this.friction = cp.get$friction();
      this.restitution = cp.get$restitution();
      this.manifold = cp.get$manifold();
      var t1 = this.points;
      var t2 = t1.length;
      var i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t3 = cp.get$pointCount();
            case 1:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              var t4 = cp.get$points();
            case 2:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
  }
},
 toString$0: function() {
  return 'localNormal: "' + $.S(this.localNormal) + '", localPoint: "' + $.S(this.localPoint) + '" ' + 'normal: "' + $.S(this.normal) + '", radius: "' + $.S(this.radius) + '" friction: "' + $.S(this.friction) + '" ' + 'restitution: "' + $.S(this.restitution) + '", pointCount: "' + $.S(this.pointCount) + '"';
},
 ContactConstraint$0: function() {
  for (var t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    var t3 = $.ContactConstraintPoint$();
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.ContactConstraintPoint = {"":
 ["localPoint?", "rA?", "rB?", "normalImpulse=", "tangentImpulse=", "normalMass=", "tangentMass=", "velocityBias="],
 "super": "Object",
 setFrom$1: function(cp) {
  this.localPoint.setFrom$1(cp.get$localPoint());
  this.rA.setFrom$1(cp.get$rA());
  this.rB.setFrom$1(cp.get$rB());
  this.normalImpulse = cp.get$normalImpulse();
  this.tangentImpulse = cp.get$tangentImpulse();
  this.normalMass = cp.get$normalMass();
  this.tangentMass = cp.get$tangentMass();
  this.velocityBias = cp.get$velocityBias();
},
 toString$0: function() {
  return 'normal impulse: ' + $.S(this.normalImpulse) + ', tangentImpulse: ' + $.S(this.tangentImpulse) + ', normalMass: ' + $.S(this.normalMass) + ', tangentMass: ' + $.S(this.tangentMass) + ', velocityBias: ' + $.S(this.velocityBias) + ', localPoint: ' + $.S(this.localPoint) + ', rA: ' + $.S(this.rA) + ', rB: ' + $.S(this.rB);
}
};

$$.ContactEdge = {"":
 ["other=", "contact=", "prev=", "next="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); }
};

$$.CircleContact = {"":
 ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(0, fA.get$type(), null);
  $.Expect_equals(0, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collideCircles$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.ContactRegister = {"":
 ["creator?", "primary?"],
 "super": "Object"
};

$$.ContactSolver = {"":
 ["constraints", "constraintCount", "worldManifold", "tangent", "temp1", "temp2", "P", "dv", "dv1", "dv2", "x?", "d", "P1", "P2", "psolver", "rA?", "rB?"],
 "super": "Object",
 init$3: function(contacts, contactCount, impulseRatio) {
  if (typeof contacts !== 'string' && (typeof contacts !== 'object' || contacts === null || contacts.constructor !== Array && !contacts.is$JavaScriptIndexingBehavior()))
    return this.init$3$bailout(1, contacts, contactCount, impulseRatio, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  this.constraintCount = contactCount;
  if ($.ltB(this.constraints.length, contactCount)) {
    var old = this.constraints;
    this.constraints = $.ListImplementation_List($.max(old.length * 2, this.constraintCount));
    $.setRange$3(this.constraints, 0, old.length, old);
    for (var i = old.length; t1 = this.constraints, i < t1.length; ++i) {
      var t2 = $.ContactConstraint$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  for (var t1 = this.worldManifold, t2 = t1.normal, t3 = t1.points, t4 = t3.length, t5 = this.tangent, t6 = this.temp2, t7 = this.temp1, i = 0; $.ltB(i, this.constraintCount); ++i) {
    if (i >= contacts.length)
      throw $.ioore(i);
    var contact = contacts[i];
    var fixtureA = contact.get$fixtureA();
    var fixtureB = contact.get$fixtureB();
    var shapeA = fixtureA.get$shape();
    var shapeB = fixtureB.get$shape();
    var radiusA = shapeA.get$radius();
    var radiusB = shapeB.get$radius();
    var bodyA = fixtureA.get$body();
    var bodyB = fixtureB.get$body();
    var manifold = contact.get$manifold();
    var friction = $.Settings_mixFriction(fixtureA.get$friction(), fixtureB.get$friction());
    var restitution = $.Settings_mixRestitution(fixtureA.get$restitution(), fixtureB.get$restitution());
    if (typeof restitution !== 'number')
      return this.init$3$bailout(2, bodyB, contacts, t2, t7, impulseRatio, restitution, t4, friction, i, t3, t5, radiusA, radiusB, bodyA, t6, manifold, t1, 0, 0, 0, 0);
    var vA = bodyA.get$linearVelocity();
    var vB = bodyB.get$linearVelocity();
    var wA = bodyA.get$angularVelocity();
    if (typeof wA !== 'number')
      return this.init$3$bailout(3, contacts, manifold, t7, impulseRatio, friction, restitution, vA, vB, wA, t3, i, t2, t5, bodyA, radiusA, radiusB, t6, bodyB, t4, t1, 0);
    var wB = bodyB.get$angularVelocity();
    if (typeof wB !== 'number')
      return this.init$3$bailout(4, contacts, manifold, t7, impulseRatio, friction, restitution, vA, vB, wA, wB, i, t3, t5, t2, bodyA, radiusA, radiusB, t6, bodyB, t4, t1);
    t1.initialize$5(manifold, bodyA.get$originTransform(), radiusA, bodyB.get$originTransform(), radiusB);
    var t11 = this.constraints;
    if (i >= t11.length)
      throw $.ioore(i);
    var cc = t11[i];
    cc.set$bodyA(bodyA);
    cc.set$bodyB(bodyB);
    cc.set$manifold(manifold);
    t11 = t2.x;
    cc.get$normal().set$x(t11);
    t11 = t2.y;
    cc.get$normal().set$y(t11);
    cc.set$pointCount(manifold.get$pointCount());
    cc.set$friction(friction);
    cc.set$restitution(restitution);
    t11 = manifold.get$localNormal().get$x();
    cc.get$localNormal().set$x(t11);
    t11 = manifold.get$localNormal().get$y();
    cc.get$localNormal().set$y(t11);
    t11 = manifold.get$localPoint().get$x();
    cc.get$localPoint().set$x(t11);
    t11 = manifold.get$localPoint().get$y();
    cc.get$localPoint().set$y(t11);
    cc.set$radius($.add(radiusA, radiusB));
    cc.set$type(manifold.get$type());
    for (var t8 = -wA, t9 = -wB, t10 = -restitution, j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
      var cp = $.index(manifold.get$points(), j);
      var ccp = $.index(cc.get$points(), j);
      t11 = cp.get$normalImpulse();
      if (typeof t11 !== 'number')
        throw $.iae(t11);
      ccp.set$normalImpulse(impulseRatio * t11);
      var t12 = cp.get$tangentImpulse();
      if (typeof t12 !== 'number')
        throw $.iae(t12);
      ccp.set$tangentImpulse(impulseRatio * t12);
      var t13 = cp.get$localPoint().get$x();
      ccp.get$localPoint().set$x(t13);
      t13 = cp.get$localPoint().get$y();
      ccp.get$localPoint().set$y(t13);
      if (j >= t4)
        throw $.ioore(j);
      t13 = $.sub(t3[j].get$x(), bodyA.get$sweep().get$center().get$x());
      ccp.get$rA().set$x(t13);
      t13 = $.sub(t3[j].get$y(), bodyA.get$sweep().get$center().get$y());
      ccp.get$rA().set$y(t13);
      t13 = $.sub(t3[j].get$x(), bodyB.get$sweep().get$center().get$x());
      ccp.get$rB().set$x(t13);
      t13 = $.sub(t3[j].get$y(), bodyB.get$sweep().get$center().get$y());
      ccp.get$rB().set$y(t13);
      var rnA = $.sub($.mul(ccp.get$rA().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rA().get$y(), cc.get$normal().get$x()));
      var rnB = $.sub($.mul(ccp.get$rB().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rB().get$y(), cc.get$normal().get$x()));
      rnA = $.mul(rnA, rnA);
      rnB = $.mul(rnB, rnB);
      var kNormal = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rnA)), $.mul(bodyB.get$invInertia(), rnB));
      if (typeof kNormal !== 'number')
        throw $.iae(kNormal);
      ccp.set$normalMass(1 / kNormal);
      t13 = cc.get$normal().get$y();
      if (typeof t13 !== 'number')
        throw $.iae(t13);
      t5.x = 1 * t13;
      var t14 = cc.get$normal().get$x();
      if (typeof t14 !== 'number')
        throw $.iae(t14);
      t5.y = -1 * t14;
      var rtA = $.sub($.mul(ccp.get$rA().get$x(), t5.y), $.mul(ccp.get$rA().get$y(), t5.x));
      var rtB = $.sub($.mul(ccp.get$rB().get$x(), t5.y), $.mul(ccp.get$rB().get$y(), t5.x));
      rtA = $.mul(rtA, rtA);
      rtB = $.mul(rtB, rtB);
      var kTangent = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rtA)), $.mul(bodyB.get$invInertia(), rtB));
      if (typeof kTangent !== 'number')
        throw $.iae(kTangent);
      ccp.set$tangentMass(1 / kTangent);
      ccp.set$velocityBias(0);
      var t15 = ccp.get$rA().get$y();
      if (typeof t15 !== 'number')
        throw $.iae(t15);
      t6.x = t8 * t15;
      var t16 = ccp.get$rA().get$x();
      if (typeof t16 !== 'number')
        throw $.iae(t16);
      t6.y = wA * t16;
      var t17 = ccp.get$rB().get$y();
      if (typeof t17 !== 'number')
        throw $.iae(t17);
      t17 = t9 * t17;
      var t18 = vB.get$x();
      if (typeof t18 !== 'number')
        throw $.iae(t18);
      t18 = t17 + t18;
      t17 = vA.get$x();
      if (typeof t17 !== 'number')
        throw $.iae(t17);
      t17 = t18 - t17;
      t18 = t6.x;
      if (typeof t18 !== 'number')
        throw $.iae(t18);
      t7.x = t17 - t18;
      var t19 = ccp.get$rB().get$x();
      if (typeof t19 !== 'number')
        throw $.iae(t19);
      t19 = wB * t19;
      var t20 = vB.get$y();
      if (typeof t20 !== 'number')
        throw $.iae(t20);
      t20 = t19 + t20;
      t19 = vA.get$y();
      if (typeof t19 !== 'number')
        throw $.iae(t19);
      t19 = t20 - t19;
      t20 = t6.y;
      if (typeof t20 !== 'number')
        throw $.iae(t20);
      t7.y = t19 - t20;
      var a = cc.get$normal();
      var vRel = $.add($.mul(a.get$x(), t7.x), $.mul(a.get$y(), t7.y));
      if ($.ltB(vRel, -1)) {
        if (typeof vRel !== 'number')
          throw $.iae(vRel);
        ccp.set$velocityBias(t10 * vRel);
      }
    }
    if ($.eqB(cc.get$pointCount(), 2)) {
      var ccp1 = $.index(cc.get$points(), 0);
      var ccp2 = $.index(cc.get$points(), 1);
      var invMassA = bodyA.get$invMass();
      var invIA = bodyA.get$invInertia();
      var invMassB = bodyB.get$invMass();
      var invIB = bodyB.get$invInertia();
      t8 = ccp1.get$rA();
      t9 = cc.get$normal();
      var rn1A = $.sub($.mul(t8.get$x(), t9.get$y()), $.mul(t8.get$y(), t9.get$x()));
      t10 = ccp1.get$rB();
      t11 = cc.get$normal();
      var rn1B = $.sub($.mul(t10.get$x(), t11.get$y()), $.mul(t10.get$y(), t11.get$x()));
      t12 = ccp2.get$rA();
      t13 = cc.get$normal();
      var rn2A = $.sub($.mul(t12.get$x(), t13.get$y()), $.mul(t12.get$y(), t13.get$x()));
      t14 = ccp2.get$rB();
      t15 = cc.get$normal();
      var rn2B = $.sub($.mul(t14.get$x(), t15.get$y()), $.mul(t14.get$y(), t15.get$x()));
      var k11 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn1A)), $.mul($.mul(invIB, rn1B), rn1B));
      var k22 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn2A), rn2A)), $.mul($.mul(invIB, rn2B), rn2B));
      var k12 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn2A)), $.mul($.mul(invIB, rn1B), rn2B));
      t8 = $.mul(k11, k11);
      t9 = $.sub($.mul(k11, k22), $.mul(k12, k12));
      if (typeof t9 !== 'number')
        throw $.iae(t9);
      if ($.ltB(t8, 100 * t9)) {
        cc.get$K().get$col1().set$x(k11);
        cc.get$K().get$col1().set$y(k12);
        cc.get$K().get$col2().set$x(k12);
        cc.get$K().get$col2().set$y(k22);
        t8 = cc.get$K().get$col1().get$x();
        cc.get$normalMass().get$col1().set$x(t8);
        t8 = cc.get$K().get$col1().get$y();
        cc.get$normalMass().get$col1().set$y(t8);
        t8 = cc.get$K().get$col2().get$x();
        cc.get$normalMass().get$col2().set$x(t8);
        t8 = cc.get$K().get$col2().get$y();
        cc.get$normalMass().get$col2().set$y(t8);
        cc.get$normalMass().invertLocal$0();
      } else
        cc.set$pointCount(1);
    }
  }
},
 init$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20) {
  switch (state0) {
    case 1:
      var contacts = env0;
      var contactCount = env1;
      var impulseRatio = env2;
      break;
    case 2:
      bodyB = env0;
      contacts = env1;
      t2 = env2;
      t7 = env3;
      impulseRatio = env4;
      restitution = env5;
      t4 = env6;
      friction = env7;
      i = env8;
      t3 = env9;
      t5 = env10;
      radiusA = env11;
      radiusB = env12;
      bodyA = env13;
      t6 = env14;
      manifold = env15;
      t1 = env16;
      break;
    case 3:
      contacts = env0;
      manifold = env1;
      t7 = env2;
      impulseRatio = env3;
      friction = env4;
      restitution = env5;
      vA = env6;
      vB = env7;
      wA = env8;
      t3 = env9;
      i = env10;
      t2 = env11;
      t5 = env12;
      bodyA = env13;
      radiusA = env14;
      radiusB = env15;
      t6 = env16;
      bodyB = env17;
      t4 = env18;
      t1 = env19;
      break;
    case 4:
      contacts = env0;
      manifold = env1;
      t7 = env2;
      impulseRatio = env3;
      friction = env4;
      restitution = env5;
      vA = env6;
      vB = env7;
      wA = env8;
      wB = env9;
      i = env10;
      t3 = env11;
      t5 = env12;
      t2 = env13;
      bodyA = env14;
      radiusA = env15;
      radiusB = env16;
      t6 = env17;
      bodyB = env18;
      t4 = env19;
      t1 = env20;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      this.constraintCount = contactCount;
      if ($.ltB(this.constraints.length, contactCount)) {
        var old = this.constraints;
        this.constraints = $.ListImplementation_List($.max(old.length * 2, this.constraintCount));
        $.setRange$3(this.constraints, 0, old.length, old);
        for (var i = old.length; t1 = this.constraints, i < t1.length; ++i) {
          var t2 = $.ContactConstraint$();
          if (i >= t1.length)
            throw $.ioore(i);
          t1[i] = t2;
        }
      }
      var t1 = this.worldManifold;
      t2 = t1.normal;
      var t3 = t1.points;
      var t4 = t3.length;
      var t5 = this.tangent;
      var t6 = this.temp2;
      var t7 = this.temp1;
      i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, this.constraintCount))
                break L0;
              var contact = $.index(contacts, i);
              var fixtureA = contact.get$fixtureA();
              var fixtureB = contact.get$fixtureB();
              var shapeA = fixtureA.get$shape();
              var shapeB = fixtureB.get$shape();
              var radiusA = shapeA.get$radius();
              var radiusB = shapeB.get$radius();
              var bodyA = fixtureA.get$body();
              var bodyB = fixtureB.get$body();
              var manifold = contact.get$manifold();
              var friction = $.Settings_mixFriction(fixtureA.get$friction(), fixtureB.get$friction());
              var restitution = $.Settings_mixRestitution(fixtureA.get$restitution(), fixtureB.get$restitution());
            case 2:
              state0 = 0;
              var vA = bodyA.get$linearVelocity();
              var vB = bodyB.get$linearVelocity();
              var wA = bodyA.get$angularVelocity();
            case 3:
              state0 = 0;
              var wB = bodyB.get$angularVelocity();
            case 4:
              state0 = 0;
              t1.initialize$5(manifold, bodyA.get$originTransform(), radiusA, bodyB.get$originTransform(), radiusB);
              var t11 = this.constraints;
              if (i >= t11.length)
                throw $.ioore(i);
              var cc = t11[i];
              cc.set$bodyA(bodyA);
              cc.set$bodyB(bodyB);
              cc.set$manifold(manifold);
              t11 = t2.x;
              cc.get$normal().set$x(t11);
              t11 = t2.y;
              cc.get$normal().set$y(t11);
              cc.set$pointCount(manifold.get$pointCount());
              cc.set$friction(friction);
              cc.set$restitution(restitution);
              t11 = manifold.get$localNormal().get$x();
              cc.get$localNormal().set$x(t11);
              t11 = manifold.get$localNormal().get$y();
              cc.get$localNormal().set$y(t11);
              t11 = manifold.get$localPoint().get$x();
              cc.get$localPoint().set$x(t11);
              t11 = manifold.get$localPoint().get$y();
              cc.get$localPoint().set$y(t11);
              cc.set$radius($.add(radiusA, radiusB));
              cc.set$type(manifold.get$type());
              for (var j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
                var cp = $.index(manifold.get$points(), j);
                var ccp = $.index(cc.get$points(), j);
                var t8 = cp.get$normalImpulse();
                if (typeof t8 !== 'number')
                  throw $.iae(t8);
                ccp.set$normalImpulse(impulseRatio * t8);
                var t9 = cp.get$tangentImpulse();
                if (typeof t9 !== 'number')
                  throw $.iae(t9);
                ccp.set$tangentImpulse(impulseRatio * t9);
                var t10 = cp.get$localPoint().get$x();
                ccp.get$localPoint().set$x(t10);
                t10 = cp.get$localPoint().get$y();
                ccp.get$localPoint().set$y(t10);
                if (j >= t4)
                  throw $.ioore(j);
                t10 = $.sub(t3[j].get$x(), bodyA.get$sweep().get$center().get$x());
                ccp.get$rA().set$x(t10);
                t10 = $.sub(t3[j].get$y(), bodyA.get$sweep().get$center().get$y());
                ccp.get$rA().set$y(t10);
                t10 = $.sub(t3[j].get$x(), bodyB.get$sweep().get$center().get$x());
                ccp.get$rB().set$x(t10);
                t10 = $.sub(t3[j].get$y(), bodyB.get$sweep().get$center().get$y());
                ccp.get$rB().set$y(t10);
                var rnA = $.sub($.mul(ccp.get$rA().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rA().get$y(), cc.get$normal().get$x()));
                var rnB = $.sub($.mul(ccp.get$rB().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rB().get$y(), cc.get$normal().get$x()));
                rnA = $.mul(rnA, rnA);
                rnB = $.mul(rnB, rnB);
                var kNormal = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rnA)), $.mul(bodyB.get$invInertia(), rnB));
                if (typeof kNormal !== 'number')
                  throw $.iae(kNormal);
                ccp.set$normalMass(1 / kNormal);
                t10 = cc.get$normal().get$y();
                if (typeof t10 !== 'number')
                  throw $.iae(t10);
                t5.x = 1 * t10;
                t11 = cc.get$normal().get$x();
                if (typeof t11 !== 'number')
                  throw $.iae(t11);
                t5.y = -1 * t11;
                var rtA = $.sub($.mul(ccp.get$rA().get$x(), t5.y), $.mul(ccp.get$rA().get$y(), t5.x));
                var rtB = $.sub($.mul(ccp.get$rB().get$x(), t5.y), $.mul(ccp.get$rB().get$y(), t5.x));
                rtA = $.mul(rtA, rtA);
                rtB = $.mul(rtB, rtB);
                var kTangent = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rtA)), $.mul(bodyB.get$invInertia(), rtB));
                if (typeof kTangent !== 'number')
                  throw $.iae(kTangent);
                ccp.set$tangentMass(1 / kTangent);
                ccp.set$velocityBias(0);
                t6.x = $.mul($.neg(wA), ccp.get$rA().get$y());
                t6.y = $.mul(wA, ccp.get$rA().get$x());
                t7.x = $.sub($.sub($.add($.mul($.neg(wB), ccp.get$rB().get$y()), vB.get$x()), vA.get$x()), t6.x);
                t7.y = $.sub($.sub($.add($.mul(wB, ccp.get$rB().get$x()), vB.get$y()), vA.get$y()), t6.y);
                var a = cc.get$normal();
                var vRel = $.add($.mul(a.get$x(), t7.x), $.mul(a.get$y(), t7.y));
                if ($.ltB(vRel, -1))
                  ccp.set$velocityBias($.mul($.neg(restitution), vRel));
              }
              if ($.eqB(cc.get$pointCount(), 2)) {
                var ccp1 = $.index(cc.get$points(), 0);
                var ccp2 = $.index(cc.get$points(), 1);
                var invMassA = bodyA.get$invMass();
                var invIA = bodyA.get$invInertia();
                var invMassB = bodyB.get$invMass();
                var invIB = bodyB.get$invInertia();
                t8 = ccp1.get$rA();
                t9 = cc.get$normal();
                var rn1A = $.sub($.mul(t8.get$x(), t9.get$y()), $.mul(t8.get$y(), t9.get$x()));
                t10 = ccp1.get$rB();
                t11 = cc.get$normal();
                var rn1B = $.sub($.mul(t10.get$x(), t11.get$y()), $.mul(t10.get$y(), t11.get$x()));
                var t12 = ccp2.get$rA();
                var t13 = cc.get$normal();
                var rn2A = $.sub($.mul(t12.get$x(), t13.get$y()), $.mul(t12.get$y(), t13.get$x()));
                var t14 = ccp2.get$rB();
                var t15 = cc.get$normal();
                var rn2B = $.sub($.mul(t14.get$x(), t15.get$y()), $.mul(t14.get$y(), t15.get$x()));
                var k11 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn1A)), $.mul($.mul(invIB, rn1B), rn1B));
                var k22 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn2A), rn2A)), $.mul($.mul(invIB, rn2B), rn2B));
                var k12 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn2A)), $.mul($.mul(invIB, rn1B), rn2B));
                t8 = $.mul(k11, k11);
                t9 = $.sub($.mul(k11, k22), $.mul(k12, k12));
                if (typeof t9 !== 'number')
                  throw $.iae(t9);
                if ($.ltB(t8, 100 * t9)) {
                  cc.get$K().get$col1().set$x(k11);
                  cc.get$K().get$col1().set$y(k12);
                  cc.get$K().get$col2().set$x(k12);
                  cc.get$K().get$col2().set$y(k22);
                  t8 = cc.get$K().get$col1().get$x();
                  cc.get$normalMass().get$col1().set$x(t8);
                  t8 = cc.get$K().get$col1().get$y();
                  cc.get$normalMass().get$col1().set$y(t8);
                  t8 = cc.get$K().get$col2().get$x();
                  cc.get$normalMass().get$col2().set$x(t8);
                  t8 = cc.get$K().get$col2().get$y();
                  cc.get$normalMass().get$col2().set$y(t8);
                  cc.get$normalMass().invertLocal$0();
                } else
                  cc.set$pointCount(1);
              }
              ++i;
          }
  }
},
 warmStart$0: function() {
  for (var t1 = this.tangent, i = 0; $.ltB(i, this.constraintCount); ++i) {
    var t2 = this.constraints;
    if (i >= t2.length)
      throw $.ioore(i);
    var c = t2[i];
    var bodyA = c.get$bodyA();
    var bodyB = c.get$bodyB();
    var invMassA = bodyA.get$invMass();
    if (typeof invMassA !== 'number')
      return this.warmStart$0$bailout(1, c, bodyA, bodyB, invMassA, i, t1, 0, 0, 0);
    var invIA = bodyA.get$invInertia();
    if (typeof invIA !== 'number')
      return this.warmStart$0$bailout(2, c, bodyA, bodyB, invMassA, i, invIA, t1, 0, 0);
    var invMassB = bodyB.get$invMass();
    if (typeof invMassB !== 'number')
      return this.warmStart$0$bailout(3, c, bodyA, bodyB, invMassA, i, invIA, invMassB, t1, 0);
    var invIB = bodyB.get$invInertia();
    if (typeof invIB !== 'number')
      return this.warmStart$0$bailout(4, c, bodyA, bodyB, invMassA, i, invIA, invMassB, invIB, t1);
    var normal = c.get$normal();
    $.Vector_crossVectorAndNumToOut(normal, 1, t1);
    for (var j = 0; $.ltB(j, c.get$pointCount()); ++j) {
      var ccp = $.index(c.get$points(), j);
      var Px = $.add($.mul(ccp.get$normalImpulse(), normal.get$x()), $.mul(ccp.get$tangentImpulse(), t1.x));
      var Py = $.add($.mul(ccp.get$normalImpulse(), normal.get$y()), $.mul(ccp.get$tangentImpulse(), t1.y));
      t2 = bodyA.get$angularVelocity();
      var t3 = $.sub($.mul(ccp.get$rA().get$x(), Py), $.mul(ccp.get$rA().get$y(), Px));
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      bodyA.set$angularVelocity($.sub(t2, invIA * t3));
      var t4 = bodyA.get$linearVelocity();
      t4.set$x($.sub(t4.get$x(), $.mul(Px, invMassA)));
      t4 = bodyA.get$linearVelocity();
      t4.set$y($.sub(t4.get$y(), $.mul(Py, invMassA)));
      t4 = bodyB.get$angularVelocity();
      var t5 = $.sub($.mul(ccp.get$rB().get$x(), Py), $.mul(ccp.get$rB().get$y(), Px));
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      bodyB.set$angularVelocity($.add(t4, invIB * t5));
      var t6 = bodyB.get$linearVelocity();
      t6.set$x($.add(t6.get$x(), $.mul(Px, invMassB)));
      t6 = bodyB.get$linearVelocity();
      t6.set$y($.add(t6.get$y(), $.mul(Py, invMassB)));
    }
  }
},
 warmStart$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      c = env0;
      bodyA = env1;
      bodyB = env2;
      invMassA = env3;
      i = env4;
      t1 = env5;
      break;
    case 2:
      c = env0;
      bodyA = env1;
      bodyB = env2;
      invMassA = env3;
      i = env4;
      invIA = env5;
      t1 = env6;
      break;
    case 3:
      c = env0;
      bodyA = env1;
      bodyB = env2;
      invMassA = env3;
      i = env4;
      invIA = env5;
      invMassB = env6;
      t1 = env7;
      break;
    case 4:
      c = env0;
      bodyA = env1;
      bodyB = env2;
      invMassA = env3;
      i = env4;
      invIA = env5;
      invMassB = env6;
      invIB = env7;
      t1 = env8;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.tangent;
      var i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, this.constraintCount))
                break L0;
              var t2 = this.constraints;
              if (i >= t2.length)
                throw $.ioore(i);
              var c = t2[i];
              var bodyA = c.get$bodyA();
              var bodyB = c.get$bodyB();
              var invMassA = bodyA.get$invMass();
            case 1:
              state0 = 0;
              var invIA = bodyA.get$invInertia();
            case 2:
              state0 = 0;
              var invMassB = bodyB.get$invMass();
            case 3:
              state0 = 0;
              var invIB = bodyB.get$invInertia();
            case 4:
              state0 = 0;
              var normal = c.get$normal();
              $.Vector_crossVectorAndNumToOut(normal, 1, t1);
              for (var j = 0; $.ltB(j, c.get$pointCount()); ++j) {
                var ccp = $.index(c.get$points(), j);
                var Px = $.add($.mul(ccp.get$normalImpulse(), normal.get$x()), $.mul(ccp.get$tangentImpulse(), t1.x));
                var Py = $.add($.mul(ccp.get$normalImpulse(), normal.get$y()), $.mul(ccp.get$tangentImpulse(), t1.y));
                bodyA.set$angularVelocity($.sub(bodyA.get$angularVelocity(), $.mul(invIA, $.sub($.mul(ccp.get$rA().get$x(), Py), $.mul(ccp.get$rA().get$y(), Px)))));
                t2 = bodyA.get$linearVelocity();
                t2.set$x($.sub(t2.get$x(), $.mul(Px, invMassA)));
                t2 = bodyA.get$linearVelocity();
                t2.set$y($.sub(t2.get$y(), $.mul(Py, invMassA)));
                bodyB.set$angularVelocity($.add(bodyB.get$angularVelocity(), $.mul(invIB, $.sub($.mul(ccp.get$rB().get$x(), Py), $.mul(ccp.get$rB().get$y(), Px)))));
                t2 = bodyB.get$linearVelocity();
                t2.set$x($.add(t2.get$x(), $.mul(Px, invMassB)));
                t2 = bodyB.get$linearVelocity();
                t2.set$y($.add(t2.get$y(), $.mul(Py, invMassB)));
              }
              ++i;
          }
  }
},
 solveVelocityConstraints$0: function() {
  var t1 = this.tangent;
  var t2 = this.dv;
  var t3 = this.dv1;
  var t4 = this.dv2;
  var t5 = this.temp2;
  var t6 = this.x;
  var t7 = this.d;
  var t8 = this.P1;
  var t9 = this.P2;
  var t10 = this.temp1;
  var i = 0;
  while (true) {
    var t11 = this.constraintCount;
    if (typeof t11 !== 'number')
      return this.solveVelocityConstraints$0$bailout(1, i, t11, t3, t1, t6, t4, t7, t2, t8, t9, t10, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if (!(i < t11))
      break;
    t11 = this.constraints;
    if (i >= t11.length)
      throw $.ioore(i);
    var c = t11[i];
    var bodyA = c.get$bodyA();
    var bodyB = c.get$bodyB();
    var wA = bodyA.get$angularVelocity();
    if (typeof wA !== 'number')
      return this.solveVelocityConstraints$0$bailout(2, i, t3, t1, t6, t4, c, bodyA, bodyB, wA, t7, t8, t2, t9, t10, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var wB = bodyB.get$angularVelocity();
    if (typeof wB !== 'number')
      return this.solveVelocityConstraints$0$bailout(3, i, t3, t1, t6, t4, c, bodyA, bodyB, wA, wB, t8, t7, t9, t10, t2, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var vA = bodyA.get$linearVelocity();
    var vB = bodyB.get$linearVelocity();
    var invMassA = bodyA.get$invMass();
    if (typeof invMassA !== 'number')
      return this.solveVelocityConstraints$0$bailout(4, t2, i, t3, t6, t1, t4, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, t8, t10, t7, t9, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var invIA = bodyA.get$invInertia();
    if (typeof invIA !== 'number')
      return this.solveVelocityConstraints$0$bailout(5, t2, i, t3, t6, t1, t4, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, t8, t10, t7, t9, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var invMassB = bodyB.get$invMass();
    if (typeof invMassB !== 'number')
      return this.solveVelocityConstraints$0$bailout(6, t2, t8, i, t3, t6, t1, t4, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, t10, t7, t9, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var invIB = bodyB.get$invInertia();
    if (typeof invIB !== 'number')
      return this.solveVelocityConstraints$0$bailout(7, t10, t2, t8, i, t3, t6, t1, t4, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t7, t9, t5, 0, 0, 0, 0, 0, 0, 0, 0);
    var t17 = c.get$normal().get$y();
    if (typeof t17 !== 'number')
      throw $.iae(t17);
    t1.x = 1 * t17;
    var t18 = c.get$normal().get$x();
    if (typeof t18 !== 'number')
      throw $.iae(t18);
    t1.y = -1 * t18;
    var friction = c.get$friction();
    if (typeof friction !== 'number')
      return this.solveVelocityConstraints$0$bailout(8, i, t3, t4, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, t1, friction, t2, t7, t8, t9, t10, 0, 0, 0, 0, 0, 0, 0);
    var j = 0;
    while (true) {
      t11 = c.get$pointCount();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(9, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, t1, friction, wB, t7, j, t8, t2, t9, t10, wA, t11, 0, 0, 0, 0, 0);
      if (!(j < t11))
        break;
      t11 = c.get$points();
      if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
        return this.solveVelocityConstraints$0$bailout(10, i, t11, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, j, t2, t8, t7, t9, wA, t10, 0, 0, 0, 0, 0);
      if (j >= t11.length)
        throw $.ioore(j);
      var ccp = t11[j];
      var a = ccp.get$rA();
      t11 = -wB;
      var t13 = ccp.get$rB().get$y();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(11, i, ccp, a, t11, t3, t13, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, friction, t1, t6, wB, j, t2, t8, t7, t9, wA, t10, 0, 0);
      t13 = t11 * t13;
      t11 = vB.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(12, i, ccp, a, t3, t13, t11, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t4, friction, t1, t6, wB, j, t2, t8, t7, t9, wA, t10, 0, 0);
      t11 = t13 + t11;
      t13 = vA.get$x();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(13, i, ccp, a, t3, t4, c, t11, bodyB, t13, bodyA, vA, vB, invMassA, invIA, invMassB, invIB, t5, friction, t1, t6, wB, j, t2, t8, t7, t9, wA, t10, 0, 0);
      t13 = t11 - t13;
      t11 = a.get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(14, i, ccp, a, t3, t4, c, bodyA, bodyB, t13, vA, vB, invMassA, invIA, invMassB, invIB, t11, t5, friction, t1, t6, wB, j, t2, t8, t7, t9, wA, t10, 0, 0);
      t2.x = t13 + wA * t11;
      t18 = ccp.get$rB().get$x();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(15, i, ccp, a, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t18, t5, t6, friction, t1, wB, j, t2, t8, t7, t9, wA, t10, 0, 0, 0);
      t18 = wB * t18;
      var t20 = vB.get$y();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(16, i, ccp, a, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t18, t20, friction, t1, t6, wB, j, t2, t8, t7, t9, wA, t10, 0, 0);
      t20 = t18 + t20;
      t18 = vA.get$y();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(17, i, ccp, a, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t20, t18, friction, t1, t6, wB, j, t2, t8, t7, t9, wA, t10, 0, 0);
      t18 = t20 - t18;
      t20 = a.get$x();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(18, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t18, t20, t6, friction, t1, wB, j, t2, t8, t7, t9, wA, t10, 0, 0, 0);
      t2.y = t18 - wA * t20;
      var t24 = t2.x;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(19, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, j, t2, t8, t7, t24, t9, wA, t10, 0, 0, 0, 0);
      var t26 = t1.x;
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(20, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, j, t2, t8, t7, t24, t9, t26, wA, t10, 0, 0, 0);
      t26 = t24 * t26;
      t24 = t2.y;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(21, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, t2, j, t26, t8, t9, t7, wA, t24, t10, 0, 0, 0);
      var t29 = t1.y;
      if (typeof t29 !== 'number')
        return this.solveVelocityConstraints$0$bailout(22, t10, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, j, t26, t8, t2, t9, t7, wA, t24, t29, 0, 0);
      var vt = t26 + t24 * t29;
      t26 = ccp.get$tangentMass();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(23, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, j, t2, t8, t7, t9, wA, vt, t26, t10, 0, 0, 0);
      var lambda = t26 * -vt;
      t26 = ccp.get$normalImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(24, lambda, t26, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, j, t2, t8, t7, t9, wA, t10, 0, 0, 0);
      var maxFriction = friction * t26;
      t26 = ccp.get$tangentImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(25, lambda, maxFriction, t26, i, ccp, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, friction, t1, t6, wB, j, t2, t8, t7, t9, wA, t10, 0, 0);
      t26 += lambda;
      var newImpulse = $.max(-maxFriction, $.min(t26, maxFriction));
      var t34 = ccp.get$tangentImpulse();
      if (typeof t34 !== 'number')
        throw $.iae(t34);
      lambda = newImpulse - t34;
      t34 = t1.x;
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(26, i, ccp, t3, newImpulse, lambda, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, t1, friction, wB, j, t2, t8, t7, t9, wA, t10, t34, 0, 0);
      var Px = t34 * lambda;
      t34 = t1.y;
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(27, t34, i, ccp, newImpulse, t3, lambda, t4, c, bodyA, bodyB, Px, vA, vB, invMassA, invIA, invMassB, invIB, t5, t6, friction, t1, wB, j, t2, t8, t7, t9, wA, t10, 0);
      var Py = t34 * lambda;
      t34 = vA.get$x();
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(28, i, ccp, newImpulse, t3, t4, c, bodyA, bodyB, Px, vA, Py, invMassA, invIA, invMassB, invIB, vB, t34, t5, friction, t6, t1, wB, j, t2, t8, t7, t9, wA, t10, 0);
      vA.set$x(t34 - Px * invMassA);
      var t38 = vA.get$y();
      if (typeof t38 !== 'number')
        return this.solveVelocityConstraints$0$bailout(29, i, ccp, newImpulse, t3, t4, c, bodyA, bodyB, Px, vA, Py, invMassA, invIA, invMassB, invIB, vB, t38, t5, friction, t6, t1, wB, j, t2, t8, t7, t9, wA, t10, 0);
      vA.set$y(t38 - Py * invMassA);
      var t40 = ccp.get$rA().get$x();
      if (typeof t40 !== 'number')
        return this.solveVelocityConstraints$0$bailout(30, i, ccp, newImpulse, t3, t4, c, bodyA, Px, bodyB, vA, Py, vB, invIA, invMassB, invIB, invMassA, t5, t40, friction, t6, t1, wB, j, t2, t8, t7, t9, wA, t10, 0);
      t40 *= Py;
      var t42 = ccp.get$rA().get$y();
      if (typeof t42 !== 'number')
        return this.solveVelocityConstraints$0$bailout(31, i, ccp, newImpulse, t3, t4, c, bodyA, Px, bodyB, vA, Py, vB, invIA, invMassB, invIB, invMassA, t5, t40, t42, t6, friction, t1, wB, j, t2, t8, t7, t9, wA, t10);
      wA -= invIA * (t40 - t42 * Px);
      var t44 = vB.get$x();
      if (typeof t44 !== 'number')
        return this.solveVelocityConstraints$0$bailout(32, i, ccp, newImpulse, t3, t4, c, bodyA, Px, bodyB, vA, Py, vB, invMassA, invMassB, invIB, invIA, t5, friction, t6, t1, wA, j, t44, wB, t2, t8, t7, t9, t10, 0);
      vB.set$x(t44 + Px * invMassB);
      var t46 = vB.get$y();
      if (typeof t46 !== 'number')
        return this.solveVelocityConstraints$0$bailout(33, i, ccp, newImpulse, t3, t4, c, bodyA, Px, bodyB, vA, Py, vB, invIA, invMassB, invIB, invMassA, t5, friction, t6, t1, wA, j, t2, wB, t8, t9, t46, t10, t7, 0);
      vB.set$y(t46 + Py * invMassB);
      var t48 = ccp.get$rB().get$x();
      if (typeof t48 !== 'number')
        return this.solveVelocityConstraints$0$bailout(34, i, ccp, newImpulse, t3, t4, c, bodyA, Px, bodyB, vA, Py, vB, invIA, invMassB, invIB, t5, invMassA, friction, t6, t1, wA, j, t2, wB, t8, t9, t7, t10, t48, 0);
      t48 *= Py;
      var t50 = ccp.get$rB().get$y();
      if (typeof t50 !== 'number')
        return this.solveVelocityConstraints$0$bailout(35, t48, t50, i, ccp, newImpulse, t3, t4, c, bodyA, Px, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, friction, t6, t1, wA, j, t2, wB, t8, t9, t7, t10, 0);
      wB += invIB * (t48 - t50 * Px);
      ccp.set$tangentImpulse(newImpulse);
      ++j;
    }
    t11 = t11 === 1;
    var t12 = -wB;
    if (t11) {
      t11 = c.get$points();
      if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
        return this.solveVelocityConstraints$0$bailout(37, t10, t7, i, t9, t3, t1, t6, t4, wB, bodyA, bodyB, c, t2, vA, vB, invMassA, invIA, wA, invIB, t11, invMassB, t8, t5, 0, 0, 0, 0, 0, 0, 0);
      if (0 >= t11.length)
        throw $.ioore(0);
      ccp = t11[0];
      var a1 = ccp.get$rA();
      t11 = ccp.get$rB().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(38, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, a1, t5, t12, t11, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      t11 = t12 * t11;
      t12 = vB.get$x();
      if (typeof t12 !== 'number')
        return this.solveVelocityConstraints$0$bailout(39, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, a1, t5, t11, t12, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      t12 = t11 + t12;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(40, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, a1, t5, t12, t11, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      t11 = t12 - t11;
      t12 = a1.get$y();
      if (typeof t12 !== 'number')
        return this.solveVelocityConstraints$0$bailout(41, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, a1, t5, t11, t12, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      t2.x = t11 + wA * t12;
      t18 = ccp.get$rB().get$x();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(42, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, a1, t5, t6, t1, wB, t7, t18, t8, t2, t9, wA, t10, 0, 0, 0, 0, 0);
      t18 = wB * t18;
      t20 = vB.get$y();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(43, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, a1, t5, t6, t1, wB, t7, t2, t8, t18, t20, t9, wA, t10, 0, 0, 0, 0);
      t20 = t18 + t20;
      t18 = vA.get$y();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(44, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, a1, t5, t6, t1, wB, t7, t2, t8, t9, t20, t18, wA, t10, 0, 0, 0, 0);
      t18 = t20 - t18;
      t20 = a1.get$x();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(45, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, t6, t1, wB, t7, t2, t8, t9, wA, t18, t20, t10, 0, 0, 0, 0, 0);
      t2.y = t18 - wA * t20;
      var b = c.get$normal();
      t24 = t2.x;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(46, b, i, t24, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0, 0);
      t26 = b.get$x();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(47, b, i, t26, t24, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      t26 = t24 * t26;
      t24 = t2.y;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(48, b, i, t26, t24, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0);
      t29 = b.get$y();
      if (typeof t29 !== 'number')
        return this.solveVelocityConstraints$0$bailout(49, i, t26, t24, t29, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0);
      var vn = t26 + t24 * t29;
      t26 = ccp.get$normalMass();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(50, i, t3, vn, t26, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, t4, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0, 0);
      t26 = -t26;
      var t32 = ccp.get$velocityBias();
      if (typeof t32 !== 'number')
        return this.solveVelocityConstraints$0$bailout(51, i, t3, vn, t4, c, bodyA, t32, bodyB, t26, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0);
      lambda = t26 * (vn - t32);
      t26 = ccp.get$normalImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(52, i, t3, t4, c, bodyA, bodyB, vA, vB, t26, invMassA, invMassB, invIB, invIA, lambda, ccp, t5, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0, 0);
      a = t26 + lambda;
      newImpulse = a > 0 ? a : 0;
      lambda = newImpulse - t26;
      t11 = c.get$normal().get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(54, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, newImpulse, lambda, t11, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      Px = t11 * lambda;
      t11 = c.get$normal().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(55, i, t3, t4, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, newImpulse, lambda, Px, t11, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      Py = t11 * lambda;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(56, i, t3, t4, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, newImpulse, Px, t6, Py, t11, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0);
      vA.set$x(t11 - Px * invMassA);
      var t15 = vA.get$y();
      if (typeof t15 !== 'number')
        return this.solveVelocityConstraints$0$bailout(57, i, t3, t4, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, ccp, t5, newImpulse, Px, t6, Py, t1, wB, t2, t7, t15, t8, t9, wA, t10, 0, 0, 0, 0);
      vA.set$y(t15 - Py * invMassA);
      t17 = ccp.get$rA().get$x();
      if (typeof t17 !== 'number')
        return this.solveVelocityConstraints$0$bailout(58, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invMassB, invIB, ccp, t5, newImpulse, Px, t6, Py, t1, wB, t7, t2, t8, t9, wA, t17, t10, 0, 0, 0, 0, 0);
      t17 *= Py;
      var t19 = ccp.get$rA().get$y();
      if (typeof t19 !== 'number')
        return this.solveVelocityConstraints$0$bailout(59, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invMassB, invIB, ccp, t5, newImpulse, Px, t6, Py, t1, wB, t7, t2, t8, t9, wA, t10, t17, t19, 0, 0, 0, 0);
      wA -= invIA * (t17 - t19 * Px);
      var t21 = vB.get$x();
      if (typeof t21 !== 'number')
        return this.solveVelocityConstraints$0$bailout(60, i, wA, t21, t3, t4, bodyA, bodyB, vA, vB, invMassB, invIB, ccp, t5, newImpulse, Px, t6, Py, t1, wB, t7, t2, t8, t9, t10, 0, 0, 0, 0, 0, 0);
      vB.set$x(t21 + Px * invMassB);
      var t23 = vB.get$y();
      if (typeof t23 !== 'number')
        return this.solveVelocityConstraints$0$bailout(61, i, wA, t3, t23, t4, bodyA, bodyB, vA, vB, invMassB, invIB, ccp, t5, newImpulse, Px, t6, Py, t1, wB, t7, t2, t8, t9, t10, 0, 0, 0, 0, 0, 0);
      vB.set$y(t23 + Py * invMassB);
      var t25 = ccp.get$rB().get$x();
      if (typeof t25 !== 'number')
        return this.solveVelocityConstraints$0$bailout(62, t10, newImpulse, i, wA, Px, t3, Py, t1, t6, t4, wB, bodyA, bodyB, t8, t25, vA, vB, t7, t9, invIB, t2, ccp, t5, 0, 0, 0, 0, 0, 0, 0);
      t25 *= Py;
      var t27 = ccp.get$rB().get$y();
      if (typeof t27 !== 'number')
        return this.solveVelocityConstraints$0$bailout(63, t10, newImpulse, i, wA, Px, t3, t1, t6, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t25, t27, t9, invIB, t2, ccp, t5, 0, 0, 0, 0, 0, 0, 0);
      wB += invIB * (t25 - t27 * Px);
      ccp.set$normalImpulse(newImpulse);
    } else {
      t11 = c.get$points();
      if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
        return this.solveVelocityConstraints$0$bailout(64, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t11, t6, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0, 0, 0, 0, 0);
      if (0 >= t11.length)
        throw $.ioore(0);
      var cp1 = t11[0];
      t11 = c.get$points();
      if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
        return this.solveVelocityConstraints$0$bailout(65, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, t11, t6, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0, 0, 0, 0);
      if (1 >= t11.length)
        throw $.ioore(1);
      var cp2 = t11[1];
      a = $.Vector$(cp1.get$normalImpulse(), cp2.get$normalImpulse());
      t11 = cp1.get$rB().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(66, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, t12, wB, t11, t7, t8, t2, t9, t10, wA, 0, 0, 0);
      t11 = t12 * t11;
      var t16 = vB.get$x();
      if (typeof t16 !== 'number')
        return this.solveVelocityConstraints$0$bailout(67, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t11, t16, t8, t9, t2, t10, wA, 0, 0, 0);
      t16 = t11 + t16;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(68, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t16, t11, t9, t10, wA, 0, 0, 0);
      t11 = t16 - t11;
      t16 = cp1.get$rA().get$y();
      if (typeof t16 !== 'number')
        return this.solveVelocityConstraints$0$bailout(69, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t11, t10, wA, t16, 0, 0, 0);
      t3.x = t11 + wA * t16;
      t20 = cp1.get$rB().get$x();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(70, t20, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0, 0);
      t20 = wB * t20;
      var t22 = vB.get$y();
      if (typeof t22 !== 'number')
        return this.solveVelocityConstraints$0$bailout(71, i, t20, t22, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t22 = t20 + t22;
      t20 = vA.get$y();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(72, i, t22, t20, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t20 = t22 - t20;
      t22 = cp1.get$rA().get$x();
      if (typeof t22 !== 'number')
        return this.solveVelocityConstraints$0$bailout(73, i, t20, t3, t22, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t3.y = t20 - wA * t22;
      t26 = cp2.get$rB().get$y();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(74, i, t3, t4, c, bodyA, bodyB, t12, vA, vB, invMassA, invIA, invMassB, invIB, t26, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t26 = t12 * t26;
      t12 = vB.get$x();
      if (typeof t12 !== 'number')
        return this.solveVelocityConstraints$0$bailout(75, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t26, t12, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t12 = t26 + t12;
      t26 = vA.get$x();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(76, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t12, t26, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t26 = t12 - t26;
      t12 = cp2.get$rA().get$y();
      if (typeof t12 !== 'number')
        return this.solveVelocityConstraints$0$bailout(77, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, t26, t12, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t4.x = t26 + wA * t12;
      var t31 = cp2.get$rB().get$x();
      if (typeof t31 !== 'number')
        return this.solveVelocityConstraints$0$bailout(78, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t31, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0, 0);
      t31 = wB * t31;
      var t33 = vB.get$y();
      if (typeof t33 !== 'number')
        return this.solveVelocityConstraints$0$bailout(79, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t31, t6, a, t1, t33, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t33 = t31 + t33;
      t31 = vA.get$y();
      if (typeof t31 !== 'number')
        return this.solveVelocityConstraints$0$bailout(80, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t33, t31, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      t31 = t33 - t31;
      t33 = cp2.get$rA().get$x();
      if (typeof t33 !== 'number')
        return this.solveVelocityConstraints$0$bailout(81, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t31, t7, t8, t2, t33, t9, t10, wA, 0, 0, 0);
      t4.y = t31 - wA * t33;
      var t37 = t3.x;
      if (typeof t37 !== 'number')
        return this.solveVelocityConstraints$0$bailout(82, i, t3, t4, c, bodyA, bodyB, t37, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0, 0);
      var t39 = c.get$normal().get$x();
      if (typeof t39 !== 'number')
        return this.solveVelocityConstraints$0$bailout(83, i, t3, t4, c, bodyA, bodyB, t37, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, t39, 0, 0, 0);
      t39 = t37 * t39;
      t37 = t3.y;
      if (typeof t37 !== 'number')
        return this.solveVelocityConstraints$0$bailout(84, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t37, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, t39, 0, 0, 0);
      t42 = c.get$normal().get$y();
      if (typeof t42 !== 'number')
        return this.solveVelocityConstraints$0$bailout(85, t42, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t37, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, t39, 0, 0);
      var vn1 = t39 + t37 * t42;
      t39 = t4.x;
      if (typeof t39 !== 'number')
        return this.solveVelocityConstraints$0$bailout(86, i, vn1, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t39, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      var t45 = c.get$normal().get$x();
      if (typeof t45 !== 'number')
        return this.solveVelocityConstraints$0$bailout(87, i, vn1, t45, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t39, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      t45 = t39 * t45;
      t39 = t4.y;
      if (typeof t39 !== 'number')
        return this.solveVelocityConstraints$0$bailout(88, i, vn1, t3, t45, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t39, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      t48 = c.get$normal().get$y();
      if (typeof t48 !== 'number')
        return this.solveVelocityConstraints$0$bailout(89, i, vn1, t3, t45, t4, c, bodyA, bodyB, t48, vA, vB, invMassA, invIA, invMassB, invIB, t39, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0);
      var vn2 = t45 + t39 * t48;
      t45 = cp1.get$velocityBias();
      if (typeof t45 !== 'number')
        return this.solveVelocityConstraints$0$bailout(90, i, vn1, t3, t4, c, bodyA, bodyB, vn2, vA, vB, invMassA, invIA, invMassB, invIB, t45, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      t45 = vn1 - t45;
      var t51 = cp2.get$velocityBias();
      if (typeof t51 !== 'number')
        return this.solveVelocityConstraints$0$bailout(91, i, t3, t4, c, bodyA, bodyB, vn2, vA, vB, invMassA, invIA, invMassB, invIB, t45, t51, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      b = $.Vector$(t45, vn2 - t51);
      t45 = c.get$K().get$col1().get$x();
      if (typeof t45 !== 'number')
        return this.solveVelocityConstraints$0$bailout(92, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, t45, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      var t54 = a.x;
      if (typeof t54 !== 'number')
        return this.solveVelocityConstraints$0$bailout(93, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t54, b, t5, t45, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      t54 = t45 * t54;
      t45 = c.get$K().get$col2().get$x();
      if (typeof t45 !== 'number')
        return this.solveVelocityConstraints$0$bailout(94, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, t54, cp1, t45, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      var t57 = a.y;
      if (typeof t57 !== 'number')
        return this.solveVelocityConstraints$0$bailout(95, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t57, b, t5, t54, cp1, t45, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0);
      t5.x = t54 + t45 * t57;
      var t59 = c.get$K().get$col1().get$y();
      if (typeof t59 !== 'number')
        return this.solveVelocityConstraints$0$bailout(96, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, t59, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      var t61 = a.x;
      if (typeof t61 !== 'number')
        return this.solveVelocityConstraints$0$bailout(97, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, t61, cp1, cp2, t6, a, t1, t59, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      t61 = t59 * t61;
      t59 = c.get$K().get$col2().get$y();
      if (typeof t59 !== 'number')
        return this.solveVelocityConstraints$0$bailout(98, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t61, t8, t2, t59, t9, t10, wA, 0, 0);
      var t64 = a.y;
      if (typeof t64 !== 'number')
        return this.solveVelocityConstraints$0$bailout(99, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, t64, cp1, cp2, t6, a, t1, wB, t7, t61, t8, t2, t59, t9, t10, wA, 0);
      t5.y = t61 + t59 * t64;
      var t66 = b.x;
      if (typeof t66 !== 'number')
        return this.solveVelocityConstraints$0$bailout(100, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, t66, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      var t68 = t5.x;
      if (typeof t68 !== 'number')
        return this.solveVelocityConstraints$0$bailout(101, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, t66, cp1, t68, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      b.x = t66 - t68;
      var t70 = b.y;
      if (typeof t70 !== 'number')
        return this.solveVelocityConstraints$0$bailout(102, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, t70, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
      var t72 = t5.y;
      if (typeof t72 !== 'number')
        return this.solveVelocityConstraints$0$bailout(103, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, t70, cp2, t72, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      b.y = t70 - t72;
      t11 = c.get$normalMass();
      t12 = cp1.get$normalMass();
      if (typeof t12 !== 'number')
        return this.solveVelocityConstraints$0$bailout(104, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, t12, cp2, t6, a, t1, t11, wB, t7, t2, t8, t9, t10, wA, 0, 0);
      var t14 = -t12;
      t15 = b.x;
      for (; true;) {
        $.Matrix22_mulMatrixAndVectorToOut(t11, b, t6);
        t6.mulLocal$1(-1);
        t11 = t6.get$x();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(105, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, t12, cp2, t6, a, t1, t11, wB, t7, t2, t8, t9, t10, wA, 0, 0);
        if (t11 >= 0) {
          t11 = t6.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(106, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, t12, cp2, t6, a, t1, wB, t7, t2, t8, t9, t11, t10, wA, 0, 0);
          t11 = t11 >= 0;
        } else
          t11 = false;
        if (t11) {
          t7.setFrom$1(t6).subLocal$1(a);
          t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
          t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
          t10.setFrom$1(t8).addLocal$1(t9);
          t5.setFrom$1(t10).mulLocal$1(invMassA);
          vA.subLocal$1(t5);
          t5.setFrom$1(t10).mulLocal$1(invMassB);
          vB.addLocal$1(t5);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(107, t11, t12, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, invIA, wA, invIB, t2, t10, t5, 0, 0, 0, 0, 0, 0, 0);
          t14 = t8.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(108, t14, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, t11, t12, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0, 0, 0);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(109, i, cp1, t14, t11, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, invIA, wA, invIB, t2, t10, t5, 0, 0, 0, 0, 0, 0, 0);
          t16 = t8.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(110, i, t16, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, t14, t11, cp2, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0, 0, 0);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(111, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t14, t18, t19, wB, t2, t7, t8, t9, wA, t10, t1, 0, 0, 0, 0, 0, 0);
          t21 = t9.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(112, i, t21, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t14, t18, t19, wB, t2, t7, t8, t9, wA, t10, t1, 0, 0, 0, 0, 0);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(113, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t14, t1, wB, t2, t7, t8, t18, t21, t9, t10, wA, 0, 0, 0, 0, 0, 0);
          t23 = t9.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(114, i, t23, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t14, t1, wB, t2, t7, t8, t18, t21, t9, wA, t10, 0, 0, 0, 0, 0);
          var wA0 = wA - invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(115, t25, t26, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t10, invIB, t2, t5, wA0, 0, 0, 0, 0, 0, 0, 0, 0);
          var t28 = t8.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(116, t25, t26, i, cp1, cp2, t28, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t10, invIB, t2, t5, wA0, 0, 0, 0, 0, 0, 0, 0);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(117, t28, i, cp1, cp2, t25, t6, t1, t3, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t10, invIB, t2, t5, wA0, 0, 0, 0, 0, 0, 0, 0, 0);
          var t30 = t8.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(118, t28, i, cp1, cp2, t30, t25, t6, t1, t3, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t10, invIB, t2, t5, wA0, 0, 0, 0, 0, 0, 0, 0);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(119, i, cp1, cp2, t28, t6, t32, t33, t3, t1, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t4, invIB, t2, t10, t5, wA0, 0, 0, 0, 0, 0, 0, 0);
          var t35 = t9.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(120, i, t28, t3, t35, t33, t32, t4, bodyA, bodyB, vA, vB, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, t10, wA0, 0, 0, 0, 0, 0, 0);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(121, t2, i, cp1, cp2, t28, t6, t3, t1, t4, wB, bodyA, bodyB, t35, t32, vA, vB, t9, t8, invIB, t7, t10, t5, wA0, 0, 0, 0, 0, 0, 0, 0);
          t37 = t9.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(122, i, t28, t3, t37, t4, t35, bodyA, bodyB, t32, vA, vB, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, t10, wA0, 0, 0, 0, 0, 0, 0);
          var wB0 = wB + invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t6.get$x());
          cp2.set$normalImpulse(t6.get$y());
          wA = wA0;
          wB = wB0;
          break;
        }
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(123, t15, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, t14, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
        t6.set$x(t14 * t15);
        t6.set$y(0);
        t11 = c.get$K().get$col1().get$y();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(124, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t11, t8, t2, t9, t10, wA, 0, 0, 0);
        t13 = t6.get$x();
        if (typeof t13 !== 'number')
          return this.solveVelocityConstraints$0$bailout(125, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t11, t8, t13, t9, t2, t10, wA, 0, 0);
        t13 = t11 * t13;
        t11 = b.y;
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(126, i, t11, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t13, t9, t10, wA, 0, 0);
        vn2 = t13 + t11;
        t11 = t6.get$x();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(127, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, vn2, t10, wA, t11, 0, 0);
        if (t11 >= 0 && vn2 >= 0) {
          t7.setFrom$1(t6).subLocal$1(a);
          t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
          t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
          t10.setFrom$1(t8).addLocal$1(t9);
          t5.setFrom$1(t10).mulLocal$1(invMassA);
          vA.subLocal$1(t5);
          t5.setFrom$1(t10).mulLocal$1(invMassB);
          vB.addLocal$1(t5);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(128, i, cp1, cp2, t6, t11, t12, t3, t1, wB, bodyA, bodyB, t8, t7, vA, vB, t9, invIA, wA, invIB, t2, t10, t5, t4, 0, 0, 0, 0, 0, 0, 0);
          t14 = t8.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(129, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t14, t6, t11, t12, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0, 0, 0);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(130, t7, i, cp1, t2, cp2, t6, t3, t1, t4, t14, wB, bodyA, bodyB, t8, vA, vB, t11, invIA, t9, wA, invIB, t10, t5, 0, 0, 0, 0, 0, 0, 0);
          t16 = t8.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(131, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t16, t6, t1, t14, t7, t2, wB, t8, t9, t11, wA, t10, 0, 0, 0, 0, 0, 0);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(132, t9, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t2, t7, t8, t14, t18, t10, t19, wA, 0, 0, 0, 0, 0, 0);
          t21 = t9.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(133, t10, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t21, t1, wB, t2, t7, t8, t14, t18, t19, wA, t9, 0, 0, 0, 0, 0);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(134, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, t14, t10, wA, t21, t18, 0, 0, 0, 0, 0, 0);
          t23 = t9.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(135, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t23, t1, wB, t7, t2, t8, t9, t14, wA, t10, t21, t18, 0, 0, 0, 0, 0);
          wA0 = wA - invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(136, i, cp1, wA0, cp2, t25, t6, t26, t1, t3, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t10, invIB, t2, t5, 0, 0, 0, 0, 0, 0, 0, 0);
          t28 = t8.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(137, t3, i, cp1, wA0, cp2, t25, t6, t26, t1, t28, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t10, invIB, t2, t5, 0, 0, 0, 0, 0, 0, 0);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(138, i, cp1, wA0, cp2, t6, t3, t1, t28, t25, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t4, invIB, t2, t10, t5, 0, 0, 0, 0, 0, 0, 0, 0);
          t30 = t8.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(139, i, cp1, wA0, cp2, t6, t3, t1, t28, t25, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t30, invIB, t2, t10, t5, t4, 0, 0, 0, 0, 0, 0, 0);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(140, t2, i, cp1, wA0, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t28, vA, vB, t9, t32, t10, invIB, t7, t33, t5, 0, 0, 0, 0, 0, 0, 0);
          t35 = t9.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(141, i, wA0, t3, t4, bodyA, bodyB, t28, vA, vB, t33, t32, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t35, t9, t10, 0, 0, 0, 0, 0, 0);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(142, t7, i, cp1, t2, wA0, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t28, vA, vB, t9, t10, invIB, t35, t32, t5, 0, 0, 0, 0, 0, 0, 0);
          t37 = t9.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(143, i, wA0, t3, t4, bodyA, bodyB, t28, vA, vB, invIB, t35, t32, t5, cp1, cp2, t6, t1, wB, t2, t37, t8, t7, t9, t10, 0, 0, 0, 0, 0, 0);
          wB0 = wB + invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t6.get$x());
          cp2.set$normalImpulse(t6.get$y());
          wA = wA0;
          wB = wB0;
          break;
        }
        t6.set$x(0);
        t11 = cp2.get$normalMass();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(144, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t11, t8, t2, t9, t10, wA, 0, 0, 0);
        t11 = -t11;
        t13 = b.y;
        if (typeof t13 !== 'number')
          return this.solveVelocityConstraints$0$bailout(145, i, t13, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t11, t9, t10, wA, 0, 0);
        t6.set$y(t11 * t13);
        t15 = c.get$K().get$col2().get$x();
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(146, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, t15, 0, 0, 0);
        t17 = t6.get$y();
        if (typeof t17 !== 'number')
          return this.solveVelocityConstraints$0$bailout(147, i, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, t15, t17, 0, 0);
        t17 = t15 * t17;
        t15 = b.x;
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(148, t17, i, t15, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
        vn1 = t17 + t15;
        t11 = t6.get$y();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(149, vn1, i, t11, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0);
        if (t11 >= 0 && vn1 >= 0) {
          t7.setFrom$1(t6).subLocal$1(a);
          t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
          t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
          t10.setFrom$1(t8).addLocal$1(t9);
          t5.setFrom$1(t10).mulLocal$1(invMassA);
          vA.subLocal$1(t5);
          t5.setFrom$1(t10).mulLocal$1(invMassB);
          vB.addLocal$1(t5);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(150, t2, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t7, vA, t11, vB, invIA, t9, wA, invIB, t10, t12, t5, 0, 0, 0, 0, 0, 0, 0);
          t14 = t8.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(151, i, t3, t14, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t2, t7, t8, t11, t9, t12, wA, t10, 0, 0, 0, 0, 0, 0);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(152, t10, t2, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, invIA, wA, invIB, t14, t11, t5, 0, 0, 0, 0, 0, 0, 0);
          t16 = t8.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(153, i, t3, t16, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t2, t7, t8, t9, t10, wA, t14, t11, 0, 0, 0, 0, 0, 0);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(154, t14, t18, t19, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0, 0, 0);
          t21 = t9.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(155, t14, t18, t19, i, t3, t4, t21, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t2, t7, t8, t9, wA, t10, 0, 0, 0, 0, 0);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(156, t14, i, t21, t18, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0, 0, 0);
          t23 = t9.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(157, t14, i, t21, t18, t3, t4, bodyA, bodyB, t23, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, wA, t10, 0, 0, 0, 0, 0);
          wA0 = wA - invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(158, t2, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, wA0, t8, vA, vB, t9, t26, t25, invIB, t7, t10, t5, 0, 0, 0, 0, 0, 0, 0, 0);
          t28 = t8.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(159, t2, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, wA0, t8, vA, vB, t9, t26, t25, invIB, t7, t10, t28, t5, 0, 0, 0, 0, 0, 0, 0);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(160, t2, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, wA0, t8, vA, vB, t9, t28, t25, invIB, t7, t10, t5, 0, 0, 0, 0, 0, 0, 0, 0);
          t30 = t8.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(161, t2, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, wA0, t30, vA, vB, t9, t28, t25, invIB, t7, t10, t8, t5, 0, 0, 0, 0, 0, 0, 0);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(162, t32, t33, i, cp1, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, wA0, t7, vA, vB, t9, t8, invIB, t2, t10, t5, t28, 0, 0, 0, 0, 0, 0, 0);
          t35 = t9.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(163, i, t3, t4, bodyA, bodyB, wA0, vA, vB, t35, invIB, t5, t28, t32, t33, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, t10, 0, 0, 0, 0, 0, 0);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(164, t35, i, cp1, cp2, t32, t6, t1, t3, t4, wB, bodyA, bodyB, wA0, t7, vA, vB, t9, t8, invIB, t2, t10, t5, t28, 0, 0, 0, 0, 0, 0, 0);
          t37 = t9.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(165, i, t3, t4, bodyA, bodyB, wA0, vA, vB, t37, invIB, t5, t28, t35, cp1, t32, cp2, t6, t1, wB, t7, t2, t8, t9, t10, 0, 0, 0, 0, 0, 0);
          wB0 = wB + invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t6.get$x());
          cp2.set$normalImpulse(t6.get$y());
          wA = wA0;
          wB = wB0;
          break;
        }
        t6.set$x(0);
        t6.set$y(0);
        vn1 = b.x;
        if (typeof vn1 !== 'number')
          return this.solveVelocityConstraints$0$bailout(166, i, vn1, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
        vn2 = b.y;
        if (typeof vn2 !== 'number')
          return this.solveVelocityConstraints$0$bailout(167, i, vn1, vn2, t3, t4, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t5, cp1, cp2, t6, a, t1, wB, t7, t2, t8, t9, t10, wA, 0, 0, 0);
        if (vn1 >= 0 && vn2 >= 0) {
          t7.setFrom$1(t6).subLocal$1(a);
          t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
          t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
          t10.setFrom$1(t8).addLocal$1(t9);
          t5.setFrom$1(t10).mulLocal$1(invMassA);
          vA.subLocal$1(t5);
          t5.setFrom$1(t10).mulLocal$1(invMassB);
          vB.addLocal$1(t5);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(168, t2, i, cp1, cp2, t6, t3, t1, t11, wB, bodyA, bodyB, t8, t12, vA, vB, t9, invIA, wA, invIB, t7, t10, t5, t4, 0, 0, 0, 0, 0, 0, 0);
          t14 = t8.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(169, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, t11, t14, t7, t2, wB, t8, t9, t12, wA, t10, 0, 0, 0, 0, 0, 0);
          t14 = t12 * t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(170, t7, i, cp1, t2, cp2, t6, t3, t1, t4, wB, bodyA, bodyB, t8, t14, vA, vB, t9, invIA, wA, invIB, t11, t10, t5, 0, 0, 0, 0, 0, 0, 0);
          t16 = t8.x;
          if (typeof t16 !== 'number')
            return this.solveVelocityConstraints$0$bailout(171, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t16, t11, t9, t14, wA, t10, 0, 0, 0, 0, 0, 0);
          t14 -= t11 * t16;
          t18 = cp2.get$rA();
          t19 = t18.get$x();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(172, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t2, t7, t8, t9, t10, wA, t14, t18, t19, 0, 0, 0, 0, 0, 0);
          t21 = t9.y;
          if (typeof t21 !== 'number')
            return this.solveVelocityConstraints$0$bailout(173, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t21, t9, wA, t14, t18, t10, t19, 0, 0, 0, 0, 0);
          t21 = t19 * t21;
          t18 = t18.get$y();
          if (typeof t18 !== 'number')
            return this.solveVelocityConstraints$0$bailout(174, t21, t18, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t2, t7, t8, t9, wA, t14, t10, 0, 0, 0, 0, 0, 0);
          t23 = t9.x;
          if (typeof t23 !== 'number')
            return this.solveVelocityConstraints$0$bailout(175, t21, t18, i, t3, t4, bodyA, bodyB, vA, vB, invIA, invIB, t5, cp1, cp2, t6, t1, wB, t7, t2, t8, t23, t9, wA, t14, t10, 0, 0, 0, 0, 0);
          wA0 = wA - invIA * (t14 + (t21 - t18 * t23));
          t25 = cp1.get$rB();
          t26 = t25.get$x();
          if (typeof t26 !== 'number')
            return this.solveVelocityConstraints$0$bailout(176, t2, i, cp1, cp2, t6, wA0, t25, t3, t26, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t4, invIB, t1, t10, t5, 0, 0, 0, 0, 0, 0, 0, 0);
          t28 = t8.y;
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(177, t2, i, cp1, cp2, t6, wA0, t25, t3, t26, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t28, invIB, t1, t10, t5, t4, 0, 0, 0, 0, 0, 0, 0);
          t28 = t26 * t28;
          t25 = t25.get$y();
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(178, t2, i, cp1, cp2, t6, wA0, t1, t3, t4, wB, bodyA, bodyB, t28, t25, vA, vB, t9, t8, invIB, t7, t10, t5, 0, 0, 0, 0, 0, 0, 0, 0);
          t30 = t8.x;
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(179, t2, i, cp1, cp2, t6, wA0, t1, t3, t4, wB, bodyA, bodyB, t28, t25, vA, vB, t9, t30, t8, invIB, t7, t10, t5, 0, 0, 0, 0, 0, 0, 0);
          t28 -= t25 * t30;
          t32 = cp2.get$rB();
          t33 = t32.get$x();
          if (typeof t33 !== 'number')
            return this.solveVelocityConstraints$0$bailout(180, t2, i, cp1, cp2, t6, wA0, t1, t3, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t28, t32, invIB, t33, t10, t5, 0, 0, 0, 0, 0, 0, 0);
          t35 = t9.y;
          if (typeof t35 !== 'number')
            return this.solveVelocityConstraints$0$bailout(181, i, t3, wA0, t4, bodyA, bodyB, vA, vB, t28, t32, invIB, t33, t5, cp1, cp2, t6, t1, wB, t2, t7, t8, t9, t10, t35, 0, 0, 0, 0, 0, 0);
          t35 = t33 * t35;
          t32 = t32.get$y();
          if (typeof t32 !== 'number')
            return this.solveVelocityConstraints$0$bailout(182, t32, i, cp1, cp2, t6, wA0, t1, t3, t4, wB, bodyA, bodyB, t8, t7, vA, vB, t9, t28, t10, invIB, t2, t5, t35, 0, 0, 0, 0, 0, 0, 0);
          t37 = t9.x;
          if (typeof t37 !== 'number')
            return this.solveVelocityConstraints$0$bailout(183, i, t3, wA0, t4, bodyA, bodyB, vA, vB, t28, invIB, t5, t35, t32, cp1, cp2, t6, t1, wB, t7, t2, t8, t9, t10, t37, 0, 0, 0, 0, 0, 0);
          wB0 = wB + invIB * (t28 + (t35 - t32 * t37));
          cp1.set$normalImpulse(t6.get$x());
          cp2.set$normalImpulse(t6.get$y());
          wA = wA0;
          wB = wB0;
          break;
        }
        break;
      }
    }
    bodyA.get$linearVelocity().setFrom$1(vA);
    bodyA.set$angularVelocity(wA);
    bodyB.get$linearVelocity().setFrom$1(vB);
    bodyB.set$angularVelocity(wB);
    ++i;
  }
},
 solveVelocityConstraints$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22, env23, env24, env25, env26, env27, env28, env29) {
  switch (state0) {
    case 1:
      i = env0;
      t11 = env1;
      t3 = env2;
      t1 = env3;
      t6 = env4;
      t4 = env5;
      t7 = env6;
      t2 = env7;
      t8 = env8;
      t9 = env9;
      t10 = env10;
      t5 = env11;
      break;
    case 2:
      i = env0;
      t3 = env1;
      t1 = env2;
      t6 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      wA = env8;
      t7 = env9;
      t8 = env10;
      t2 = env11;
      t9 = env12;
      t10 = env13;
      t5 = env14;
      break;
    case 3:
      i = env0;
      t3 = env1;
      t1 = env2;
      t6 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      wA = env8;
      wB = env9;
      t8 = env10;
      t7 = env11;
      t9 = env12;
      t10 = env13;
      t2 = env14;
      t5 = env15;
      break;
    case 4:
      t2 = env0;
      i = env1;
      t3 = env2;
      t6 = env3;
      t1 = env4;
      t4 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      wA = env9;
      wB = env10;
      vA = env11;
      vB = env12;
      invMassA = env13;
      t8 = env14;
      t10 = env15;
      t7 = env16;
      t9 = env17;
      t5 = env18;
      break;
    case 5:
      t2 = env0;
      i = env1;
      t3 = env2;
      t6 = env3;
      t1 = env4;
      t4 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      wA = env9;
      wB = env10;
      vA = env11;
      vB = env12;
      invMassA = env13;
      invIA = env14;
      t8 = env15;
      t10 = env16;
      t7 = env17;
      t9 = env18;
      t5 = env19;
      break;
    case 6:
      t2 = env0;
      t8 = env1;
      i = env2;
      t3 = env3;
      t6 = env4;
      t1 = env5;
      t4 = env6;
      c = env7;
      bodyA = env8;
      bodyB = env9;
      wA = env10;
      wB = env11;
      vA = env12;
      vB = env13;
      invMassA = env14;
      invIA = env15;
      invMassB = env16;
      t10 = env17;
      t7 = env18;
      t9 = env19;
      t5 = env20;
      break;
    case 7:
      t10 = env0;
      t2 = env1;
      t8 = env2;
      i = env3;
      t3 = env4;
      t6 = env5;
      t1 = env6;
      t4 = env7;
      c = env8;
      bodyA = env9;
      bodyB = env10;
      wA = env11;
      wB = env12;
      vA = env13;
      vB = env14;
      invMassA = env15;
      invIA = env16;
      invMassB = env17;
      invIB = env18;
      t7 = env19;
      t9 = env20;
      t5 = env21;
      break;
    case 8:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      wA = env6;
      wB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      t6 = env15;
      t1 = env16;
      friction = env17;
      t2 = env18;
      t7 = env19;
      t8 = env20;
      t9 = env21;
      t10 = env22;
      break;
    case 9:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      t6 = env13;
      t1 = env14;
      friction = env15;
      wB = env16;
      t7 = env17;
      j = env18;
      t8 = env19;
      t2 = env20;
      t9 = env21;
      t10 = env22;
      wA = env23;
      t11 = env24;
      break;
    case 10:
      i = env0;
      t11 = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      t6 = env14;
      friction = env15;
      t1 = env16;
      wB = env17;
      j = env18;
      t2 = env19;
      t8 = env20;
      t7 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 11:
      i = env0;
      ccp = env1;
      a = env2;
      t11 = env3;
      t3 = env4;
      t13 = env5;
      t4 = env6;
      c = env7;
      bodyA = env8;
      bodyB = env9;
      vA = env10;
      vB = env11;
      invMassA = env12;
      invIA = env13;
      invMassB = env14;
      invIB = env15;
      t5 = env16;
      friction = env17;
      t1 = env18;
      t6 = env19;
      wB = env20;
      j = env21;
      t2 = env22;
      t8 = env23;
      t7 = env24;
      t9 = env25;
      wA = env26;
      t10 = env27;
      break;
    case 12:
      i = env0;
      ccp = env1;
      a = env2;
      t3 = env3;
      t13 = env4;
      t11 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      t5 = env15;
      t4 = env16;
      friction = env17;
      t1 = env18;
      t6 = env19;
      wB = env20;
      j = env21;
      t2 = env22;
      t8 = env23;
      t7 = env24;
      t9 = env25;
      wA = env26;
      t10 = env27;
      break;
    case 13:
      i = env0;
      ccp = env1;
      a = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      t11 = env6;
      bodyB = env7;
      t13 = env8;
      bodyA = env9;
      vA = env10;
      vB = env11;
      invMassA = env12;
      invIA = env13;
      invMassB = env14;
      invIB = env15;
      t5 = env16;
      friction = env17;
      t1 = env18;
      t6 = env19;
      wB = env20;
      j = env21;
      t2 = env22;
      t8 = env23;
      t7 = env24;
      t9 = env25;
      wA = env26;
      t10 = env27;
      break;
    case 14:
      i = env0;
      ccp = env1;
      a = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      t13 = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      t11 = env15;
      t5 = env16;
      friction = env17;
      t1 = env18;
      t6 = env19;
      wB = env20;
      j = env21;
      t2 = env22;
      t8 = env23;
      t7 = env24;
      t9 = env25;
      wA = env26;
      t10 = env27;
      break;
    case 15:
      i = env0;
      ccp = env1;
      a = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t18 = env14;
      t5 = env15;
      t6 = env16;
      friction = env17;
      t1 = env18;
      wB = env19;
      j = env20;
      t2 = env21;
      t8 = env22;
      t7 = env23;
      t9 = env24;
      wA = env25;
      t10 = env26;
      break;
    case 16:
      i = env0;
      ccp = env1;
      a = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      t18 = env15;
      t20 = env16;
      friction = env17;
      t1 = env18;
      t6 = env19;
      wB = env20;
      j = env21;
      t2 = env22;
      t8 = env23;
      t7 = env24;
      t9 = env25;
      wA = env26;
      t10 = env27;
      break;
    case 17:
      i = env0;
      ccp = env1;
      a = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      t20 = env15;
      t18 = env16;
      friction = env17;
      t1 = env18;
      t6 = env19;
      wB = env20;
      j = env21;
      t2 = env22;
      t8 = env23;
      t7 = env24;
      t9 = env25;
      wA = env26;
      t10 = env27;
      break;
    case 18:
      i = env0;
      ccp = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      t18 = env14;
      t20 = env15;
      t6 = env16;
      friction = env17;
      t1 = env18;
      wB = env19;
      j = env20;
      t2 = env21;
      t8 = env22;
      t7 = env23;
      t9 = env24;
      wA = env25;
      t10 = env26;
      break;
    case 19:
      i = env0;
      ccp = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      t6 = env14;
      friction = env15;
      t1 = env16;
      wB = env17;
      j = env18;
      t2 = env19;
      t8 = env20;
      t7 = env21;
      t24 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 20:
      i = env0;
      ccp = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      t6 = env14;
      friction = env15;
      t1 = env16;
      wB = env17;
      j = env18;
      t2 = env19;
      t8 = env20;
      t7 = env21;
      t24 = env22;
      t9 = env23;
      t26 = env24;
      wA = env25;
      t10 = env26;
      break;
    case 21:
      i = env0;
      ccp = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      t6 = env14;
      friction = env15;
      t1 = env16;
      wB = env17;
      t2 = env18;
      j = env19;
      t26 = env20;
      t8 = env21;
      t9 = env22;
      t7 = env23;
      wA = env24;
      t24 = env25;
      t10 = env26;
      break;
    case 22:
      t10 = env0;
      i = env1;
      ccp = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      t6 = env15;
      friction = env16;
      t1 = env17;
      wB = env18;
      j = env19;
      t26 = env20;
      t8 = env21;
      t2 = env22;
      t9 = env23;
      t7 = env24;
      wA = env25;
      t24 = env26;
      t29 = env27;
      break;
    case 23:
      i = env0;
      ccp = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      t6 = env14;
      friction = env15;
      t1 = env16;
      wB = env17;
      j = env18;
      t2 = env19;
      t8 = env20;
      t7 = env21;
      t9 = env22;
      wA = env23;
      vt = env24;
      t26 = env25;
      t10 = env26;
      break;
    case 24:
      lambda = env0;
      t26 = env1;
      i = env2;
      ccp = env3;
      t3 = env4;
      t4 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      t5 = env15;
      t6 = env16;
      friction = env17;
      t1 = env18;
      wB = env19;
      j = env20;
      t2 = env21;
      t8 = env22;
      t7 = env23;
      t9 = env24;
      wA = env25;
      t10 = env26;
      break;
    case 25:
      lambda = env0;
      maxFriction = env1;
      t26 = env2;
      i = env3;
      ccp = env4;
      t3 = env5;
      t4 = env6;
      c = env7;
      bodyA = env8;
      bodyB = env9;
      vA = env10;
      vB = env11;
      invMassA = env12;
      invIA = env13;
      invMassB = env14;
      invIB = env15;
      t5 = env16;
      friction = env17;
      t1 = env18;
      t6 = env19;
      wB = env20;
      j = env21;
      t2 = env22;
      t8 = env23;
      t7 = env24;
      t9 = env25;
      wA = env26;
      t10 = env27;
      break;
    case 26:
      i = env0;
      ccp = env1;
      t3 = env2;
      newImpulse = env3;
      lambda = env4;
      t4 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      t5 = env15;
      t6 = env16;
      t1 = env17;
      friction = env18;
      wB = env19;
      j = env20;
      t2 = env21;
      t8 = env22;
      t7 = env23;
      t9 = env24;
      wA = env25;
      t10 = env26;
      t34 = env27;
      break;
    case 27:
      t34 = env0;
      i = env1;
      ccp = env2;
      newImpulse = env3;
      t3 = env4;
      lambda = env5;
      t4 = env6;
      c = env7;
      bodyA = env8;
      bodyB = env9;
      Px = env10;
      vA = env11;
      vB = env12;
      invMassA = env13;
      invIA = env14;
      invMassB = env15;
      invIB = env16;
      t5 = env17;
      t6 = env18;
      friction = env19;
      t1 = env20;
      wB = env21;
      j = env22;
      t2 = env23;
      t8 = env24;
      t7 = env25;
      t9 = env26;
      wA = env27;
      t10 = env28;
      break;
    case 28:
      i = env0;
      ccp = env1;
      newImpulse = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      Px = env8;
      vA = env9;
      Py = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      vB = env15;
      t34 = env16;
      t5 = env17;
      friction = env18;
      t6 = env19;
      t1 = env20;
      wB = env21;
      j = env22;
      t2 = env23;
      t8 = env24;
      t7 = env25;
      t9 = env26;
      wA = env27;
      t10 = env28;
      break;
    case 29:
      i = env0;
      ccp = env1;
      newImpulse = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      Px = env8;
      vA = env9;
      Py = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      vB = env15;
      t38 = env16;
      t5 = env17;
      friction = env18;
      t6 = env19;
      t1 = env20;
      wB = env21;
      j = env22;
      t2 = env23;
      t8 = env24;
      t7 = env25;
      t9 = env26;
      wA = env27;
      t10 = env28;
      break;
    case 30:
      i = env0;
      ccp = env1;
      newImpulse = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      Px = env7;
      bodyB = env8;
      vA = env9;
      Py = env10;
      vB = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      invMassA = env15;
      t5 = env16;
      t40 = env17;
      friction = env18;
      t6 = env19;
      t1 = env20;
      wB = env21;
      j = env22;
      t2 = env23;
      t8 = env24;
      t7 = env25;
      t9 = env26;
      wA = env27;
      t10 = env28;
      break;
    case 31:
      i = env0;
      ccp = env1;
      newImpulse = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      Px = env7;
      bodyB = env8;
      vA = env9;
      Py = env10;
      vB = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      invMassA = env15;
      t5 = env16;
      t40 = env17;
      t42 = env18;
      t6 = env19;
      friction = env20;
      t1 = env21;
      wB = env22;
      j = env23;
      t2 = env24;
      t8 = env25;
      t7 = env26;
      t9 = env27;
      wA = env28;
      t10 = env29;
      break;
    case 32:
      i = env0;
      ccp = env1;
      newImpulse = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      Px = env7;
      bodyB = env8;
      vA = env9;
      Py = env10;
      vB = env11;
      invMassA = env12;
      invMassB = env13;
      invIB = env14;
      invIA = env15;
      t5 = env16;
      friction = env17;
      t6 = env18;
      t1 = env19;
      wA = env20;
      j = env21;
      t44 = env22;
      wB = env23;
      t2 = env24;
      t8 = env25;
      t7 = env26;
      t9 = env27;
      t10 = env28;
      break;
    case 33:
      i = env0;
      ccp = env1;
      newImpulse = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      Px = env7;
      bodyB = env8;
      vA = env9;
      Py = env10;
      vB = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      invMassA = env15;
      t5 = env16;
      friction = env17;
      t6 = env18;
      t1 = env19;
      wA = env20;
      j = env21;
      t2 = env22;
      wB = env23;
      t8 = env24;
      t9 = env25;
      t46 = env26;
      t10 = env27;
      t7 = env28;
      break;
    case 34:
      i = env0;
      ccp = env1;
      newImpulse = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      Px = env7;
      bodyB = env8;
      vA = env9;
      Py = env10;
      vB = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      t5 = env15;
      invMassA = env16;
      friction = env17;
      t6 = env18;
      t1 = env19;
      wA = env20;
      j = env21;
      t2 = env22;
      wB = env23;
      t8 = env24;
      t9 = env25;
      t7 = env26;
      t10 = env27;
      t48 = env28;
      break;
    case 35:
      t48 = env0;
      t50 = env1;
      i = env2;
      ccp = env3;
      newImpulse = env4;
      t3 = env5;
      t4 = env6;
      c = env7;
      bodyA = env8;
      Px = env9;
      bodyB = env10;
      vA = env11;
      vB = env12;
      invMassA = env13;
      invIA = env14;
      invMassB = env15;
      invIB = env16;
      t5 = env17;
      friction = env18;
      t6 = env19;
      t1 = env20;
      wA = env21;
      j = env22;
      t2 = env23;
      wB = env24;
      t8 = env25;
      t9 = env26;
      t7 = env27;
      t10 = env28;
      break;
    case 36:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      t11 = env6;
      vB = env7;
      invMassA = env8;
      vA = env9;
      invMassB = env10;
      invIB = env11;
      invIA = env12;
      t5 = env13;
      t6 = env14;
      t1 = env15;
      wB = env16;
      t7 = env17;
      t2 = env18;
      t8 = env19;
      t9 = env20;
      t10 = env21;
      wA = env22;
      break;
    case 37:
      t10 = env0;
      t7 = env1;
      i = env2;
      t9 = env3;
      t3 = env4;
      t1 = env5;
      t6 = env6;
      t4 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      c = env11;
      t2 = env12;
      vA = env13;
      vB = env14;
      invMassA = env15;
      invIA = env16;
      wA = env17;
      invIB = env18;
      t11 = env19;
      invMassB = env20;
      t8 = env21;
      t5 = env22;
      break;
    case 38:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      a1 = env13;
      t5 = env14;
      t11 = env15;
      t13 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 39:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      a1 = env13;
      t5 = env14;
      t13 = env15;
      t11 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 40:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      a1 = env13;
      t5 = env14;
      t11 = env15;
      t13 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 41:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      a1 = env13;
      t5 = env14;
      t13 = env15;
      t11 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 42:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      a1 = env13;
      t5 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t18 = env19;
      t8 = env20;
      t2 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 43:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      a1 = env13;
      t5 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t18 = env21;
      t20 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 44:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      a1 = env13;
      t5 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      t20 = env22;
      t18 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 45:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      t5 = env13;
      t6 = env14;
      t1 = env15;
      wB = env16;
      t7 = env17;
      t2 = env18;
      t8 = env19;
      t9 = env20;
      wA = env21;
      t18 = env22;
      t20 = env23;
      t10 = env24;
      break;
    case 46:
      b = env0;
      i = env1;
      t24 = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      ccp = env14;
      t5 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t2 = env19;
      t7 = env20;
      t8 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 47:
      b = env0;
      i = env1;
      t26 = env2;
      t24 = env3;
      t3 = env4;
      t4 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      ccp = env15;
      t5 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 48:
      b = env0;
      i = env1;
      t26 = env2;
      t24 = env3;
      t3 = env4;
      t4 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      ccp = env15;
      t5 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 49:
      i = env0;
      t26 = env1;
      t24 = env2;
      t29 = env3;
      t3 = env4;
      t4 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      ccp = env15;
      t5 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 50:
      i = env0;
      t3 = env1;
      vn = env2;
      t26 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      ccp = env13;
      t5 = env14;
      t4 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 51:
      i = env0;
      t3 = env1;
      vn = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      t32 = env6;
      bodyB = env7;
      t26 = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      ccp = env15;
      t5 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 52:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      t26 = env8;
      invMassA = env9;
      invMassB = env10;
      invIB = env11;
      invIA = env12;
      lambda = env13;
      ccp = env14;
      t5 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t2 = env19;
      t7 = env20;
      t8 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 53:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      t5 = env13;
      newImpulse = env14;
      t11 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t2 = env19;
      t7 = env20;
      t8 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 54:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      ccp = env12;
      t5 = env13;
      newImpulse = env14;
      lambda = env15;
      t11 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 55:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invMassA = env7;
      invIA = env8;
      invMassB = env9;
      invIB = env10;
      ccp = env11;
      t5 = env12;
      newImpulse = env13;
      lambda = env14;
      Px = env15;
      t11 = env16;
      t6 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 56:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invMassA = env7;
      invIA = env8;
      invMassB = env9;
      invIB = env10;
      ccp = env11;
      t5 = env12;
      newImpulse = env13;
      Px = env14;
      t6 = env15;
      Py = env16;
      t11 = env17;
      t1 = env18;
      wB = env19;
      t2 = env20;
      t7 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 57:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invMassA = env7;
      invIA = env8;
      invMassB = env9;
      invIB = env10;
      ccp = env11;
      t5 = env12;
      newImpulse = env13;
      Px = env14;
      t6 = env15;
      Py = env16;
      t1 = env17;
      wB = env18;
      t2 = env19;
      t7 = env20;
      t16 = env21;
      t8 = env22;
      t9 = env23;
      wA = env24;
      t10 = env25;
      break;
    case 58:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invMassB = env8;
      invIB = env9;
      ccp = env10;
      t5 = env11;
      newImpulse = env12;
      Px = env13;
      t6 = env14;
      Py = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t18 = env23;
      t10 = env24;
      break;
    case 59:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invMassB = env8;
      invIB = env9;
      ccp = env10;
      t5 = env11;
      newImpulse = env12;
      Px = env13;
      t6 = env14;
      Py = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t10 = env23;
      t18 = env24;
      t20 = env25;
      break;
    case 60:
      i = env0;
      wA = env1;
      t22 = env2;
      t3 = env3;
      t4 = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassB = env9;
      invIB = env10;
      ccp = env11;
      t5 = env12;
      newImpulse = env13;
      Px = env14;
      t6 = env15;
      Py = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t9 = env22;
      t10 = env23;
      break;
    case 61:
      i = env0;
      wA = env1;
      t3 = env2;
      t24 = env3;
      t4 = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassB = env9;
      invIB = env10;
      ccp = env11;
      t5 = env12;
      newImpulse = env13;
      Px = env14;
      t6 = env15;
      Py = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t9 = env22;
      t10 = env23;
      break;
    case 62:
      t10 = env0;
      newImpulse = env1;
      i = env2;
      wA = env3;
      Px = env4;
      t3 = env5;
      Py = env6;
      t1 = env7;
      t6 = env8;
      t4 = env9;
      wB = env10;
      bodyA = env11;
      bodyB = env12;
      t8 = env13;
      t26 = env14;
      vA = env15;
      vB = env16;
      t7 = env17;
      t9 = env18;
      invIB = env19;
      t2 = env20;
      ccp = env21;
      t5 = env22;
      break;
    case 63:
      t10 = env0;
      newImpulse = env1;
      i = env2;
      wA = env3;
      Px = env4;
      t3 = env5;
      t1 = env6;
      t6 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t26 = env16;
      t28 = env17;
      t9 = env18;
      invIB = env19;
      t2 = env20;
      ccp = env21;
      t5 = env22;
      break;
    case 64:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      t11 = env13;
      t6 = env14;
      t1 = env15;
      wB = env16;
      t7 = env17;
      t2 = env18;
      t8 = env19;
      t9 = env20;
      t10 = env21;
      wA = env22;
      break;
    case 65:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      t11 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      t10 = env22;
      wA = env23;
      break;
    case 66:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      a = env16;
      t1 = env17;
      t11 = env18;
      wB = env19;
      t14 = env20;
      t7 = env21;
      t8 = env22;
      t2 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 67:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      a = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t14 = env20;
      t11 = env21;
      t8 = env22;
      t9 = env23;
      t2 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 68:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      a = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t11 = env22;
      t14 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 69:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      a = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t9 = env22;
      t14 = env23;
      t10 = env24;
      wA = env25;
      t11 = env26;
      break;
    case 70:
      t19 = env0;
      i = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      t10 = env24;
      wA = env25;
      break;
    case 71:
      i = env0;
      t19 = env1;
      t21 = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 72:
      i = env0;
      t21 = env1;
      t19 = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 73:
      i = env0;
      t19 = env1;
      t3 = env2;
      t21 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 74:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      t25 = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t26 = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 75:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t26 = env12;
      t25 = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 76:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t25 = env12;
      t26 = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 77:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      t26 = env13;
      t25 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 78:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t31 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      t10 = env24;
      wA = env25;
      break;
    case 79:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t31 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      t33 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 80:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      a = env16;
      t33 = env17;
      t31 = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 81:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      a = env16;
      t1 = env17;
      wB = env18;
      t31 = env19;
      t7 = env20;
      t8 = env21;
      t2 = env22;
      t33 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 82:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      t37 = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      t10 = env24;
      wA = env25;
      break;
    case 83:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      t37 = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      t10 = env24;
      wA = env25;
      t39 = env26;
      break;
    case 84:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t37 = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      t10 = env24;
      wA = env25;
      t39 = env26;
      break;
    case 85:
      t42 = env0;
      i = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t37 = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      t39 = env27;
      break;
    case 86:
      i = env0;
      vn1 = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t39 = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 87:
      i = env0;
      vn1 = env1;
      t45 = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t39 = env14;
      t5 = env15;
      cp1 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 88:
      i = env0;
      vn1 = env1;
      t3 = env2;
      t45 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t39 = env14;
      t5 = env15;
      cp1 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 89:
      i = env0;
      vn1 = env1;
      t3 = env2;
      t45 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      t48 = env8;
      vA = env9;
      vB = env10;
      invMassA = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      t39 = env15;
      t5 = env16;
      cp1 = env17;
      cp2 = env18;
      t6 = env19;
      a = env20;
      t1 = env21;
      wB = env22;
      t7 = env23;
      t2 = env24;
      t8 = env25;
      t9 = env26;
      t10 = env27;
      wA = env28;
      break;
    case 90:
      i = env0;
      vn1 = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vn2 = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t45 = env14;
      t5 = env15;
      cp1 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 91:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vn2 = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      t45 = env13;
      t51 = env14;
      t5 = env15;
      cp1 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 92:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      t45 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 93:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t54 = env12;
      b = env13;
      t5 = env14;
      t45 = env15;
      cp1 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 94:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      t54 = env14;
      cp1 = env15;
      t45 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 95:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      t57 = env12;
      b = env13;
      t5 = env14;
      t54 = env15;
      cp1 = env16;
      t45 = env17;
      cp2 = env18;
      t6 = env19;
      a = env20;
      t1 = env21;
      wB = env22;
      t7 = env23;
      t2 = env24;
      t8 = env25;
      t9 = env26;
      t10 = env27;
      wA = env28;
      break;
    case 96:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      t59 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 97:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      t61 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      t59 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 98:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t61 = env21;
      t8 = env22;
      t2 = env23;
      t59 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 99:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      t64 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t61 = env22;
      t8 = env23;
      t2 = env24;
      t59 = env25;
      t9 = env26;
      t10 = env27;
      wA = env28;
      break;
    case 100:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      t66 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 101:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      t66 = env14;
      cp1 = env15;
      t68 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 102:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      t70 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 103:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      t70 = env15;
      cp2 = env16;
      t72 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 104:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      t12 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      t11 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 105:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      t12 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      t11 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 106:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      t12 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t11 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 107:
      t11 = env0;
      t12 = env1;
      i = env2;
      cp1 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      invIA = env17;
      wA = env18;
      invIB = env19;
      t2 = env20;
      t10 = env21;
      t5 = env22;
      break;
    case 108:
      t14 = env0;
      i = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      t11 = env11;
      t12 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 109:
      i = env0;
      cp1 = env1;
      t14 = env2;
      t11 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      invIA = env17;
      wA = env18;
      invIB = env19;
      t2 = env20;
      t10 = env21;
      t5 = env22;
      break;
    case 110:
      i = env0;
      t16 = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      cp1 = env11;
      t14 = env12;
      t11 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 111:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t14 = env13;
      t18 = env14;
      t19 = env15;
      wB = env16;
      t2 = env17;
      t7 = env18;
      t8 = env19;
      t9 = env20;
      wA = env21;
      t10 = env22;
      t1 = env23;
      break;
    case 112:
      i = env0;
      t21 = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      cp1 = env11;
      cp2 = env12;
      t6 = env13;
      t14 = env14;
      t18 = env15;
      t19 = env16;
      wB = env17;
      t2 = env18;
      t7 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t10 = env23;
      t1 = env24;
      break;
    case 113:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t14 = env13;
      t1 = env14;
      wB = env15;
      t2 = env16;
      t7 = env17;
      t8 = env18;
      t18 = env19;
      t21 = env20;
      t9 = env21;
      t10 = env22;
      wA = env23;
      break;
    case 114:
      i = env0;
      t23 = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      cp1 = env11;
      cp2 = env12;
      t6 = env13;
      t14 = env14;
      t1 = env15;
      wB = env16;
      t2 = env17;
      t7 = env18;
      t8 = env19;
      t18 = env20;
      t21 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 115:
      t25 = env0;
      t26 = env1;
      i = env2;
      cp1 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t10 = env17;
      invIB = env18;
      t2 = env19;
      t5 = env20;
      wA0 = env21;
      break;
    case 116:
      t25 = env0;
      t26 = env1;
      i = env2;
      cp1 = env3;
      cp2 = env4;
      t28 = env5;
      t6 = env6;
      t3 = env7;
      t1 = env8;
      t4 = env9;
      wB = env10;
      bodyA = env11;
      bodyB = env12;
      t8 = env13;
      t7 = env14;
      vA = env15;
      vB = env16;
      t9 = env17;
      t10 = env18;
      invIB = env19;
      t2 = env20;
      t5 = env21;
      wA0 = env22;
      break;
    case 117:
      t28 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t25 = env4;
      t6 = env5;
      t1 = env6;
      t3 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t10 = env17;
      invIB = env18;
      t2 = env19;
      t5 = env20;
      wA0 = env21;
      break;
    case 118:
      t28 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t30 = env4;
      t25 = env5;
      t6 = env6;
      t1 = env7;
      t3 = env8;
      t4 = env9;
      wB = env10;
      bodyA = env11;
      bodyB = env12;
      t8 = env13;
      t7 = env14;
      vA = env15;
      vB = env16;
      t9 = env17;
      t10 = env18;
      invIB = env19;
      t2 = env20;
      t5 = env21;
      wA0 = env22;
      break;
    case 119:
      i = env0;
      cp1 = env1;
      cp2 = env2;
      t28 = env3;
      t6 = env4;
      t32 = env5;
      t33 = env6;
      t3 = env7;
      t1 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t4 = env17;
      invIB = env18;
      t2 = env19;
      t10 = env20;
      t5 = env21;
      wA0 = env22;
      break;
    case 120:
      i = env0;
      t28 = env1;
      t3 = env2;
      t35 = env3;
      t33 = env4;
      t32 = env5;
      t4 = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      t10 = env22;
      wA0 = env23;
      break;
    case 121:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t28 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t35 = env12;
      t32 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t8 = env17;
      invIB = env18;
      t7 = env19;
      t10 = env20;
      t5 = env21;
      wA0 = env22;
      break;
    case 122:
      i = env0;
      t28 = env1;
      t3 = env2;
      t37 = env3;
      t4 = env4;
      t35 = env5;
      bodyA = env6;
      bodyB = env7;
      t32 = env8;
      vA = env9;
      vB = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      t10 = env22;
      wA0 = env23;
      break;
    case 123:
      t13 = env0;
      i = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      b = env13;
      t5 = env14;
      cp1 = env15;
      t11 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 124:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t15 = env21;
      t8 = env22;
      t2 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 125:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t15 = env21;
      t8 = env22;
      t17 = env23;
      t9 = env24;
      t2 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 126:
      i = env0;
      t15 = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      b = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t17 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 127:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      vn2 = env24;
      t10 = env25;
      wA = env26;
      t11 = env27;
      break;
    case 128:
      i = env0;
      cp1 = env1;
      cp2 = env2;
      t6 = env3;
      t11 = env4;
      t12 = env5;
      t3 = env6;
      t1 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      t8 = env11;
      t7 = env12;
      vA = env13;
      vB = env14;
      t9 = env15;
      invIA = env16;
      wA = env17;
      invIB = env18;
      t2 = env19;
      t10 = env20;
      t5 = env21;
      t4 = env22;
      break;
    case 129:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t14 = env12;
      t6 = env13;
      t11 = env14;
      t12 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 130:
      t7 = env0;
      i = env1;
      cp1 = env2;
      t2 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      t14 = env9;
      wB = env10;
      bodyA = env11;
      bodyB = env12;
      t8 = env13;
      vA = env14;
      vB = env15;
      t11 = env16;
      invIA = env17;
      t9 = env18;
      wA = env19;
      invIB = env20;
      t10 = env21;
      t5 = env22;
      break;
    case 131:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t16 = env12;
      t6 = env13;
      t1 = env14;
      t14 = env15;
      t7 = env16;
      t2 = env17;
      wB = env18;
      t8 = env19;
      t9 = env20;
      t11 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 132:
      t9 = env0;
      i = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      cp1 = env11;
      cp2 = env12;
      t6 = env13;
      t1 = env14;
      wB = env15;
      t2 = env16;
      t7 = env17;
      t8 = env18;
      t14 = env19;
      t18 = env20;
      t10 = env21;
      t19 = env22;
      wA = env23;
      break;
    case 133:
      t10 = env0;
      i = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      cp1 = env11;
      cp2 = env12;
      t6 = env13;
      t21 = env14;
      t1 = env15;
      wB = env16;
      t2 = env17;
      t7 = env18;
      t8 = env19;
      t14 = env20;
      t18 = env21;
      t19 = env22;
      wA = env23;
      t9 = env24;
      break;
    case 134:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t1 = env13;
      wB = env14;
      t7 = env15;
      t2 = env16;
      t8 = env17;
      t9 = env18;
      t14 = env19;
      t10 = env20;
      wA = env21;
      t21 = env22;
      t18 = env23;
      break;
    case 135:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t23 = env13;
      t1 = env14;
      wB = env15;
      t7 = env16;
      t2 = env17;
      t8 = env18;
      t9 = env19;
      t14 = env20;
      wA = env21;
      t10 = env22;
      t21 = env23;
      t18 = env24;
      break;
    case 136:
      i = env0;
      cp1 = env1;
      wA0 = env2;
      cp2 = env3;
      t25 = env4;
      t6 = env5;
      t26 = env6;
      t1 = env7;
      t3 = env8;
      t4 = env9;
      wB = env10;
      bodyA = env11;
      bodyB = env12;
      t8 = env13;
      t7 = env14;
      vA = env15;
      vB = env16;
      t9 = env17;
      t10 = env18;
      invIB = env19;
      t2 = env20;
      t5 = env21;
      break;
    case 137:
      t3 = env0;
      i = env1;
      cp1 = env2;
      wA0 = env3;
      cp2 = env4;
      t25 = env5;
      t6 = env6;
      t26 = env7;
      t1 = env8;
      t28 = env9;
      t4 = env10;
      wB = env11;
      bodyA = env12;
      bodyB = env13;
      t8 = env14;
      t7 = env15;
      vA = env16;
      vB = env17;
      t9 = env18;
      t10 = env19;
      invIB = env20;
      t2 = env21;
      t5 = env22;
      break;
    case 138:
      i = env0;
      cp1 = env1;
      wA0 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t28 = env7;
      t25 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t4 = env17;
      invIB = env18;
      t2 = env19;
      t10 = env20;
      t5 = env21;
      break;
    case 139:
      i = env0;
      cp1 = env1;
      wA0 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t28 = env7;
      t25 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t30 = env17;
      invIB = env18;
      t2 = env19;
      t10 = env20;
      t5 = env21;
      t4 = env22;
      break;
    case 140:
      t2 = env0;
      i = env1;
      cp1 = env2;
      wA0 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t28 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t32 = env17;
      t10 = env18;
      invIB = env19;
      t7 = env20;
      t33 = env21;
      t5 = env22;
      break;
    case 141:
      i = env0;
      wA0 = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      t28 = env6;
      vA = env7;
      vB = env8;
      t33 = env9;
      t32 = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t35 = env21;
      t9 = env22;
      t10 = env23;
      break;
    case 142:
      t7 = env0;
      i = env1;
      cp1 = env2;
      t2 = env3;
      wA0 = env4;
      cp2 = env5;
      t6 = env6;
      t3 = env7;
      t1 = env8;
      t4 = env9;
      wB = env10;
      bodyA = env11;
      bodyB = env12;
      t8 = env13;
      t28 = env14;
      vA = env15;
      vB = env16;
      t9 = env17;
      t10 = env18;
      invIB = env19;
      t35 = env20;
      t32 = env21;
      t5 = env22;
      break;
    case 143:
      i = env0;
      wA0 = env1;
      t3 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      t28 = env6;
      vA = env7;
      vB = env8;
      invIB = env9;
      t35 = env10;
      t32 = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t2 = env18;
      t37 = env19;
      t8 = env20;
      t7 = env21;
      t9 = env22;
      t10 = env23;
      break;
    case 144:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t11 = env21;
      t8 = env22;
      t2 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 145:
      i = env0;
      t13 = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      b = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t11 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 146:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      t10 = env24;
      wA = env25;
      t15 = env26;
      break;
    case 147:
      i = env0;
      t3 = env1;
      t4 = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      invIB = env11;
      b = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      a = env17;
      t1 = env18;
      wB = env19;
      t7 = env20;
      t2 = env21;
      t8 = env22;
      t9 = env23;
      t10 = env24;
      wA = env25;
      t15 = env26;
      t17 = env27;
      break;
    case 148:
      t17 = env0;
      i = env1;
      t15 = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      b = env14;
      t5 = env15;
      cp1 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 149:
      vn1 = env0;
      i = env1;
      t11 = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      b = env14;
      t5 = env15;
      cp1 = env16;
      cp2 = env17;
      t6 = env18;
      a = env19;
      t1 = env20;
      wB = env21;
      t7 = env22;
      t2 = env23;
      t8 = env24;
      t9 = env25;
      t10 = env26;
      wA = env27;
      break;
    case 150:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t4 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      t8 = env11;
      t7 = env12;
      vA = env13;
      t11 = env14;
      vB = env15;
      invIA = env16;
      t9 = env17;
      wA = env18;
      invIB = env19;
      t10 = env20;
      t12 = env21;
      t5 = env22;
      break;
    case 151:
      i = env0;
      t3 = env1;
      t14 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      cp1 = env11;
      cp2 = env12;
      t6 = env13;
      t1 = env14;
      wB = env15;
      t2 = env16;
      t7 = env17;
      t8 = env18;
      t11 = env19;
      t9 = env20;
      t12 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 152:
      t10 = env0;
      t2 = env1;
      i = env2;
      cp1 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      invIA = env17;
      wA = env18;
      invIB = env19;
      t14 = env20;
      t11 = env21;
      t5 = env22;
      break;
    case 153:
      i = env0;
      t3 = env1;
      t16 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      invIA = env8;
      invIB = env9;
      t5 = env10;
      cp1 = env11;
      cp2 = env12;
      t6 = env13;
      t1 = env14;
      wB = env15;
      t2 = env16;
      t7 = env17;
      t8 = env18;
      t9 = env19;
      t10 = env20;
      wA = env21;
      t14 = env22;
      t11 = env23;
      break;
    case 154:
      t14 = env0;
      t18 = env1;
      t19 = env2;
      i = env3;
      t3 = env4;
      t4 = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invIA = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 155:
      t14 = env0;
      t18 = env1;
      t19 = env2;
      i = env3;
      t3 = env4;
      t4 = env5;
      t21 = env6;
      bodyA = env7;
      bodyB = env8;
      vA = env9;
      vB = env10;
      invIA = env11;
      invIB = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t2 = env19;
      t7 = env20;
      t8 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 156:
      t14 = env0;
      i = env1;
      t21 = env2;
      t18 = env3;
      t3 = env4;
      t4 = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invIA = env10;
      invIB = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 157:
      t14 = env0;
      i = env1;
      t21 = env2;
      t18 = env3;
      t3 = env4;
      t4 = env5;
      bodyA = env6;
      bodyB = env7;
      t23 = env8;
      vA = env9;
      vB = env10;
      invIA = env11;
      invIB = env12;
      t5 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t9 = env22;
      wA = env23;
      t10 = env24;
      break;
    case 158:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t4 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      wA0 = env11;
      t8 = env12;
      vA = env13;
      vB = env14;
      t9 = env15;
      t26 = env16;
      t25 = env17;
      invIB = env18;
      t7 = env19;
      t10 = env20;
      t5 = env21;
      break;
    case 159:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t4 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      wA0 = env11;
      t8 = env12;
      vA = env13;
      vB = env14;
      t9 = env15;
      t26 = env16;
      t25 = env17;
      invIB = env18;
      t7 = env19;
      t10 = env20;
      t28 = env21;
      t5 = env22;
      break;
    case 160:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t4 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      wA0 = env11;
      t8 = env12;
      vA = env13;
      vB = env14;
      t9 = env15;
      t28 = env16;
      t25 = env17;
      invIB = env18;
      t7 = env19;
      t10 = env20;
      t5 = env21;
      break;
    case 161:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t4 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      wA0 = env11;
      t30 = env12;
      vA = env13;
      vB = env14;
      t9 = env15;
      t28 = env16;
      t25 = env17;
      invIB = env18;
      t7 = env19;
      t10 = env20;
      t8 = env21;
      t5 = env22;
      break;
    case 162:
      t32 = env0;
      t33 = env1;
      i = env2;
      cp1 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      wA0 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t8 = env17;
      invIB = env18;
      t2 = env19;
      t10 = env20;
      t5 = env21;
      t28 = env22;
      break;
    case 163:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      wA0 = env5;
      vA = env6;
      vB = env7;
      t35 = env8;
      invIB = env9;
      t5 = env10;
      t28 = env11;
      t32 = env12;
      t33 = env13;
      cp1 = env14;
      cp2 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t9 = env22;
      t10 = env23;
      break;
    case 164:
      t35 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t32 = env4;
      t6 = env5;
      t1 = env6;
      t3 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      wA0 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t8 = env17;
      invIB = env18;
      t2 = env19;
      t10 = env20;
      t5 = env21;
      t28 = env22;
      break;
    case 165:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      wA0 = env5;
      vA = env6;
      vB = env7;
      t37 = env8;
      invIB = env9;
      t5 = env10;
      t28 = env11;
      t35 = env12;
      cp1 = env13;
      t32 = env14;
      cp2 = env15;
      t6 = env16;
      t1 = env17;
      wB = env18;
      t7 = env19;
      t2 = env20;
      t8 = env21;
      t9 = env22;
      t10 = env23;
      break;
    case 166:
      i = env0;
      vn1 = env1;
      t3 = env2;
      t4 = env3;
      c = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invMassA = env9;
      invIA = env10;
      invMassB = env11;
      invIB = env12;
      b = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 167:
      i = env0;
      vn1 = env1;
      vn2 = env2;
      t3 = env3;
      t4 = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      vA = env8;
      vB = env9;
      invMassA = env10;
      invIA = env11;
      invMassB = env12;
      invIB = env13;
      t5 = env14;
      cp1 = env15;
      cp2 = env16;
      t6 = env17;
      a = env18;
      t1 = env19;
      wB = env20;
      t7 = env21;
      t2 = env22;
      t8 = env23;
      t9 = env24;
      t10 = env25;
      wA = env26;
      break;
    case 168:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      t3 = env5;
      t1 = env6;
      t11 = env7;
      wB = env8;
      bodyA = env9;
      bodyB = env10;
      t8 = env11;
      t12 = env12;
      vA = env13;
      vB = env14;
      t9 = env15;
      invIA = env16;
      wA = env17;
      invIB = env18;
      t7 = env19;
      t10 = env20;
      t5 = env21;
      t4 = env22;
      break;
    case 169:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t1 = env13;
      t11 = env14;
      t14 = env15;
      t7 = env16;
      t2 = env17;
      wB = env18;
      t8 = env19;
      t9 = env20;
      t12 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 170:
      t7 = env0;
      i = env1;
      cp1 = env2;
      t2 = env3;
      cp2 = env4;
      t6 = env5;
      t3 = env6;
      t1 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t14 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      invIA = env17;
      wA = env18;
      invIB = env19;
      t11 = env20;
      t10 = env21;
      t5 = env22;
      break;
    case 171:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t1 = env13;
      wB = env14;
      t7 = env15;
      t2 = env16;
      t8 = env17;
      t16 = env18;
      t11 = env19;
      t9 = env20;
      t14 = env21;
      wA = env22;
      t10 = env23;
      break;
    case 172:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t1 = env13;
      wB = env14;
      t2 = env15;
      t7 = env16;
      t8 = env17;
      t9 = env18;
      t10 = env19;
      wA = env20;
      t14 = env21;
      t18 = env22;
      t19 = env23;
      break;
    case 173:
      i = env0;
      t3 = env1;
      t4 = env2;
      bodyA = env3;
      bodyB = env4;
      vA = env5;
      vB = env6;
      invIA = env7;
      invIB = env8;
      t5 = env9;
      cp1 = env10;
      cp2 = env11;
      t6 = env12;
      t1 = env13;
      wB = env14;
      t7 = env15;
      t2 = env16;
      t8 = env17;
      t21 = env18;
      t9 = env19;
      wA = env20;
      t14 = env21;
      t18 = env22;
      t10 = env23;
      t19 = env24;
      break;
    case 174:
      t21 = env0;
      t18 = env1;
      i = env2;
      t3 = env3;
      t4 = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invIA = env9;
      invIB = env10;
      t5 = env11;
      cp1 = env12;
      cp2 = env13;
      t6 = env14;
      t1 = env15;
      wB = env16;
      t2 = env17;
      t7 = env18;
      t8 = env19;
      t9 = env20;
      wA = env21;
      t14 = env22;
      t10 = env23;
      break;
    case 175:
      t21 = env0;
      t18 = env1;
      i = env2;
      t3 = env3;
      t4 = env4;
      bodyA = env5;
      bodyB = env6;
      vA = env7;
      vB = env8;
      invIA = env9;
      invIB = env10;
      t5 = env11;
      cp1 = env12;
      cp2 = env13;
      t6 = env14;
      t1 = env15;
      wB = env16;
      t7 = env17;
      t2 = env18;
      t8 = env19;
      t23 = env20;
      t9 = env21;
      wA = env22;
      t14 = env23;
      t10 = env24;
      break;
    case 176:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      wA0 = env5;
      t25 = env6;
      t3 = env7;
      t26 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t4 = env17;
      invIB = env18;
      t1 = env19;
      t10 = env20;
      t5 = env21;
      break;
    case 177:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      wA0 = env5;
      t25 = env6;
      t3 = env7;
      t26 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t28 = env17;
      invIB = env18;
      t1 = env19;
      t10 = env20;
      t5 = env21;
      t4 = env22;
      break;
    case 178:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      wA0 = env5;
      t1 = env6;
      t3 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t28 = env12;
      t25 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t8 = env17;
      invIB = env18;
      t7 = env19;
      t10 = env20;
      t5 = env21;
      break;
    case 179:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      wA0 = env5;
      t1 = env6;
      t3 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t28 = env12;
      t25 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t30 = env17;
      t8 = env18;
      invIB = env19;
      t7 = env20;
      t10 = env21;
      t5 = env22;
      break;
    case 180:
      t2 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      wA0 = env5;
      t1 = env6;
      t3 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t28 = env17;
      t32 = env18;
      invIB = env19;
      t33 = env20;
      t10 = env21;
      t5 = env22;
      break;
    case 181:
      i = env0;
      t3 = env1;
      wA0 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      t28 = env8;
      t32 = env9;
      invIB = env10;
      t33 = env11;
      t5 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t2 = env18;
      t7 = env19;
      t8 = env20;
      t9 = env21;
      t10 = env22;
      t35 = env23;
      break;
    case 182:
      t32 = env0;
      i = env1;
      cp1 = env2;
      cp2 = env3;
      t6 = env4;
      wA0 = env5;
      t1 = env6;
      t3 = env7;
      t4 = env8;
      wB = env9;
      bodyA = env10;
      bodyB = env11;
      t8 = env12;
      t7 = env13;
      vA = env14;
      vB = env15;
      t9 = env16;
      t28 = env17;
      t10 = env18;
      invIB = env19;
      t2 = env20;
      t5 = env21;
      t35 = env22;
      break;
    case 183:
      i = env0;
      t3 = env1;
      wA0 = env2;
      t4 = env3;
      bodyA = env4;
      bodyB = env5;
      vA = env6;
      vB = env7;
      t28 = env8;
      invIB = env9;
      t5 = env10;
      t35 = env11;
      t32 = env12;
      cp1 = env13;
      cp2 = env14;
      t6 = env15;
      t1 = env16;
      wB = env17;
      t7 = env18;
      t2 = env19;
      t8 = env20;
      t9 = env21;
      t10 = env22;
      t37 = env23;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.tangent;
      var t2 = this.dv;
      var t3 = this.dv1;
      var t4 = this.dv2;
      var t5 = this.temp2;
      var t6 = this.x;
      var t7 = this.d;
      var t8 = this.P1;
      var t9 = this.P2;
      var t10 = this.temp1;
      var i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t11 = this.constraintCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t11))
                break L0;
              t11 = this.constraints;
              if (i >= t11.length)
                throw $.ioore(i);
              var c = t11[i];
              var bodyA = c.get$bodyA();
              var bodyB = c.get$bodyB();
              var wA = bodyA.get$angularVelocity();
            case 2:
              state0 = 0;
              var wB = bodyB.get$angularVelocity();
            case 3:
              state0 = 0;
              var vA = bodyA.get$linearVelocity();
              var vB = bodyB.get$linearVelocity();
              var invMassA = bodyA.get$invMass();
            case 4:
              state0 = 0;
              var invIA = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              var invMassB = bodyB.get$invMass();
            case 6:
              state0 = 0;
              var invIB = bodyB.get$invInertia();
            case 7:
              state0 = 0;
              var t17 = c.get$normal().get$y();
              if (typeof t17 !== 'number')
                throw $.iae(t17);
              t1.x = 1 * t17;
              var t18 = c.get$normal().get$x();
              if (typeof t18 !== 'number')
                throw $.iae(t18);
              t1.y = -1 * t18;
              var friction = c.get$friction();
            case 8:
              state0 = 0;
              var j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t11 = c.get$pointCount();
                    case 9:
                      state0 = 0;
                      if (!$.ltB(j, t11))
                        break L1;
                      t11 = c.get$points();
                    case 10:
                      state0 = 0;
                      var ccp = $.index(t11, j);
                      var a = ccp.get$rA();
                      t11 = $.neg(wB);
                      var t13 = ccp.get$rB().get$y();
                    case 11:
                      state0 = 0;
                      t13 = $.mul(t11, t13);
                      t11 = vB.get$x();
                    case 12:
                      state0 = 0;
                      t11 = $.add(t13, t11);
                      t13 = vA.get$x();
                    case 13:
                      state0 = 0;
                      t13 = $.sub(t11, t13);
                      t11 = a.get$y();
                    case 14:
                      state0 = 0;
                      t2.x = $.add(t13, $.mul(wA, t11));
                      t18 = ccp.get$rB().get$x();
                    case 15:
                      state0 = 0;
                      t18 = $.mul(wB, t18);
                      var t20 = vB.get$y();
                    case 16:
                      state0 = 0;
                      t20 = $.add(t18, t20);
                      t18 = vA.get$y();
                    case 17:
                      state0 = 0;
                      t18 = $.sub(t20, t18);
                      t20 = a.get$x();
                    case 18:
                      state0 = 0;
                      t2.y = $.sub(t18, $.mul(wA, t20));
                      var t24 = t2.x;
                    case 19:
                      state0 = 0;
                      var t26 = t1.x;
                    case 20:
                      state0 = 0;
                      t26 = $.mul(t24, t26);
                      t24 = t2.y;
                    case 21:
                      state0 = 0;
                      var t29 = t1.y;
                    case 22:
                      state0 = 0;
                      var vt = $.add(t26, $.mul(t24, t29));
                      t26 = ccp.get$tangentMass();
                    case 23:
                      state0 = 0;
                      var lambda = $.mul(t26, $.neg(vt));
                      t26 = ccp.get$normalImpulse();
                    case 24:
                      state0 = 0;
                      var maxFriction = $.mul(friction, t26);
                      t26 = ccp.get$tangentImpulse();
                    case 25:
                      state0 = 0;
                      t26 = $.add(t26, lambda);
                      var newImpulse = $.max($.neg(maxFriction), $.min(t26, maxFriction));
                      var t34 = ccp.get$tangentImpulse();
                      if (typeof t34 !== 'number')
                        throw $.iae(t34);
                      lambda = newImpulse - t34;
                      t34 = t1.x;
                    case 26:
                      state0 = 0;
                      var Px = $.mul(t34, lambda);
                      t34 = t1.y;
                    case 27:
                      state0 = 0;
                      var Py = $.mul(t34, lambda);
                      t34 = vA.get$x();
                    case 28:
                      state0 = 0;
                      vA.set$x($.sub(t34, $.mul(Px, invMassA)));
                      var t38 = vA.get$y();
                    case 29:
                      state0 = 0;
                      vA.set$y($.sub(t38, $.mul(Py, invMassA)));
                      var t40 = ccp.get$rA().get$x();
                    case 30:
                      state0 = 0;
                      t40 = $.mul(t40, Py);
                      var t42 = ccp.get$rA().get$y();
                    case 31:
                      state0 = 0;
                      wA = $.sub(wA, $.mul(invIA, $.sub(t40, $.mul(t42, Px))));
                      var t44 = vB.get$x();
                    case 32:
                      state0 = 0;
                      vB.set$x($.add(t44, $.mul(Px, invMassB)));
                      var t46 = vB.get$y();
                    case 33:
                      state0 = 0;
                      vB.set$y($.add(t46, $.mul(Py, invMassB)));
                      var t48 = ccp.get$rB().get$x();
                    case 34:
                      state0 = 0;
                      t48 = $.mul(t48, Py);
                      var t50 = ccp.get$rB().get$y();
                    case 35:
                      state0 = 0;
                      wB = $.add(wB, $.mul(invIB, $.sub(t48, $.mul(t50, Px))));
                      ccp.set$tangentImpulse(newImpulse);
                      ++j;
                  }
              t11 = c.get$pointCount();
            case 36:
              state0 = 0;
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
              if (state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 0 && $.eqB(t11, 1))
                switch (state0) {
                  case 0:
                    t11 = c.get$points();
                  case 37:
                    state0 = 0;
                    ccp = $.index(t11, 0);
                    var a1 = ccp.get$rA();
                    t11 = $.neg(wB);
                    t13 = ccp.get$rB().get$y();
                  case 38:
                    state0 = 0;
                    t13 = $.mul(t11, t13);
                    t11 = vB.get$x();
                  case 39:
                    state0 = 0;
                    t11 = $.add(t13, t11);
                    t13 = vA.get$x();
                  case 40:
                    state0 = 0;
                    t13 = $.sub(t11, t13);
                    t11 = a1.get$y();
                  case 41:
                    state0 = 0;
                    t2.x = $.add(t13, $.mul(wA, t11));
                    t18 = ccp.get$rB().get$x();
                  case 42:
                    state0 = 0;
                    t18 = $.mul(wB, t18);
                    t20 = vB.get$y();
                  case 43:
                    state0 = 0;
                    t20 = $.add(t18, t20);
                    t18 = vA.get$y();
                  case 44:
                    state0 = 0;
                    t18 = $.sub(t20, t18);
                    t20 = a1.get$x();
                  case 45:
                    state0 = 0;
                    t2.y = $.sub(t18, $.mul(wA, t20));
                    var b = c.get$normal();
                    t24 = t2.x;
                  case 46:
                    state0 = 0;
                    t26 = b.get$x();
                  case 47:
                    state0 = 0;
                    t26 = $.mul(t24, t26);
                    t24 = t2.y;
                  case 48:
                    state0 = 0;
                    t29 = b.get$y();
                  case 49:
                    state0 = 0;
                    var vn = $.add(t26, $.mul(t24, t29));
                    t26 = ccp.get$normalMass();
                  case 50:
                    state0 = 0;
                    t26 = $.neg(t26);
                    var t32 = ccp.get$velocityBias();
                  case 51:
                    state0 = 0;
                    lambda = $.mul(t26, $.sub(vn, t32));
                    t26 = ccp.get$normalImpulse();
                  case 52:
                    state0 = 0;
                    a = $.add(t26, lambda);
                    newImpulse = $.gtB(a, 0) ? a : 0;
                    t11 = ccp.get$normalImpulse();
                  case 53:
                    state0 = 0;
                    lambda = $.sub(newImpulse, t11);
                    t11 = c.get$normal().get$x();
                  case 54:
                    state0 = 0;
                    Px = $.mul(t11, lambda);
                    t11 = c.get$normal().get$y();
                  case 55:
                    state0 = 0;
                    Py = $.mul(t11, lambda);
                    t11 = vA.get$x();
                  case 56:
                    state0 = 0;
                    vA.set$x($.sub(t11, $.mul(Px, invMassA)));
                    var t16 = vA.get$y();
                  case 57:
                    state0 = 0;
                    vA.set$y($.sub(t16, $.mul(Py, invMassA)));
                    t18 = ccp.get$rA().get$x();
                  case 58:
                    state0 = 0;
                    t18 = $.mul(t18, Py);
                    t20 = ccp.get$rA().get$y();
                  case 59:
                    state0 = 0;
                    wA = $.sub(wA, $.mul(invIA, $.sub(t18, $.mul(t20, Px))));
                    var t22 = vB.get$x();
                  case 60:
                    state0 = 0;
                    vB.set$x($.add(t22, $.mul(Px, invMassB)));
                    t24 = vB.get$y();
                  case 61:
                    state0 = 0;
                    vB.set$y($.add(t24, $.mul(Py, invMassB)));
                    t26 = ccp.get$rB().get$x();
                  case 62:
                    state0 = 0;
                    t26 = $.mul(t26, Py);
                    var t28 = ccp.get$rB().get$y();
                  case 63:
                    state0 = 0;
                    wB = $.add(wB, $.mul(invIB, $.sub(t26, $.mul(t28, Px))));
                    ccp.set$normalImpulse(newImpulse);
                }
              else
                switch (state0) {
                  case 0:
                    t11 = c.get$points();
                  case 64:
                    state0 = 0;
                    var cp1 = $.index(t11, 0);
                    t11 = c.get$points();
                  case 65:
                    state0 = 0;
                    var cp2 = $.index(t11, 1);
                    a = $.Vector$(cp1.get$normalImpulse(), cp2.get$normalImpulse());
                    t11 = $.neg(wB);
                    var t14 = cp1.get$rB().get$y();
                  case 66:
                    state0 = 0;
                    t14 = $.mul(t11, t14);
                    t11 = vB.get$x();
                  case 67:
                    state0 = 0;
                    t11 = $.add(t14, t11);
                    t14 = vA.get$x();
                  case 68:
                    state0 = 0;
                    t14 = $.sub(t11, t14);
                    t11 = cp1.get$rA().get$y();
                  case 69:
                    state0 = 0;
                    t3.x = $.add(t14, $.mul(wA, t11));
                    var t19 = cp1.get$rB().get$x();
                  case 70:
                    state0 = 0;
                    t19 = $.mul(wB, t19);
                    var t21 = vB.get$y();
                  case 71:
                    state0 = 0;
                    t21 = $.add(t19, t21);
                    t19 = vA.get$y();
                  case 72:
                    state0 = 0;
                    t19 = $.sub(t21, t19);
                    t21 = cp1.get$rA().get$x();
                  case 73:
                    state0 = 0;
                    t3.y = $.sub(t19, $.mul(wA, t21));
                    var t25 = $.neg(wB);
                    t26 = cp2.get$rB().get$y();
                  case 74:
                    state0 = 0;
                    t26 = $.mul(t25, t26);
                    t25 = vB.get$x();
                  case 75:
                    state0 = 0;
                    t25 = $.add(t26, t25);
                    t26 = vA.get$x();
                  case 76:
                    state0 = 0;
                    t26 = $.sub(t25, t26);
                    t25 = cp2.get$rA().get$y();
                  case 77:
                    state0 = 0;
                    t4.x = $.add(t26, $.mul(wA, t25));
                    var t31 = cp2.get$rB().get$x();
                  case 78:
                    state0 = 0;
                    t31 = $.mul(wB, t31);
                    var t33 = vB.get$y();
                  case 79:
                    state0 = 0;
                    t33 = $.add(t31, t33);
                    t31 = vA.get$y();
                  case 80:
                    state0 = 0;
                    t31 = $.sub(t33, t31);
                    t33 = cp2.get$rA().get$x();
                  case 81:
                    state0 = 0;
                    t4.y = $.sub(t31, $.mul(wA, t33));
                    var t37 = t3.x;
                  case 82:
                    state0 = 0;
                    var t39 = c.get$normal().get$x();
                  case 83:
                    state0 = 0;
                    t39 = $.mul(t37, t39);
                    t37 = t3.y;
                  case 84:
                    state0 = 0;
                    t42 = c.get$normal().get$y();
                  case 85:
                    state0 = 0;
                    var vn1 = $.add(t39, $.mul(t37, t42));
                    t39 = t4.x;
                  case 86:
                    state0 = 0;
                    var t45 = c.get$normal().get$x();
                  case 87:
                    state0 = 0;
                    t45 = $.mul(t39, t45);
                    t39 = t4.y;
                  case 88:
                    state0 = 0;
                    t48 = c.get$normal().get$y();
                  case 89:
                    state0 = 0;
                    var vn2 = $.add(t45, $.mul(t39, t48));
                    t45 = cp1.get$velocityBias();
                  case 90:
                    state0 = 0;
                    t45 = $.sub(vn1, t45);
                    var t51 = cp2.get$velocityBias();
                  case 91:
                    state0 = 0;
                    b = $.Vector$(t45, $.sub(vn2, t51));
                    t45 = c.get$K().get$col1().get$x();
                  case 92:
                    state0 = 0;
                    var t54 = a.x;
                  case 93:
                    state0 = 0;
                    t54 = $.mul(t45, t54);
                    t45 = c.get$K().get$col2().get$x();
                  case 94:
                    state0 = 0;
                    var t57 = a.y;
                  case 95:
                    state0 = 0;
                    t5.x = $.add(t54, $.mul(t45, t57));
                    var t59 = c.get$K().get$col1().get$y();
                  case 96:
                    state0 = 0;
                    var t61 = a.x;
                  case 97:
                    state0 = 0;
                    t61 = $.mul(t59, t61);
                    t59 = c.get$K().get$col2().get$y();
                  case 98:
                    state0 = 0;
                    var t64 = a.y;
                  case 99:
                    state0 = 0;
                    t5.y = $.add(t61, $.mul(t59, t64));
                    var t66 = b.x;
                  case 100:
                    state0 = 0;
                    var t68 = t5.x;
                  case 101:
                    state0 = 0;
                    b.x = $.sub(t66, t68);
                    var t70 = b.y;
                  case 102:
                    state0 = 0;
                    var t72 = t5.y;
                  case 103:
                    state0 = 0;
                    b.y = $.sub(t70, t72);
                    t11 = c.get$normalMass();
                    var t12 = cp1.get$normalMass();
                  case 104:
                    state0 = 0;
                  default:
                    L2:
                      while (true)
                        switch (state0) {
                          case 0:
                            if (!true)
                              break L2;
                            $.Matrix22_mulMatrixAndVectorToOut(t11, b, t6);
                            t6.mulLocal$1(-1);
                            t11 = t6.get$x();
                          case 105:
                            state0 = 0;
                          case 106:
                            if (state0 === 106 || state0 === 0 && $.geB(t11, 0))
                              switch (state0) {
                                case 0:
                                  t11 = t6.get$y();
                                case 106:
                                  state0 = 0;
                                  t11 = $.geB(t11, 0);
                              }
                            else
                              t11 = false;
                          default:
                            if (state0 === 122 || state0 === 121 || state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 116 || state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 107 || state0 === 0 && t11)
                              switch (state0) {
                                case 0:
                                  t7.setFrom$1(t6).subLocal$1(a);
                                  t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
                                  t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
                                  t10.setFrom$1(t8).addLocal$1(t9);
                                  t5.setFrom$1(t10).mulLocal$1(invMassA);
                                  vA.subLocal$1(t5);
                                  t5.setFrom$1(t10).mulLocal$1(invMassB);
                                  vB.addLocal$1(t5);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 107:
                                  state0 = 0;
                                  t14 = t8.y;
                                case 108:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 109:
                                  state0 = 0;
                                  t16 = t8.x;
                                case 110:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 111:
                                  state0 = 0;
                                  t21 = t9.y;
                                case 112:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 113:
                                  state0 = 0;
                                  var t23 = t9.x;
                                case 114:
                                  state0 = 0;
                                  var wA0 = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 115:
                                  state0 = 0;
                                  t28 = t8.y;
                                case 116:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 117:
                                  state0 = 0;
                                  var t30 = t8.x;
                                case 118:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 119:
                                  state0 = 0;
                                  var t35 = t9.y;
                                case 120:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 121:
                                  state0 = 0;
                                  t37 = t9.x;
                                case 122:
                                  state0 = 0;
                                  var wB0 = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t6.get$x());
                                  cp2.set$normalImpulse(t6.get$y());
                                  wA = wA0;
                                  wB = wB0;
                                  break L2;
                              }
                            t11 = $.neg(t12);
                            t13 = b.x;
                          case 123:
                            state0 = 0;
                            t6.set$x($.mul(t11, t13));
                            t6.set$y(0);
                            var t15 = c.get$K().get$col1().get$y();
                          case 124:
                            state0 = 0;
                            t17 = t6.get$x();
                          case 125:
                            state0 = 0;
                            t17 = $.mul(t15, t17);
                            t15 = b.y;
                          case 126:
                            state0 = 0;
                            vn2 = $.add(t17, t15);
                            t11 = t6.get$x();
                          case 127:
                            state0 = 0;
                          case 128:
                          case 129:
                          case 130:
                          case 131:
                          case 132:
                          case 133:
                          case 134:
                          case 135:
                          case 136:
                          case 137:
                          case 138:
                          case 139:
                          case 140:
                          case 141:
                          case 142:
                          case 143:
                            if (state0 === 143 || state0 === 142 || state0 === 141 || state0 === 140 || state0 === 139 || state0 === 138 || state0 === 137 || state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 0 && $.geB(t11, 0) && $.geB(vn2, 0))
                              switch (state0) {
                                case 0:
                                  t7.setFrom$1(t6).subLocal$1(a);
                                  t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
                                  t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
                                  t10.setFrom$1(t8).addLocal$1(t9);
                                  t5.setFrom$1(t10).mulLocal$1(invMassA);
                                  vA.subLocal$1(t5);
                                  t5.setFrom$1(t10).mulLocal$1(invMassB);
                                  vB.addLocal$1(t5);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 128:
                                  state0 = 0;
                                  t14 = t8.y;
                                case 129:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 130:
                                  state0 = 0;
                                  t16 = t8.x;
                                case 131:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 132:
                                  state0 = 0;
                                  t21 = t9.y;
                                case 133:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 134:
                                  state0 = 0;
                                  t23 = t9.x;
                                case 135:
                                  state0 = 0;
                                  wA0 = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 136:
                                  state0 = 0;
                                  t28 = t8.y;
                                case 137:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 138:
                                  state0 = 0;
                                  t30 = t8.x;
                                case 139:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 140:
                                  state0 = 0;
                                  t35 = t9.y;
                                case 141:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 142:
                                  state0 = 0;
                                  t37 = t9.x;
                                case 143:
                                  state0 = 0;
                                  wB0 = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t6.get$x());
                                  cp2.set$normalImpulse(t6.get$y());
                                  wA = wA0;
                                  wB = wB0;
                                  break L2;
                              }
                            t6.set$x(0);
                            t11 = cp2.get$normalMass();
                          case 144:
                            state0 = 0;
                            t11 = $.neg(t11);
                            t13 = b.y;
                          case 145:
                            state0 = 0;
                            t6.set$y($.mul(t11, t13));
                            t15 = c.get$K().get$col2().get$x();
                          case 146:
                            state0 = 0;
                            t17 = t6.get$y();
                          case 147:
                            state0 = 0;
                            t17 = $.mul(t15, t17);
                            t15 = b.x;
                          case 148:
                            state0 = 0;
                            vn1 = $.add(t17, t15);
                            t11 = t6.get$y();
                          case 149:
                            state0 = 0;
                          case 150:
                          case 151:
                          case 152:
                          case 153:
                          case 154:
                          case 155:
                          case 156:
                          case 157:
                          case 158:
                          case 159:
                          case 160:
                          case 161:
                          case 162:
                          case 163:
                          case 164:
                          case 165:
                            if (state0 === 165 || state0 === 164 || state0 === 163 || state0 === 162 || state0 === 161 || state0 === 160 || state0 === 159 || state0 === 158 || state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 152 || state0 === 151 || state0 === 150 || state0 === 0 && $.geB(t11, 0) && $.geB(vn1, 0))
                              switch (state0) {
                                case 0:
                                  t7.setFrom$1(t6).subLocal$1(a);
                                  t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
                                  t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
                                  t10.setFrom$1(t8).addLocal$1(t9);
                                  t5.setFrom$1(t10).mulLocal$1(invMassA);
                                  vA.subLocal$1(t5);
                                  t5.setFrom$1(t10).mulLocal$1(invMassB);
                                  vB.addLocal$1(t5);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 150:
                                  state0 = 0;
                                  t14 = t8.y;
                                case 151:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 152:
                                  state0 = 0;
                                  t16 = t8.x;
                                case 153:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 154:
                                  state0 = 0;
                                  t21 = t9.y;
                                case 155:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 156:
                                  state0 = 0;
                                  t23 = t9.x;
                                case 157:
                                  state0 = 0;
                                  wA0 = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 158:
                                  state0 = 0;
                                  t28 = t8.y;
                                case 159:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 160:
                                  state0 = 0;
                                  t30 = t8.x;
                                case 161:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 162:
                                  state0 = 0;
                                  t35 = t9.y;
                                case 163:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 164:
                                  state0 = 0;
                                  t37 = t9.x;
                                case 165:
                                  state0 = 0;
                                  wB0 = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t6.get$x());
                                  cp2.set$normalImpulse(t6.get$y());
                                  wA = wA0;
                                  wB = wB0;
                                  break L2;
                              }
                            t6.set$x(0);
                            t6.set$y(0);
                            vn1 = b.x;
                          case 166:
                            state0 = 0;
                            vn2 = b.y;
                          case 167:
                            state0 = 0;
                          case 168:
                          case 169:
                          case 170:
                          case 171:
                          case 172:
                          case 173:
                          case 174:
                          case 175:
                          case 176:
                          case 177:
                          case 178:
                          case 179:
                          case 180:
                          case 181:
                          case 182:
                          case 183:
                            if (state0 === 183 || state0 === 182 || state0 === 181 || state0 === 180 || state0 === 179 || state0 === 178 || state0 === 177 || state0 === 176 || state0 === 175 || state0 === 174 || state0 === 173 || state0 === 172 || state0 === 171 || state0 === 170 || state0 === 169 || state0 === 168 || state0 === 0 && $.geB(vn1, 0) && $.geB(vn2, 0))
                              switch (state0) {
                                case 0:
                                  t7.setFrom$1(t6).subLocal$1(a);
                                  t8.setFrom$1(c.get$normal()).mulLocal$1(t7.x);
                                  t9.setFrom$1(c.get$normal()).mulLocal$1(t7.y);
                                  t10.setFrom$1(t8).addLocal$1(t9);
                                  t5.setFrom$1(t10).mulLocal$1(invMassA);
                                  vA.subLocal$1(t5);
                                  t5.setFrom$1(t10).mulLocal$1(invMassB);
                                  vB.addLocal$1(t5);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 168:
                                  state0 = 0;
                                  t14 = t8.y;
                                case 169:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 170:
                                  state0 = 0;
                                  t16 = t8.x;
                                case 171:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 172:
                                  state0 = 0;
                                  t21 = t9.y;
                                case 173:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 174:
                                  state0 = 0;
                                  t23 = t9.x;
                                case 175:
                                  state0 = 0;
                                  wA0 = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 176:
                                  state0 = 0;
                                  t28 = t8.y;
                                case 177:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 178:
                                  state0 = 0;
                                  t30 = t8.x;
                                case 179:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 180:
                                  state0 = 0;
                                  t35 = t9.y;
                                case 181:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 182:
                                  state0 = 0;
                                  t37 = t9.x;
                                case 183:
                                  state0 = 0;
                                  wB0 = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t6.get$x());
                                  cp2.set$normalImpulse(t6.get$y());
                                  wA = wA0;
                                  wB = wB0;
                                  break L2;
                              }
                            break L2;
                        }
                }
              bodyA.get$linearVelocity().setFrom$1(vA);
              bodyA.set$angularVelocity(wA);
              bodyB.get$linearVelocity().setFrom$1(vB);
              bodyB.set$angularVelocity(wB);
              ++i;
          }
  }
},
 storeImpulses$0: function() {
  for (var i = 0; $.ltB(i, this.constraintCount); ++i) {
    var t1 = this.constraints;
    if (i >= t1.length)
      throw $.ioore(i);
    var c = t1[i];
    var m = c.get$manifold();
    for (var j = 0; $.ltB(j, c.get$pointCount()); ++j) {
      t1 = $.index(c.get$points(), j).get$normalImpulse();
      $.index(m.get$points(), j).set$normalImpulse(t1);
      t1 = $.index(c.get$points(), j).get$tangentImpulse();
      $.index(m.get$points(), j).set$tangentImpulse(t1);
    }
  }
},
 solvePositionConstraints$1: function(baumgarte) {
  var psm = this.psolver;
  var normal = psm.normal;
  var point = psm.point;
  var t1 = this.rA;
  var t2 = this.rB;
  var t3 = this.P;
  var t4 = this.temp1;
  var i = 0;
  var minSeparation = 0;
  while (true) {
    var t5 = this.constraintCount;
    if (typeof t5 !== 'number')
      return this.solvePositionConstraints$1$bailout(1, baumgarte, t5, psm, normal, point, minSeparation, t1, t2, i, t3, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if (!(i < t5))
      break;
    t5 = this.constraints;
    if (i >= t5.length)
      throw $.ioore(i);
    var c = t5[i];
    var bodyA = c.get$bodyA();
    var bodyB = c.get$bodyB();
    t5 = bodyA.get$mass();
    if (typeof t5 !== 'number')
      return this.solvePositionConstraints$1$bailout(2, baumgarte, psm, normal, point, minSeparation, t1, t2, i, c, bodyA, t3, bodyB, t4, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var t7 = bodyA.get$invMass();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(3, baumgarte, psm, normal, point, minSeparation, t1, t2, i, c, bodyA, t3, bodyB, t4, t7, t5, 0, 0, 0, 0, 0, 0, 0, 0);
    var invMassA = t5 * t7;
    t7 = bodyA.get$invInertia();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(5, baumgarte, psm, normal, point, minSeparation, t1, t2, i, c, bodyA, t3, bodyB, t4, invMassA, t5, t7, 0, 0, 0, 0, 0, 0, 0);
    var invIA = t5 * t7;
    t7 = bodyB.get$mass();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(6, baumgarte, psm, normal, point, minSeparation, t1, t2, i, c, bodyA, t3, bodyB, t4, invMassA, invIA, t7, 0, 0, 0, 0, 0, 0, 0);
    var t10 = bodyB.get$invMass();
    if (typeof t10 !== 'number')
      return this.solvePositionConstraints$1$bailout(7, baumgarte, t10, psm, normal, point, minSeparation, t1, t2, i, c, bodyA, t3, bodyB, t4, invMassA, invIA, t7, 0, 0, 0, 0, 0, 0);
    var invMassB = t7 * t10;
    t10 = bodyB.get$invInertia();
    if (typeof t10 !== 'number')
      return this.solvePositionConstraints$1$bailout(9, baumgarte, invMassB, t7, t10, psm, normal, point, minSeparation, t1, t2, i, c, bodyA, t3, bodyB, t4, invMassA, invIA, 0, 0, 0, 0, 0);
    var invIB = t7 * t10;
    t5 = invMassA + invMassB;
    var j = 0;
    while (true) {
      var t6 = c.get$pointCount();
      if (typeof t6 !== 'number')
        return this.solvePositionConstraints$1$bailout(10, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, i, minSeparation, t6, c, bodyA, t3, t4, bodyB, invMassA, invIA, 0, 0, 0, 0);
      if (!(j < t6))
        break;
      psm.initialize$2(c, j);
      var separation = psm.separation;
      if (typeof separation !== 'number')
        return this.solvePositionConstraints$1$bailout(11, baumgarte, invMassB, psm, invIB, normal, separation, t1, j, t2, i, point, minSeparation, c, bodyA, t3, bodyB, t4, invMassA, invIA, 0, 0, 0, 0);
      t1.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
      t2.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
      minSeparation = $.min(minSeparation, separation);
      var C = $.max(-0.2, $.min(baumgarte * (separation + 0.005), 0));
      t7 = t1.x;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(12, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, t7, i, c, bodyA, t3, bodyB, t4, invMassA, C, invIA, 0, 0, 0);
      var t9 = normal.y;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(13, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, t7, t9, i, c, bodyA, t3, bodyB, t4, invMassA, C, invIA, 0, 0);
      t7 *= t9;
      var t11 = t1.y;
      if (typeof t11 !== 'number')
        return this.solvePositionConstraints$1$bailout(14, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, t11, i, c, bodyA, t3, bodyB, t4, invMassA, C, invIA, t7, 0, 0);
      var t13 = normal.x;
      if (typeof t13 !== 'number')
        return this.solvePositionConstraints$1$bailout(15, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, t11, t13, i, c, bodyA, t3, bodyB, t4, invMassA, C, invIA, t7, 0);
      var rnA = t7 - t11 * t13;
      t7 = t2.x;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(16, baumgarte, invMassB, rnA, invIB, normal, psm, t1, j, t2, minSeparation, point, i, t7, c, bodyA, t3, bodyB, t4, invMassA, C, invIA, 0, 0);
      t9 = t7 * t9;
      t7 = t2.y;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(18, baumgarte, invMassB, rnA, invIB, normal, psm, t1, j, t2, minSeparation, t9, i, point, t7, c, bodyA, t3, bodyB, t4, invMassA, C, invIA, 0);
      var rnB = t9 - t7 * t13;
      var K = t5 + invIA * rnA * rnA + invIB * rnB * rnB;
      var impulse = K > 0 ? -C / K : 0;
      t3.setFrom$1(normal).mulLocal$1(impulse);
      t4.setFrom$1(t3).mulLocal$1(invMassA);
      bodyA.get$sweep().get$center().subLocal$1(t4);
      t6 = bodyA.get$sweep();
      t7 = t6.get$angle();
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(20, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, i, c, bodyA, t3, bodyB, t4, t6, t7, invMassA, invIA, 0, 0, 0);
      t9 = t1.x;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(21, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, i, c, bodyA, t3, bodyB, t4, t6, t7, invMassA, t9, invIA, 0, 0);
      t11 = t3.y;
      if (typeof t11 !== 'number')
        return this.solvePositionConstraints$1$bailout(22, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, i, c, bodyA, t3, bodyB, t4, t6, t7, invMassA, t9, t11, invIA, 0);
      t11 = t9 * t11;
      t9 = t1.y;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(23, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, i, c, bodyA, bodyB, t6, t4, t3, t7, invMassA, t11, invIA, t9, 0);
      var t14 = t3.x;
      if (typeof t14 !== 'number')
        return this.solvePositionConstraints$1$bailout(24, baumgarte, i, minSeparation, c, bodyA, bodyB, t6, t7, invMassA, t11, invIA, invMassB, psm, invIB, normal, point, t1, j, t2, t3, t4, t9, t14);
      t6.set$angle(t7 - invIA * (t11 - t9 * t14));
      bodyA.synchronizeTransform$0();
      t4.setFrom$1(t3).mulLocal$1(invMassB);
      bodyB.get$sweep().get$center().addLocal$1(t4);
      t6 = bodyB.get$sweep();
      var t16 = t6.get$angle();
      if (typeof t16 !== 'number')
        return this.solvePositionConstraints$1$bailout(25, baumgarte, invMassB, psm, invIB, normal, point, t1, j, t2, minSeparation, i, t6, t16, c, bodyA, t3, bodyB, t4, invMassA, invIA, 0, 0, 0);
      var t18 = t2.x;
      if (typeof t18 !== 'number')
        return this.solvePositionConstraints$1$bailout(26, baumgarte, invMassB, t18, invIB, normal, psm, t1, j, t2, minSeparation, point, i, t6, t16, c, bodyA, t3, bodyB, t4, invMassA, invIA, 0, 0);
      var t20 = t3.y;
      if (typeof t20 !== 'number')
        return this.solvePositionConstraints$1$bailout(27, baumgarte, invMassB, t18, invIB, t20, psm, normal, j, t2, minSeparation, point, t1, i, t6, t16, c, bodyA, t3, bodyB, t4, invMassA, invIA, 0);
      t20 = t18 * t20;
      t18 = t2.y;
      if (typeof t18 !== 'number')
        return this.solvePositionConstraints$1$bailout(28, baumgarte, invMassB, psm, invIB, t18, point, normal, j, t2, minSeparation, t1, i, t6, t16, c, bodyA, t3, bodyB, t4, t20, invMassA, invIA, 0);
      var t23 = t3.x;
      if (typeof t23 !== 'number')
        return this.solvePositionConstraints$1$bailout(29, baumgarte, i, t18, t23, minSeparation, c, bodyA, bodyB, invMassA, invIA, invMassB, psm, invIB, normal, point, t1, j, t2, t6, t16, t3, t4, t20);
      t6.set$angle(t16 + invIB * (t20 - t18 * t23));
      bodyB.synchronizeTransform$0();
      ++j;
    }
    ++i;
  }
  return minSeparation >= -0.0075;
},
 solvePositionConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22) {
  switch (state0) {
    case 1:
      var baumgarte = env0;
      t5 = env1;
      psm = env2;
      normal = env3;
      point = env4;
      minSeparation = env5;
      t1 = env6;
      t2 = env7;
      i = env8;
      t3 = env9;
      t4 = env10;
      break;
    case 2:
      baumgarte = env0;
      psm = env1;
      normal = env2;
      point = env3;
      minSeparation = env4;
      t1 = env5;
      t2 = env6;
      i = env7;
      c = env8;
      bodyA = env9;
      t3 = env10;
      bodyB = env11;
      t4 = env12;
      t5 = env13;
      break;
    case 3:
      baumgarte = env0;
      psm = env1;
      normal = env2;
      point = env3;
      minSeparation = env4;
      t1 = env5;
      t2 = env6;
      i = env7;
      c = env8;
      bodyA = env9;
      t3 = env10;
      bodyB = env11;
      t4 = env12;
      t7 = env13;
      t5 = env14;
      break;
    case 4:
      baumgarte = env0;
      psm = env1;
      normal = env2;
      point = env3;
      minSeparation = env4;
      t1 = env5;
      t2 = env6;
      i = env7;
      c = env8;
      bodyA = env9;
      t3 = env10;
      bodyB = env11;
      t4 = env12;
      invMassA = env13;
      t7 = env14;
      break;
    case 5:
      baumgarte = env0;
      psm = env1;
      normal = env2;
      point = env3;
      minSeparation = env4;
      t1 = env5;
      t2 = env6;
      i = env7;
      c = env8;
      bodyA = env9;
      t3 = env10;
      bodyB = env11;
      t4 = env12;
      invMassA = env13;
      t7 = env14;
      t9 = env15;
      break;
    case 6:
      baumgarte = env0;
      psm = env1;
      normal = env2;
      point = env3;
      minSeparation = env4;
      t1 = env5;
      t2 = env6;
      i = env7;
      c = env8;
      bodyA = env9;
      t3 = env10;
      bodyB = env11;
      t4 = env12;
      invMassA = env13;
      invIA = env14;
      t9 = env15;
      break;
    case 7:
      baumgarte = env0;
      t11 = env1;
      psm = env2;
      normal = env3;
      point = env4;
      minSeparation = env5;
      t1 = env6;
      t2 = env7;
      i = env8;
      c = env9;
      bodyA = env10;
      t3 = env11;
      bodyB = env12;
      t4 = env13;
      invMassA = env14;
      invIA = env15;
      t9 = env16;
      break;
    case 8:
      baumgarte = env0;
      invMassB = env1;
      t11 = env2;
      psm = env3;
      normal = env4;
      point = env5;
      minSeparation = env6;
      t1 = env7;
      t2 = env8;
      i = env9;
      c = env10;
      bodyA = env11;
      t3 = env12;
      bodyB = env13;
      t4 = env14;
      invMassA = env15;
      invIA = env16;
      break;
    case 9:
      baumgarte = env0;
      invMassB = env1;
      t11 = env2;
      t13 = env3;
      psm = env4;
      normal = env5;
      point = env6;
      minSeparation = env7;
      t1 = env8;
      t2 = env9;
      i = env10;
      c = env11;
      bodyA = env12;
      t3 = env13;
      bodyB = env14;
      t4 = env15;
      invMassA = env16;
      invIA = env17;
      break;
    case 10:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      i = env9;
      minSeparation = env10;
      t5 = env11;
      c = env12;
      bodyA = env13;
      t3 = env14;
      t4 = env15;
      bodyB = env16;
      invMassA = env17;
      invIA = env18;
      break;
    case 11:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      separation = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      i = env9;
      point = env10;
      minSeparation = env11;
      c = env12;
      bodyA = env13;
      t3 = env14;
      bodyB = env15;
      t4 = env16;
      invMassA = env17;
      invIA = env18;
      break;
    case 12:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      t7 = env10;
      i = env11;
      c = env12;
      bodyA = env13;
      t3 = env14;
      bodyB = env15;
      t4 = env16;
      invMassA = env17;
      C = env18;
      invIA = env19;
      break;
    case 13:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      t7 = env10;
      t9 = env11;
      i = env12;
      c = env13;
      bodyA = env14;
      t3 = env15;
      bodyB = env16;
      t4 = env17;
      invMassA = env18;
      C = env19;
      invIA = env20;
      break;
    case 14:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      t7 = env10;
      i = env11;
      c = env12;
      bodyA = env13;
      t3 = env14;
      bodyB = env15;
      t4 = env16;
      invMassA = env17;
      C = env18;
      invIA = env19;
      t9 = env20;
      break;
    case 15:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      t7 = env10;
      t12 = env11;
      i = env12;
      c = env13;
      bodyA = env14;
      t3 = env15;
      bodyB = env16;
      t4 = env17;
      invMassA = env18;
      C = env19;
      invIA = env20;
      t9 = env21;
      break;
    case 16:
      baumgarte = env0;
      invMassB = env1;
      rnA = env2;
      invIB = env3;
      normal = env4;
      psm = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      point = env10;
      i = env11;
      t9 = env12;
      c = env13;
      bodyA = env14;
      t3 = env15;
      bodyB = env16;
      t4 = env17;
      invMassA = env18;
      C = env19;
      invIA = env20;
      break;
    case 17:
      baumgarte = env0;
      invMassB = env1;
      rnA = env2;
      invIB = env3;
      normal = env4;
      psm = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      point = env10;
      i = env11;
      t9 = env12;
      t15 = env13;
      c = env14;
      bodyA = env15;
      t3 = env16;
      bodyB = env17;
      t4 = env18;
      invMassA = env19;
      C = env20;
      invIA = env21;
      break;
    case 18:
      baumgarte = env0;
      invMassB = env1;
      rnA = env2;
      invIB = env3;
      normal = env4;
      psm = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      t15 = env10;
      i = env11;
      point = env12;
      t9 = env13;
      c = env14;
      bodyA = env15;
      t3 = env16;
      bodyB = env17;
      t4 = env18;
      invMassA = env19;
      C = env20;
      invIA = env21;
      break;
    case 19:
      baumgarte = env0;
      i = env1;
      minSeparation = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      invMassA = env6;
      C = env7;
      invIA = env8;
      invMassB = env9;
      rnA = env10;
      invIB = env11;
      normal = env12;
      psm = env13;
      t1 = env14;
      j = env15;
      t2 = env16;
      t15 = env17;
      point = env18;
      t9 = env19;
      t18 = env20;
      t3 = env21;
      t4 = env22;
      break;
    case 20:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      i = env10;
      c = env11;
      bodyA = env12;
      t3 = env13;
      bodyB = env14;
      t4 = env15;
      t5 = env16;
      t6 = env17;
      invMassA = env18;
      invIA = env19;
      break;
    case 21:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      i = env10;
      c = env11;
      bodyA = env12;
      t3 = env13;
      bodyB = env14;
      t4 = env15;
      t5 = env16;
      t6 = env17;
      invMassA = env18;
      t8 = env19;
      invIA = env20;
      break;
    case 22:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      i = env10;
      c = env11;
      bodyA = env12;
      t3 = env13;
      bodyB = env14;
      t4 = env15;
      t5 = env16;
      t6 = env17;
      invMassA = env18;
      t8 = env19;
      t10 = env20;
      invIA = env21;
      break;
    case 23:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      i = env10;
      c = env11;
      bodyA = env12;
      bodyB = env13;
      t5 = env14;
      t4 = env15;
      t3 = env16;
      t6 = env17;
      invMassA = env18;
      t10 = env19;
      invIA = env20;
      t8 = env21;
      break;
    case 24:
      baumgarte = env0;
      i = env1;
      minSeparation = env2;
      c = env3;
      bodyA = env4;
      bodyB = env5;
      t5 = env6;
      t6 = env7;
      invMassA = env8;
      t10 = env9;
      invIA = env10;
      invMassB = env11;
      psm = env12;
      invIB = env13;
      normal = env14;
      point = env15;
      t1 = env16;
      j = env17;
      t2 = env18;
      t3 = env19;
      t4 = env20;
      t8 = env21;
      t13 = env22;
      break;
    case 25:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      normal = env4;
      point = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      i = env10;
      t5 = env11;
      t15 = env12;
      c = env13;
      bodyA = env14;
      t3 = env15;
      bodyB = env16;
      t4 = env17;
      invMassA = env18;
      invIA = env19;
      break;
    case 26:
      baumgarte = env0;
      invMassB = env1;
      t17 = env2;
      invIB = env3;
      normal = env4;
      psm = env5;
      t1 = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      point = env10;
      i = env11;
      t5 = env12;
      t15 = env13;
      c = env14;
      bodyA = env15;
      t3 = env16;
      bodyB = env17;
      t4 = env18;
      invMassA = env19;
      invIA = env20;
      break;
    case 27:
      baumgarte = env0;
      invMassB = env1;
      t17 = env2;
      invIB = env3;
      t19 = env4;
      psm = env5;
      normal = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      point = env10;
      t1 = env11;
      i = env12;
      t5 = env13;
      t15 = env14;
      c = env15;
      bodyA = env16;
      t3 = env17;
      bodyB = env18;
      t4 = env19;
      invMassA = env20;
      invIA = env21;
      break;
    case 28:
      baumgarte = env0;
      invMassB = env1;
      psm = env2;
      invIB = env3;
      t17 = env4;
      point = env5;
      normal = env6;
      j = env7;
      t2 = env8;
      minSeparation = env9;
      t1 = env10;
      i = env11;
      t5 = env12;
      t15 = env13;
      c = env14;
      bodyA = env15;
      t3 = env16;
      bodyB = env17;
      t4 = env18;
      t19 = env19;
      invMassA = env20;
      invIA = env21;
      break;
    case 29:
      baumgarte = env0;
      i = env1;
      t17 = env2;
      t22 = env3;
      minSeparation = env4;
      c = env5;
      bodyA = env6;
      bodyB = env7;
      invMassA = env8;
      invIA = env9;
      invMassB = env10;
      psm = env11;
      invIB = env12;
      normal = env13;
      point = env14;
      t1 = env15;
      j = env16;
      t2 = env17;
      t5 = env18;
      t15 = env19;
      t3 = env20;
      t4 = env21;
      t19 = env22;
      break;
  }
  switch (state0) {
    case 0:
      var psm = this.psolver;
      var normal = psm.normal;
      var point = psm.point;
      var t1 = this.rA;
      var t2 = this.rB;
      var t3 = this.P;
      var t4 = this.temp1;
      var i = 0;
      var minSeparation = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t5 = this.constraintCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t5))
                break L0;
              t5 = this.constraints;
              if (i >= t5.length)
                throw $.ioore(i);
              var c = t5[i];
              var bodyA = c.get$bodyA();
              var bodyB = c.get$bodyB();
              t5 = bodyA.get$mass();
            case 2:
              state0 = 0;
              var t7 = bodyA.get$invMass();
            case 3:
              state0 = 0;
              var invMassA = $.mul(t5, t7);
              t7 = bodyA.get$mass();
            case 4:
              state0 = 0;
              var t9 = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              var invIA = $.mul(t7, t9);
              t9 = bodyB.get$mass();
            case 6:
              state0 = 0;
              var t11 = bodyB.get$invMass();
            case 7:
              state0 = 0;
              var invMassB = $.mul(t9, t11);
              t11 = bodyB.get$mass();
            case 8:
              state0 = 0;
              var t13 = bodyB.get$invInertia();
            case 9:
              state0 = 0;
              var invIB = $.mul(t11, t13);
              var j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t5 = c.get$pointCount();
                    case 10:
                      state0 = 0;
                      if (!$.ltB(j, t5))
                        break L1;
                      psm.initialize$2(c, j);
                      var separation = psm.separation;
                    case 11:
                      state0 = 0;
                      t1.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
                      t2.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
                      minSeparation = $.min(minSeparation, separation);
                      var t6 = $.add(separation, 0.005);
                      if (typeof t6 !== 'number')
                        throw $.iae(t6);
                      var C = $.max(-0.2, $.min(baumgarte * t6, 0));
                      t7 = t1.x;
                    case 12:
                      state0 = 0;
                      t9 = normal.y;
                    case 13:
                      state0 = 0;
                      t9 = $.mul(t7, t9);
                      t7 = t1.y;
                    case 14:
                      state0 = 0;
                      var t12 = normal.x;
                    case 15:
                      state0 = 0;
                      var rnA = $.sub(t9, $.mul(t7, t12));
                      t9 = t2.x;
                    case 16:
                      state0 = 0;
                      var t15 = normal.y;
                    case 17:
                      state0 = 0;
                      t15 = $.mul(t9, t15);
                      t9 = t2.y;
                    case 18:
                      state0 = 0;
                      var t18 = normal.x;
                    case 19:
                      state0 = 0;
                      var rnB = $.sub(t15, $.mul(t9, t18));
                      var K = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rnA), rnA)), $.mul($.mul(invIB, rnB), rnB));
                      if ($.gtB(K, 0)) {
                        t5 = -C;
                        if (typeof K !== 'number')
                          throw $.iae(K);
                        var impulse = t5 / K;
                      } else
                        impulse = 0;
                      t3.setFrom$1(normal).mulLocal$1(impulse);
                      t4.setFrom$1(t3).mulLocal$1(invMassA);
                      bodyA.get$sweep().get$center().subLocal$1(t4);
                      t5 = bodyA.get$sweep();
                      t6 = t5.get$angle();
                    case 20:
                      state0 = 0;
                      var t8 = t1.x;
                    case 21:
                      state0 = 0;
                      var t10 = t3.y;
                    case 22:
                      state0 = 0;
                      t10 = $.mul(t8, t10);
                      t8 = t1.y;
                    case 23:
                      state0 = 0;
                      t13 = t3.x;
                    case 24:
                      state0 = 0;
                      t5.set$angle($.sub(t6, $.mul(invIA, $.sub(t10, $.mul(t8, t13)))));
                      bodyA.synchronizeTransform$0();
                      t4.setFrom$1(t3).mulLocal$1(invMassB);
                      bodyB.get$sweep().get$center().addLocal$1(t4);
                      t5 = bodyB.get$sweep();
                      t15 = t5.get$angle();
                    case 25:
                      state0 = 0;
                      var t17 = t2.x;
                    case 26:
                      state0 = 0;
                      var t19 = t3.y;
                    case 27:
                      state0 = 0;
                      t19 = $.mul(t17, t19);
                      t17 = t2.y;
                    case 28:
                      state0 = 0;
                      var t22 = t3.x;
                    case 29:
                      state0 = 0;
                      t5.set$angle($.add(t15, $.mul(invIB, $.sub(t19, $.mul(t17, t22)))));
                      bodyB.synchronizeTransform$0();
                      ++j;
                  }
              ++i;
          }
      return minSeparation >= -0.0075;
  }
},
 ContactSolver$0: function() {
  for (var i = 0; t1 = this.constraints, i < t1.length; ++i) {
    var t2 = $.ContactConstraint$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  var t1;
}
};

$$.PositionSolverManifold = {"":
 ["normal?", "point", "separation", "pointA", "pointB", "temp", "planePoint", "clipPoint"],
 "super": "Object",
 initialize$2: function(cc, index) {
  switch (cc.get$type()) {
    case 0:
      var t1 = cc.get$bodyA();
      var t2 = cc.get$localPoint();
      var t3 = this.pointA;
      t1.getWorldPointToOut$2(t2, t3);
      t2 = cc.get$bodyB();
      t1 = $.index(cc.get$points(), 0).get$localPoint();
      var t4 = this.pointB;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = $.gtB($.MathBox_distanceSquared(t3, t4), 1.4208639999999999e-14);
      t2 = this.normal;
      if (t1) {
        t2.setFrom$1(t4).subLocal$1(t3);
        t2.normalize$0();
      } else
        t2.setCoords$2(1, 0);
      this.point.setFrom$1(t3).addLocal$1(t4).mulLocal$1(0.5);
      t1 = this.temp;
      t1.setFrom$1(t4).subLocal$1(t3);
      t3 = this.normal;
      this.separation = $.sub($.add($.mul(t1.x, t3.x), $.mul(t1.y, t3.y)), cc.get$radius());
      break;
    case 1:
      t1 = cc.get$bodyA();
      t2 = cc.get$localNormal();
      t3 = this.normal;
      t1.getWorldVectorToOut$2(t2, t3);
      t2 = cc.get$bodyA();
      t1 = cc.get$localPoint();
      t4 = this.planePoint;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = cc.get$bodyB();
      t2 = $.index(cc.get$points(), index).get$localPoint();
      var t5 = this.clipPoint;
      t1.getWorldPointToOut$2(t2, t5);
      t2 = this.temp;
      t2.setFrom$1(t5).subLocal$1(t4);
      this.separation = $.sub($.add($.mul(t2.x, t3.x), $.mul(t2.y, t3.y)), cc.get$radius());
      this.point.setFrom$1(t5);
      break;
    case 2:
      t1 = cc.get$bodyB();
      t2 = cc.get$localNormal();
      t3 = this.normal;
      t1.getWorldVectorToOut$2(t2, t3);
      t2 = cc.get$bodyB();
      t1 = cc.get$localPoint();
      t4 = this.planePoint;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = cc.get$bodyA();
      t2 = $.index(cc.get$points(), index).get$localPoint();
      t5 = this.clipPoint;
      t1.getWorldPointToOut$2(t2, t5);
      t2 = this.temp;
      t2.setFrom$1(t5).subLocal$1(t4);
      this.separation = $.sub($.add($.mul(t2.x, t3.x), $.mul(t2.y, t3.y)), cc.get$radius());
      this.point.setFrom$1(t5);
      t3.negateLocal$0();
      break;
  }
}
};

$$.PolygonAndCircleContact = {"":
 ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(1, fA.get$type(), null);
  $.Expect_equals(0, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collidePolygonAndCircle$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.PolygonContact = {"":
 ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(1, fA.get$type(), null);
  $.Expect_equals(1, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collidePolygons$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.TimeOfImpactSolver = {"":
 ["constraints", "count?", "toiBody", "psm", "rA?", "rB?", "P", "temp"],
 "super": "Object",
 initialize$3: function(contacts, argCount, argToiBody) {
  this.count = argCount;
  this.toiBody = argToiBody;
  var t1 = this.count;
  var t2 = this.constraints;
  var t3 = t2.length;
  if (t1 >= t3) {
    this.constraints = $.ListImplementation_List($.max(t1, t3 * 2));
    $.setRange$3(this.constraints, 0, t2.length, t2);
    for (var i = t2.length; t1 = this.constraints, i < t1.length; ++i) {
      t2 = $.TimeOfImpactConstraint$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  for (t1 = contacts.length, i = 0; i < this.count; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    var contact = contacts[i];
    var fixtureA = contact.get$fixtureA();
    var fixtureB = contact.get$fixtureB();
    var shapeA = fixtureA.get$shape();
    var shapeB = fixtureB.get$shape();
    var radiusA = shapeA.get$radius();
    var radiusB = shapeB.get$radius();
    var bodyA = fixtureA.get$body();
    var bodyB = fixtureB.get$body();
    var manifold = contact.get$manifold();
    t2 = this.constraints;
    if (i >= t2.length)
      throw $.ioore(i);
    var constraint = t2[i];
    constraint.set$bodyA(bodyA);
    constraint.set$bodyB(bodyB);
    constraint.get$localNormal().setFrom$1(manifold.get$localNormal());
    constraint.get$localPoint().setFrom$1(manifold.get$localPoint());
    constraint.set$type(manifold.get$type());
    constraint.set$pointCount(manifold.get$pointCount());
    constraint.set$radius($.add(radiusA, radiusB));
    for (var j = 0; $.ltB(j, constraint.get$pointCount()); ++j) {
      var cp = $.index(manifold.get$points(), j);
      $.indexSet(constraint.get$localPoints(), j, cp.get$localPoint());
    }
  }
},
 solve$1: function(baumgarte) {
  for (var t1 = this.psm, normal = t1.normal, point = t1.point, t2 = this.rA, t3 = this.rB, t4 = this.P, t5 = this.temp, i = 0, minSeparation = 0; i < this.count; ++i) {
    var t6 = this.constraints;
    if (i >= t6.length)
      throw $.ioore(i);
    var c = t6[i];
    var bodyA = c.get$bodyA();
    var bodyB = c.get$bodyB();
    var massA = bodyA.get$mass();
    if (typeof massA !== 'number')
      return this.solve$1$bailout(1, baumgarte, i, minSeparation, t5, t4, t1, bodyA, normal, c, point, bodyB, massA, t2, t3, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var massB = bodyB.get$mass();
    if (typeof massB !== 'number')
      return this.solve$1$bailout(2, baumgarte, i, minSeparation, t5, t4, t1, bodyA, normal, c, point, bodyB, massA, t2, t3, massB, 0, 0, 0, 0, 0, 0, 0, 0);
    if ($.eqB(bodyA, this.toiBody))
      massB = 0;
    else
      massA = 0;
    t6 = bodyA.get$invMass();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(3, baumgarte, massA, massB, t6, i, minSeparation, t4, t5, t1, bodyA, normal, bodyB, point, c, t2, t3, 0, 0, 0, 0, 0, 0, 0);
    var invMassA = massA * t6;
    t6 = bodyA.get$invInertia();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(4, baumgarte, massA, massB, invMassA, i, t6, minSeparation, t4, t5, t1, bodyA, normal, bodyB, point, c, t2, t3, 0, 0, 0, 0, 0, 0);
    var invIA = massA * t6;
    t6 = bodyB.get$invMass();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(5, baumgarte, massB, invMassA, i, minSeparation, t4, t5, invIA, t6, t1, bodyA, normal, bodyB, point, c, t2, t3, 0, 0, 0, 0, 0, 0);
    var invMassB = massB * t6;
    t6 = bodyB.get$invInertia();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(6, baumgarte, massB, invMassA, i, minSeparation, t4, t5, invMassB, t6, invIA, t1, bodyA, normal, bodyB, point, c, t2, t3, 0, 0, 0, 0, 0);
    var invIB = massB * t6;
    t6 = invMassA + invMassB;
    var j = 0;
    while (true) {
      var t7 = c.get$pointCount();
      if (typeof t7 !== 'number')
        return this.solve$1$bailout(7, baumgarte, invMassA, i, t4, t5, invMassB, invIA, invIB, j, t1, bodyA, normal, bodyB, point, minSeparation, c, t2, t3, t7, 0, 0, 0, 0);
      if (!(j < t7))
        break;
      t1.initialize$2(c, j);
      var separation = t1.separation;
      if (typeof separation !== 'number')
        return this.solve$1$bailout(8, baumgarte, invMassA, i, t4, t5, invMassB, invIA, invIB, j, t1, bodyA, normal, bodyB, point, minSeparation, separation, t2, t3, c, 0, 0, 0, 0);
      t2.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
      t3.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
      minSeparation = $.min(minSeparation, separation);
      var C = $.max(-0.2, $.min(baumgarte * (separation + 0.005), 0));
      var t8 = t2.x;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(9, baumgarte, invMassA, i, C, t4, t5, invMassB, invIA, invIB, j, t1, bodyA, bodyB, normal, point, minSeparation, c, t2, t3, t8, 0, 0, 0);
      var t10 = normal.y;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(10, baumgarte, invMassA, i, C, t4, t5, invMassB, invIA, invIB, j, t1, bodyA, bodyB, normal, point, minSeparation, c, t2, t3, t8, t10, 0, 0);
      t8 *= t10;
      var t12 = t2.y;
      if (typeof t12 !== 'number')
        return this.solve$1$bailout(11, t12, baumgarte, invMassA, i, C, t4, t5, invMassB, t8, invIA, invIB, j, t1, bodyA, normal, bodyB, point, minSeparation, c, t2, t3, 0, 0);
      var t14 = normal.x;
      if (typeof t14 !== 'number')
        return this.solve$1$bailout(12, t12, t14, baumgarte, invMassA, i, C, t4, t5, invMassB, t8, invIA, invIB, j, t1, bodyA, normal, bodyB, point, minSeparation, c, t2, t3, 0);
      var rnA = t8 - t12 * t14;
      t8 = t3.x;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(13, baumgarte, t8, invMassA, i, C, t4, t5, invMassB, invIA, invIB, j, rnA, t1, bodyA, normal, bodyB, point, minSeparation, c, t2, t3, 0, 0);
      t10 = t8 * t10;
      t8 = t3.y;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(15, baumgarte, invMassA, t8, C, t4, t5, invMassB, i, invIA, invIB, j, rnA, t1, bodyA, normal, bodyB, t10, minSeparation, c, t2, t3, point, 0);
      var rnB = t10 - t8 * t14;
      var K = t6 + invIA * rnA * rnA + invIB * rnB * rnB;
      var impulse = K > 0 ? -C / K : 0;
      t4.setFrom$1(normal).mulLocal$1(impulse);
      t5.setFrom$1(t4).mulLocal$1(invMassA);
      bodyA.get$sweep().get$center().subLocal$1(t5);
      t7 = bodyA.get$sweep();
      t8 = t7.get$angle();
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(17, baumgarte, t7, t8, invMassA, i, invIA, t4, t5, invMassB, invIB, j, t1, bodyA, bodyB, normal, point, minSeparation, c, t2, t3, 0, 0, 0);
      t10 = t2.x;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(18, baumgarte, t7, t8, invMassA, i, invIA, t4, t5, invMassB, invIB, t10, j, t1, bodyA, bodyB, normal, point, minSeparation, c, t2, t3, 0, 0);
      t12 = t4.y;
      if (typeof t12 !== 'number')
        return this.solve$1$bailout(19, baumgarte, t7, t8, invMassA, i, t4, t5, invMassB, invIB, t12, t10, j, t1, bodyA, bodyB, invIA, point, minSeparation, normal, t2, t3, c, 0);
      t12 = t10 * t12;
      t10 = t2.y;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(20, baumgarte, t7, t8, invMassA, i, t4, t5, t12, invMassB, invIB, t10, j, t1, bodyA, bodyB, invIA, point, minSeparation, normal, t2, t3, c, 0);
      var t15 = t4.x;
      if (typeof t15 !== 'number')
        return this.solve$1$bailout(21, baumgarte, i, t4, t5, t10, t15, c, bodyA, bodyB, minSeparation, t7, t8, invMassA, invIA, t12, invMassB, invIB, j, t1, normal, point, t2, t3);
      t7.set$angle(t8 - invIA * (t12 - t10 * t15));
      bodyA.synchronizeTransform$0();
      t5.setFrom$1(t4).mulLocal$1(invMassB);
      bodyB.get$sweep().get$center().addLocal$1(t5);
      t7 = bodyB.get$sweep();
      var t17 = t7.get$angle();
      if (typeof t17 !== 'number')
        return this.solve$1$bailout(22, t17, baumgarte, invMassA, i, t4, t5, invMassB, invIB, j, t1, bodyA, bodyB, invIA, point, minSeparation, normal, t2, t3, c, t7, 0, 0, 0);
      var t19 = t3.x;
      if (typeof t19 !== 'number')
        return this.solve$1$bailout(23, t17, baumgarte, invMassA, i, t4, t5, invMassB, invIB, j, t1, bodyA, bodyB, t19, point, minSeparation, normal, t2, t3, invIA, c, t7, 0, 0);
      var t21 = t4.y;
      if (typeof t21 !== 'number')
        return this.solve$1$bailout(24, t17, baumgarte, invMassA, i, t4, t5, t2, invMassB, invIB, j, t1, bodyA, bodyB, t19, t21, minSeparation, normal, point, t3, invIA, c, t7, 0);
      t21 = t19 * t21;
      t19 = t3.y;
      if (typeof t19 !== 'number')
        return this.solve$1$bailout(25, t17, baumgarte, invMassA, t21, i, t4, t5, invMassB, invIB, j, t1, bodyA, bodyB, invIA, point, minSeparation, t19, t2, normal, t3, c, t7, 0);
      var t24 = t4.x;
      if (typeof t24 !== 'number')
        return this.solve$1$bailout(26, t17, baumgarte, invMassA, t21, i, t4, t5, t2, invMassB, invIB, j, t1, bodyA, bodyB, invIA, point, minSeparation, t19, t24, normal, t3, c, t7);
      t7.set$angle(t17 + invIB * (t21 - t19 * t24));
      bodyB.synchronizeTransform$0();
      ++j;
    }
  }
  return minSeparation >= -0.0075;
},
 solve$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22) {
  switch (state0) {
    case 1:
      var baumgarte = env0;
      i = env1;
      minSeparation = env2;
      t5 = env3;
      t4 = env4;
      t1 = env5;
      bodyA = env6;
      normal = env7;
      c = env8;
      point = env9;
      bodyB = env10;
      massA = env11;
      t2 = env12;
      t3 = env13;
      break;
    case 2:
      baumgarte = env0;
      i = env1;
      minSeparation = env2;
      t5 = env3;
      t4 = env4;
      t1 = env5;
      bodyA = env6;
      normal = env7;
      c = env8;
      point = env9;
      bodyB = env10;
      massA = env11;
      t2 = env12;
      t3 = env13;
      massB = env14;
      break;
    case 3:
      baumgarte = env0;
      massA = env1;
      massB = env2;
      t6 = env3;
      i = env4;
      minSeparation = env5;
      t4 = env6;
      t5 = env7;
      t1 = env8;
      bodyA = env9;
      normal = env10;
      bodyB = env11;
      point = env12;
      c = env13;
      t2 = env14;
      t3 = env15;
      break;
    case 4:
      baumgarte = env0;
      massA = env1;
      massB = env2;
      invMassA = env3;
      i = env4;
      t6 = env5;
      minSeparation = env6;
      t4 = env7;
      t5 = env8;
      t1 = env9;
      bodyA = env10;
      normal = env11;
      bodyB = env12;
      point = env13;
      c = env14;
      t2 = env15;
      t3 = env16;
      break;
    case 5:
      baumgarte = env0;
      massB = env1;
      invMassA = env2;
      i = env3;
      minSeparation = env4;
      t4 = env5;
      t5 = env6;
      invIA = env7;
      t6 = env8;
      t1 = env9;
      bodyA = env10;
      normal = env11;
      bodyB = env12;
      point = env13;
      c = env14;
      t2 = env15;
      t3 = env16;
      break;
    case 6:
      baumgarte = env0;
      massB = env1;
      invMassA = env2;
      i = env3;
      minSeparation = env4;
      t4 = env5;
      t5 = env6;
      invMassB = env7;
      t6 = env8;
      invIA = env9;
      t1 = env10;
      bodyA = env11;
      normal = env12;
      bodyB = env13;
      point = env14;
      c = env15;
      t2 = env16;
      t3 = env17;
      break;
    case 7:
      baumgarte = env0;
      invMassA = env1;
      i = env2;
      t4 = env3;
      t5 = env4;
      invMassB = env5;
      invIA = env6;
      invIB = env7;
      j = env8;
      t1 = env9;
      bodyA = env10;
      normal = env11;
      bodyB = env12;
      point = env13;
      minSeparation = env14;
      c = env15;
      t2 = env16;
      t3 = env17;
      t6 = env18;
      break;
    case 8:
      baumgarte = env0;
      invMassA = env1;
      i = env2;
      t4 = env3;
      t5 = env4;
      invMassB = env5;
      invIA = env6;
      invIB = env7;
      j = env8;
      t1 = env9;
      bodyA = env10;
      normal = env11;
      bodyB = env12;
      point = env13;
      minSeparation = env14;
      separation = env15;
      t2 = env16;
      t3 = env17;
      c = env18;
      break;
    case 9:
      baumgarte = env0;
      invMassA = env1;
      i = env2;
      C = env3;
      t4 = env4;
      t5 = env5;
      invMassB = env6;
      invIA = env7;
      invIB = env8;
      j = env9;
      t1 = env10;
      bodyA = env11;
      bodyB = env12;
      normal = env13;
      point = env14;
      minSeparation = env15;
      c = env16;
      t2 = env17;
      t3 = env18;
      t8 = env19;
      break;
    case 10:
      baumgarte = env0;
      invMassA = env1;
      i = env2;
      C = env3;
      t4 = env4;
      t5 = env5;
      invMassB = env6;
      invIA = env7;
      invIB = env8;
      j = env9;
      t1 = env10;
      bodyA = env11;
      bodyB = env12;
      normal = env13;
      point = env14;
      minSeparation = env15;
      c = env16;
      t2 = env17;
      t3 = env18;
      t8 = env19;
      t10 = env20;
      break;
    case 11:
      t8 = env0;
      baumgarte = env1;
      invMassA = env2;
      i = env3;
      C = env4;
      t4 = env5;
      t5 = env6;
      invMassB = env7;
      t10 = env8;
      invIA = env9;
      invIB = env10;
      j = env11;
      t1 = env12;
      bodyA = env13;
      normal = env14;
      bodyB = env15;
      point = env16;
      minSeparation = env17;
      c = env18;
      t2 = env19;
      t3 = env20;
      break;
    case 12:
      t8 = env0;
      t13 = env1;
      baumgarte = env2;
      invMassA = env3;
      i = env4;
      C = env5;
      t4 = env6;
      t5 = env7;
      invMassB = env8;
      t10 = env9;
      invIA = env10;
      invIB = env11;
      j = env12;
      t1 = env13;
      bodyA = env14;
      normal = env15;
      bodyB = env16;
      point = env17;
      minSeparation = env18;
      c = env19;
      t2 = env20;
      t3 = env21;
      break;
    case 13:
      baumgarte = env0;
      t10 = env1;
      invMassA = env2;
      i = env3;
      C = env4;
      t4 = env5;
      t5 = env6;
      invMassB = env7;
      invIA = env8;
      invIB = env9;
      j = env10;
      rnA = env11;
      t1 = env12;
      bodyA = env13;
      normal = env14;
      bodyB = env15;
      point = env16;
      minSeparation = env17;
      c = env18;
      t2 = env19;
      t3 = env20;
      break;
    case 14:
      baumgarte = env0;
      t10 = env1;
      t16 = env2;
      invMassA = env3;
      i = env4;
      C = env5;
      t4 = env6;
      t5 = env7;
      invMassB = env8;
      invIA = env9;
      invIB = env10;
      j = env11;
      rnA = env12;
      t1 = env13;
      bodyA = env14;
      normal = env15;
      bodyB = env16;
      point = env17;
      minSeparation = env18;
      c = env19;
      t2 = env20;
      t3 = env21;
      break;
    case 15:
      baumgarte = env0;
      invMassA = env1;
      t10 = env2;
      C = env3;
      t4 = env4;
      t5 = env5;
      invMassB = env6;
      i = env7;
      invIA = env8;
      invIB = env9;
      j = env10;
      rnA = env11;
      t1 = env12;
      bodyA = env13;
      normal = env14;
      bodyB = env15;
      t16 = env16;
      minSeparation = env17;
      c = env18;
      t2 = env19;
      t3 = env20;
      point = env21;
      break;
    case 16:
      baumgarte = env0;
      t10 = env1;
      t19 = env2;
      i = env3;
      t4 = env4;
      t5 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      minSeparation = env9;
      invMassA = env10;
      C = env11;
      invIA = env12;
      invMassB = env13;
      invIB = env14;
      j = env15;
      rnA = env16;
      t1 = env17;
      normal = env18;
      t16 = env19;
      point = env20;
      t2 = env21;
      t3 = env22;
      break;
    case 17:
      baumgarte = env0;
      t6 = env1;
      t7 = env2;
      invMassA = env3;
      i = env4;
      invIA = env5;
      t4 = env6;
      t5 = env7;
      invMassB = env8;
      invIB = env9;
      j = env10;
      t1 = env11;
      bodyA = env12;
      bodyB = env13;
      normal = env14;
      point = env15;
      minSeparation = env16;
      c = env17;
      t2 = env18;
      t3 = env19;
      break;
    case 18:
      baumgarte = env0;
      t6 = env1;
      t7 = env2;
      invMassA = env3;
      i = env4;
      invIA = env5;
      t4 = env6;
      t5 = env7;
      invMassB = env8;
      invIB = env9;
      t9 = env10;
      j = env11;
      t1 = env12;
      bodyA = env13;
      bodyB = env14;
      normal = env15;
      point = env16;
      minSeparation = env17;
      c = env18;
      t2 = env19;
      t3 = env20;
      break;
    case 19:
      baumgarte = env0;
      t6 = env1;
      t7 = env2;
      invMassA = env3;
      i = env4;
      t4 = env5;
      t5 = env6;
      invMassB = env7;
      invIB = env8;
      t11 = env9;
      t9 = env10;
      j = env11;
      t1 = env12;
      bodyA = env13;
      bodyB = env14;
      invIA = env15;
      point = env16;
      minSeparation = env17;
      normal = env18;
      t2 = env19;
      t3 = env20;
      c = env21;
      break;
    case 20:
      baumgarte = env0;
      t6 = env1;
      t7 = env2;
      invMassA = env3;
      i = env4;
      t4 = env5;
      t5 = env6;
      t11 = env7;
      invMassB = env8;
      invIB = env9;
      t9 = env10;
      j = env11;
      t1 = env12;
      bodyA = env13;
      bodyB = env14;
      invIA = env15;
      point = env16;
      minSeparation = env17;
      normal = env18;
      t2 = env19;
      t3 = env20;
      c = env21;
      break;
    case 21:
      baumgarte = env0;
      i = env1;
      t4 = env2;
      t5 = env3;
      t9 = env4;
      t14 = env5;
      c = env6;
      bodyA = env7;
      bodyB = env8;
      minSeparation = env9;
      t6 = env10;
      t7 = env11;
      invMassA = env12;
      invIA = env13;
      t11 = env14;
      invMassB = env15;
      invIB = env16;
      j = env17;
      t1 = env18;
      normal = env19;
      point = env20;
      t2 = env21;
      t3 = env22;
      break;
    case 22:
      t16 = env0;
      baumgarte = env1;
      invMassA = env2;
      i = env3;
      t4 = env4;
      t5 = env5;
      invMassB = env6;
      invIB = env7;
      j = env8;
      t1 = env9;
      bodyA = env10;
      bodyB = env11;
      invIA = env12;
      point = env13;
      minSeparation = env14;
      normal = env15;
      t2 = env16;
      t3 = env17;
      c = env18;
      t6 = env19;
      break;
    case 23:
      t16 = env0;
      baumgarte = env1;
      invMassA = env2;
      i = env3;
      t4 = env4;
      t5 = env5;
      invMassB = env6;
      invIB = env7;
      j = env8;
      t1 = env9;
      bodyA = env10;
      bodyB = env11;
      t18 = env12;
      point = env13;
      minSeparation = env14;
      normal = env15;
      t2 = env16;
      t3 = env17;
      invIA = env18;
      c = env19;
      t6 = env20;
      break;
    case 24:
      t16 = env0;
      baumgarte = env1;
      invMassA = env2;
      i = env3;
      t4 = env4;
      t5 = env5;
      t2 = env6;
      invMassB = env7;
      invIB = env8;
      j = env9;
      t1 = env10;
      bodyA = env11;
      bodyB = env12;
      t18 = env13;
      t20 = env14;
      minSeparation = env15;
      normal = env16;
      point = env17;
      t3 = env18;
      invIA = env19;
      c = env20;
      t6 = env21;
      break;
    case 25:
      t16 = env0;
      baumgarte = env1;
      invMassA = env2;
      t20 = env3;
      i = env4;
      t4 = env5;
      t5 = env6;
      invMassB = env7;
      invIB = env8;
      j = env9;
      t1 = env10;
      bodyA = env11;
      bodyB = env12;
      invIA = env13;
      point = env14;
      minSeparation = env15;
      t18 = env16;
      t2 = env17;
      normal = env18;
      t3 = env19;
      c = env20;
      t6 = env21;
      break;
    case 26:
      t16 = env0;
      baumgarte = env1;
      invMassA = env2;
      t20 = env3;
      i = env4;
      t4 = env5;
      t5 = env6;
      t2 = env7;
      invMassB = env8;
      invIB = env9;
      j = env10;
      t1 = env11;
      bodyA = env12;
      bodyB = env13;
      invIA = env14;
      point = env15;
      minSeparation = env16;
      t18 = env17;
      t23 = env18;
      normal = env19;
      t3 = env20;
      c = env21;
      t6 = env22;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.psm;
      var normal = t1.normal;
      var point = t1.point;
      var t2 = this.rA;
      var t3 = this.rB;
      var t4 = this.P;
      var t5 = this.temp;
      var i = 0;
      var minSeparation = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < this.count))
                break L0;
              var t6 = this.constraints;
              if (i >= t6.length)
                throw $.ioore(i);
              var c = t6[i];
              var bodyA = c.get$bodyA();
              var bodyB = c.get$bodyB();
              var massA = bodyA.get$mass();
            case 1:
              state0 = 0;
              var massB = bodyB.get$mass();
            case 2:
              state0 = 0;
              if ($.eqB(bodyA, this.toiBody))
                massB = 0;
              else
                massA = 0;
              t6 = bodyA.get$invMass();
            case 3:
              state0 = 0;
              var invMassA = $.mul(massA, t6);
              t6 = bodyA.get$invInertia();
            case 4:
              state0 = 0;
              var invIA = $.mul(massA, t6);
              t6 = bodyB.get$invMass();
            case 5:
              state0 = 0;
              var invMassB = $.mul(massB, t6);
              t6 = bodyB.get$invInertia();
            case 6:
              state0 = 0;
              var invIB = $.mul(massB, t6);
              var j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t6 = c.get$pointCount();
                    case 7:
                      state0 = 0;
                      if (!$.ltB(j, t6))
                        break L1;
                      t1.initialize$2(c, j);
                      var separation = t1.separation;
                    case 8:
                      state0 = 0;
                      t2.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
                      t3.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
                      minSeparation = $.min(minSeparation, separation);
                      var t7 = $.add(separation, 0.005);
                      if (typeof t7 !== 'number')
                        throw $.iae(t7);
                      var C = $.max(-0.2, $.min(baumgarte * t7, 0));
                      var t8 = t2.x;
                    case 9:
                      state0 = 0;
                      var t10 = normal.y;
                    case 10:
                      state0 = 0;
                      t10 = $.mul(t8, t10);
                      t8 = t2.y;
                    case 11:
                      state0 = 0;
                      var t13 = normal.x;
                    case 12:
                      state0 = 0;
                      var rnA = $.sub(t10, $.mul(t8, t13));
                      t10 = t3.x;
                    case 13:
                      state0 = 0;
                      var t16 = normal.y;
                    case 14:
                      state0 = 0;
                      t16 = $.mul(t10, t16);
                      t10 = t3.y;
                    case 15:
                      state0 = 0;
                      var t19 = normal.x;
                    case 16:
                      state0 = 0;
                      var rnB = $.sub(t16, $.mul(t10, t19));
                      var K = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rnA), rnA)), $.mul($.mul(invIB, rnB), rnB));
                      if ($.gtB(K, 0)) {
                        t6 = -C;
                        if (typeof K !== 'number')
                          throw $.iae(K);
                        var impulse = t6 / K;
                      } else
                        impulse = 0;
                      t4.setFrom$1(normal).mulLocal$1(impulse);
                      t5.setFrom$1(t4).mulLocal$1(invMassA);
                      bodyA.get$sweep().get$center().subLocal$1(t5);
                      t6 = bodyA.get$sweep();
                      t7 = t6.get$angle();
                    case 17:
                      state0 = 0;
                      var t9 = t2.x;
                    case 18:
                      state0 = 0;
                      var t11 = t4.y;
                    case 19:
                      state0 = 0;
                      t11 = $.mul(t9, t11);
                      t9 = t2.y;
                    case 20:
                      state0 = 0;
                      var t14 = t4.x;
                    case 21:
                      state0 = 0;
                      t6.set$angle($.sub(t7, $.mul(invIA, $.sub(t11, $.mul(t9, t14)))));
                      bodyA.synchronizeTransform$0();
                      t5.setFrom$1(t4).mulLocal$1(invMassB);
                      bodyB.get$sweep().get$center().addLocal$1(t5);
                      t6 = bodyB.get$sweep();
                      t16 = t6.get$angle();
                    case 22:
                      state0 = 0;
                      var t18 = t3.x;
                    case 23:
                      state0 = 0;
                      var t20 = t4.y;
                    case 24:
                      state0 = 0;
                      t20 = $.mul(t18, t20);
                      t18 = t3.y;
                    case 25:
                      state0 = 0;
                      var t23 = t4.x;
                    case 26:
                      state0 = 0;
                      t6.set$angle($.add(t16, $.mul(invIB, $.sub(t20, $.mul(t18, t23)))));
                      bodyB.synchronizeTransform$0();
                      ++j;
                  }
              ++i;
          }
      return minSeparation >= -0.0075;
  }
},
 TimeOfImpactSolver$0: function() {
  for (var i = 0; t1 = this.constraints, i < t1.length; ++i) {
    var t2 = $.TimeOfImpactConstraint$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  var t1;
}
};

$$.TimeOfImpactSolverManifold = {"":
 ["normal?", "point", "separation", "pointA", "pointB", "temp", "planePoint", "clipPoint"],
 "super": "Object",
 initialize$2: function(cc, index) {
  switch (cc.get$type()) {
    case 0:
      var t1 = this.pointA;
      t1.setFrom$1(cc.get$bodyA().getWorldPoint$1(cc.get$localPoint()));
      var t2 = this.pointB;
      t2.setFrom$1(cc.get$bodyB().getWorldPoint$1($.index(cc.get$localPoints(), 0)));
      var t3 = $.gtB($.MathBox_distanceSquared(t1, t2), 1.4208639999999999e-14);
      var t4 = this.normal;
      if (t3) {
        t4.setFrom$1(t2).subLocal$1(t1);
        t4.normalize$0();
      } else
        t4.setCoords$2(1, 0);
      this.point.setFrom$1(t1).addLocal$1(t2).mulLocal$1(0.5);
      t3 = this.temp;
      t3.setFrom$1(t2).subLocal$1(t1);
      t1 = this.normal;
      this.separation = $.sub($.add($.mul(t3.x, t1.x), $.mul(t3.y, t1.y)), cc.get$radius());
      break;
    case 1:
      t1 = this.normal;
      t1.setFrom$1(cc.get$bodyA().getWorldVector$1(cc.get$localNormal()));
      t2 = this.planePoint;
      t2.setFrom$1(cc.get$bodyA().getWorldPoint$1(cc.get$localPoint()));
      t3 = this.clipPoint;
      t3.setFrom$1(cc.get$bodyB().getWorldPoint$1($.index(cc.get$localPoints(), index)));
      t4 = this.temp;
      t4.setFrom$1(t3).subLocal$1(t2);
      this.separation = $.sub($.add($.mul(t4.x, t1.x), $.mul(t4.y, t1.y)), cc.get$radius());
      this.point.setFrom$1(t3);
      break;
    case 2:
      t1 = this.normal;
      t1.setFrom$1(cc.get$bodyB().getWorldVector$1(cc.get$localNormal()));
      t2 = this.planePoint;
      t2.setFrom$1(cc.get$bodyB().getWorldPoint$1(cc.get$localPoint()));
      t3 = this.clipPoint;
      t3.setFrom$1(cc.get$bodyA().getWorldPoint$1($.index(cc.get$localPoints(), index)));
      t4 = this.temp;
      t4.setFrom$1(t3).subLocal$1(t2);
      this.separation = $.sub($.add($.mul(t4.x, t1.x), $.mul(t4.y, t1.y)), cc.get$radius());
      this.point.setFrom$1(t3);
      t1.negateLocal$0();
      break;
  }
}
};

$$.TimeOfImpactConstraint = {"":
 ["localPoints?", "localNormal?", "localPoint?", "type=", "radius=", "pointCount=", "bodyA=", "bodyB="],
 "super": "Object",
 setFrom$1: function(argOther) {
  for (var t1 = this.localPoints, t2 = t1.length, i = 0; i < t2; ++i) {
    var t3 = t1[i];
    var t4 = argOther.get$localPoints();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(1, argOther, t1, t3, i, t4, t2);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
  }
  this.localNormal.setFrom$1(argOther.get$localNormal());
  this.localPoint.setFrom$1(argOther.get$localPoint());
  this.type = argOther.get$type();
  this.radius = argOther.get$radius();
  this.pointCount = argOther.get$pointCount();
  this.bodyA = argOther.get$bodyA();
  this.bodyB = argOther.get$bodyB();
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      var argOther = env0;
      t1 = env1;
      t3 = env2;
      i = env3;
      t4 = env4;
      t2 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.localPoints;
      var t2 = t1.length;
      var i = 0;
    case 1:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < t2))
                break L0;
              var t3 = t1[i];
              var t4 = argOther.get$localPoints();
            case 1:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
      this.localNormal.setFrom$1(argOther.get$localNormal());
      this.localPoint.setFrom$1(argOther.get$localPoint());
      this.type = argOther.get$type();
      this.radius = argOther.get$radius();
      this.pointCount = argOther.get$pointCount();
      this.bodyA = argOther.get$bodyA();
      this.bodyB = argOther.get$bodyB();
  }
},
 TimeOfImpactConstraint$0: function() {
  for (var t1 = this.localPoints, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.Joint = {"":
 ["type=", "_prev=", "_lib2_next=", "edgeA?", "edgeB?", "bodyA=", "bodyB=", "islandFlag=", "collideConnected?", "userData="],
 "super": "Object",
 getAnchorA$1: function(argOut) {
},
 getAnchorB$1: function(argOut) {
},
 get$active: function() {
  return this.bodyA.get$active() === true && this.bodyB.get$active() === true;
},
 initVelocityConstraints$1: function(step) {
},
 solveVelocityConstraints$1: function(step) {
},
 solvePositionConstraints$1: function(baumgarte) {
},
 destructor$0: function() {
}
};

$$.JointEdge = {"":
 ["other=", "joint=", "prev=", "next="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); }
};

$$.JointDef = {"":
 ["type=", "userData=", "bodyA=", "bodyB=", "collideConnected?"],
 "super": "Object"
};

$$.ConstantVolumeJoint = {"":
 ["bodies?", "targetLengths", "targetVolume", "normals?", "step", "_impulse", "_world", "distanceJoints", "frequencyHz?", "dampingRatio?", "type", "_prev", "_lib2_next", "edgeA", "edgeB", "bodyA", "bodyB", "islandFlag", "collideConnected", "userData", "localCenterA", "localCenterB", "invMassA", "invIA", "invMassB", "invIB"],
 "super": "Joint",
 step$1: function(arg0) { return this.step.call$1(arg0); },
 step$3: function(arg0, arg1, arg2) { return this.step.call$3(arg0, arg1, arg2); },
 destructor$0: function() {
  for (var t1 = this._world, i = 0; $.ltB(i, $.get$length(this.distanceJoints)); ++i)
    t1.destroyJoint$1($.index(this.distanceJoints, i));
},
 get$area: function() {
  var t1 = this.bodies;
  var t2 = $.mul($.index(t1, $.sub($.get$length(t1), 1)).get$worldCenter().get$x(), $.index(this.bodies, 0).get$worldCenter().get$y());
  var t3 = $.index(this.bodies, 0).get$worldCenter().get$x();
  var t4 = this.bodies;
  t2 = $.sub(t2, $.mul(t3, $.index(t4, $.sub($.get$length(t4), 1)).get$worldCenter().get$y()));
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  var result = 0 + t2;
  for (var i = 0; $.ltB(i, $.sub($.get$length(this.bodies), 1)); ++i) {
    t1 = $.index(this.bodies, i).get$worldCenter().get$x();
    t2 = this.bodies;
    t3 = i + 1;
    t4 = $.sub($.mul(t1, $.index(t2, t3).get$worldCenter().get$y()), $.mul($.index(this.bodies, t3).get$worldCenter().get$x(), $.index(this.bodies, i).get$worldCenter().get$y()));
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    result += t4;
  }
  return result * 0.5;
},
 constrainEdges$1: function(argStep) {
  for (var perimeter = 0, i = 0; $.ltB(i, $.get$length(this.bodies)); ++i) {
    var next = i === $.sub($.get$length(this.bodies), 1) ? 0 : i + 1;
    var dx = $.sub($.index(this.bodies, next).get$worldCenter().get$x(), $.index(this.bodies, i).get$worldCenter().get$x());
    var dy = $.sub($.index(this.bodies, next).get$worldCenter().get$y(), $.index(this.bodies, i).get$worldCenter().get$y());
    var dist = $.sqrt($.add($.mul(dx, dx), $.mul(dy, dy)));
    if (dist < 1.192e-7)
      dist = 1;
    var t1 = $.div(dy, dist);
    $.index(this.normals, i).set$x(t1);
    t1 = $.div($.neg(dx), dist);
    $.index(this.normals, i).set$y(t1);
    perimeter += dist;
  }
  var delta = $.Vector$(0, 0);
  var deltaArea = $.sub(this.targetVolume, this.get$area());
  if (typeof deltaArea !== 'number')
    throw $.iae(deltaArea);
  var toExtrude = 0.5 * deltaArea / perimeter;
  for (var done = true, i = 0; $.ltB(i, $.get$length(this.bodies)); ++i) {
    next = i === $.sub($.get$length(this.bodies), 1) ? 0 : i + 1;
    t1 = $.add($.index(this.normals, i).get$x(), $.index(this.normals, next).get$x());
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = toExtrude * t1;
    var t2 = $.add($.index(this.normals, i).get$y(), $.index(this.normals, next).get$y());
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    delta.setCoords$2(t1, toExtrude * t2);
    var norm = $.get$length(delta);
    if ($.gtB(norm, 0.2)) {
      if (typeof norm !== 'number')
        throw $.iae(norm);
      delta.mulLocal$1(0.2 / norm);
    }
    if ($.gtB(norm, 0.005))
      done = false;
    t1 = $.index(this.bodies, next).get$sweep().get$center();
    t1.set$x($.add(t1.get$x(), delta.x));
    t1 = $.index(this.bodies, next).get$sweep().get$center();
    t1.set$y($.add(t1.get$y(), delta.y));
    $.index(this.bodies, next).synchronizeTransform$0();
  }
  return done;
},
 initVelocityConstraints$1: function(argStep) {
  this.step = argStep;
  var d = $.ListImplementation_List($.get$length(this.bodies));
  var i = 0;
  while (true) {
    var t1 = $.get$length(this.bodies);
    if (typeof t1 !== 'number')
      return this.initVelocityConstraints$1$bailout(1, d, t1, i, 0, 0, 0);
    if (!(i < t1))
      break;
    t1 = $.Vector$(0, 0);
    if (i >= d.length)
      throw $.ioore(i);
    d[i] = t1;
    ++i;
  }
  i = 0;
  while (true) {
    t1 = $.get$length(this.bodies);
    if (typeof t1 !== 'number')
      return this.initVelocityConstraints$1$bailout(2, d, t1, i, 0, 0, 0);
    if (!(i < t1))
      break;
    if (i === 0) {
      t1 = $.get$length(this.bodies);
      if (typeof t1 !== 'number')
        return this.initVelocityConstraints$1$bailout(3, d, t1, i, 0, 0, 0);
      var prev = t1 - 1;
    } else
      prev = i - 1;
    t1 = $.get$length(this.bodies);
    if (typeof t1 !== 'number')
      return this.initVelocityConstraints$1$bailout(4, d, t1, prev, i, 0, 0);
    var next = i === t1 - 1 ? 0 : i + 1;
    if (i >= d.length)
      throw $.ioore(i);
    t1 = d[i];
    var t2 = this.bodies;
    if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.initVelocityConstraints$1$bailout(5, next, prev, t1, i, d, t2);
    if (next >= t2.length)
      throw $.ioore(next);
    t1.setFrom$1(t2[next].get$worldCenter());
    if (i >= d.length)
      throw $.ioore(i);
    t1 = d[i];
    var t4 = this.bodies;
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.initVelocityConstraints$1$bailout(6, d, t1, t4, prev, i, 0);
    if (prev !== (prev | 0))
      throw $.iae(prev);
    if (prev < 0 || prev >= t4.length)
      throw $.ioore(prev);
    t1.subLocal$1(t4[prev].get$worldCenter());
    ++i;
  }
  t1 = this.step;
  if (t1.get$warmStarting() === true) {
    t2 = this._impulse;
    t1 = t1.get$dtRatio();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    this._impulse = t2 * t1;
    i = 0;
    while (true) {
      t1 = $.get$length(this.bodies);
      if (typeof t1 !== 'number')
        return this.initVelocityConstraints$1$bailout(7, d, t1, i, 0, 0, 0);
      if (!(i < t1))
        break;
      t1 = this.bodies;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.initVelocityConstraints$1$bailout(8, d, t1, i, 0, 0, 0);
      if (i >= t1.length)
        throw $.ioore(i);
      var t3 = t1[i].get$linearVelocity();
      t4 = t3.get$x();
      if (typeof t4 !== 'number')
        return this.initVelocityConstraints$1$bailout(9, d, i, t3, t4, 0, 0);
      var t6 = this.bodies;
      if (typeof t6 !== 'string' && (typeof t6 !== 'object' || t6 === null || t6.constructor !== Array && !t6.is$JavaScriptIndexingBehavior()))
        return this.initVelocityConstraints$1$bailout(10, i, t6, t3, t4, d, 0);
      if (i >= t6.length)
        throw $.ioore(i);
      var t8 = t6[i].get$invMass();
      if (typeof t8 !== 'number')
        return this.initVelocityConstraints$1$bailout(11, i, t3, t4, d, t8, 0);
      if (i >= d.length)
        throw $.ioore(i);
      var t10 = d[i].get$y();
      if (typeof t10 !== 'number')
        return this.initVelocityConstraints$1$bailout(12, i, t3, t4, d, t8, t10);
      t3.set$x(t4 + t8 * t10 * 0.5 * this._impulse);
      t3 = this.bodies;
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.initVelocityConstraints$1$bailout(13, d, i, t3, 0, 0, 0);
      if (i >= t3.length)
        throw $.ioore(i);
      var t13 = t3[i].get$linearVelocity();
      var t14 = t13.get$y();
      if (typeof t14 !== 'number')
        return this.initVelocityConstraints$1$bailout(14, d, i, t13, t14, 0, 0);
      var t16 = this.bodies;
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.initVelocityConstraints$1$bailout(15, i, t16, d, t13, t14, 0);
      if (i >= t16.length)
        throw $.ioore(i);
      var t18 = t16[i].get$invMass();
      if (typeof t18 !== 'number')
        return this.initVelocityConstraints$1$bailout(16, t18, i, d, t13, t14, 0);
      if (i >= d.length)
        throw $.ioore(i);
      var t20 = d[i].get$x();
      if (typeof t20 !== 'number')
        return this.initVelocityConstraints$1$bailout(17, t18, i, t20, d, t13, t14);
      t13.set$y(t14 + t18 * -t20 * 0.5 * this._impulse);
      ++i;
    }
  } else
    this._impulse = 0;
},
 initVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      d = env0;
      t1 = env1;
      i = env2;
      break;
    case 2:
      d = env0;
      t1 = env1;
      i = env2;
      break;
    case 3:
      d = env0;
      t1 = env1;
      i = env2;
      break;
    case 4:
      d = env0;
      t1 = env1;
      prev = env2;
      i = env3;
      break;
    case 5:
      next = env0;
      prev = env1;
      t1 = env2;
      i = env3;
      d = env4;
      t2 = env5;
      break;
    case 6:
      d = env0;
      t1 = env1;
      t4 = env2;
      prev = env3;
      i = env4;
      break;
    case 7:
      d = env0;
      t1 = env1;
      i = env2;
      break;
    case 8:
      d = env0;
      t1 = env1;
      i = env2;
      break;
    case 9:
      d = env0;
      i = env1;
      t3 = env2;
      t4 = env3;
      break;
    case 10:
      i = env0;
      t6 = env1;
      t3 = env2;
      t4 = env3;
      d = env4;
      break;
    case 11:
      i = env0;
      t3 = env1;
      t4 = env2;
      d = env3;
      t8 = env4;
      break;
    case 12:
      i = env0;
      t3 = env1;
      t4 = env2;
      d = env3;
      t8 = env4;
      t10 = env5;
      break;
    case 13:
      d = env0;
      i = env1;
      t3 = env2;
      break;
    case 14:
      d = env0;
      i = env1;
      t13 = env2;
      t14 = env3;
      break;
    case 15:
      i = env0;
      t16 = env1;
      d = env2;
      t13 = env3;
      t14 = env4;
      break;
    case 16:
      t18 = env0;
      i = env1;
      d = env2;
      t13 = env3;
      t14 = env4;
      break;
    case 17:
      t18 = env0;
      i = env1;
      t20 = env2;
      d = env3;
      t13 = env4;
      t14 = env5;
      break;
  }
  switch (state0) {
    case 0:
      this.step = argStep;
      var d = $.ListImplementation_List($.get$length(this.bodies));
      var i = 0;
    case 1:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t1 = $.get$length(this.bodies);
            case 1:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
              t1 = $.Vector$(0, 0);
              if (i >= d.length)
                throw $.ioore(i);
              d[i] = t1;
              ++i;
          }
      i = 0;
    default:
      L1:
        while (true)
          switch (state0) {
            case 0:
              t1 = $.get$length(this.bodies);
            case 2:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L1;
            case 3:
              if (state0 === 3 || state0 === 0 && i === 0)
                switch (state0) {
                  case 0:
                    t1 = $.get$length(this.bodies);
                  case 3:
                    state0 = 0;
                    var prev = $.sub(t1, 1);
                }
              else
                prev = i - 1;
              t1 = $.get$length(this.bodies);
            case 4:
              state0 = 0;
              var next = i === $.sub(t1, 1) ? 0 : i + 1;
              if (i >= d.length)
                throw $.ioore(i);
              t1 = d[i];
              var t2 = this.bodies;
            case 5:
              state0 = 0;
              t1.setFrom$1($.index(t2, next).get$worldCenter());
              if (i >= d.length)
                throw $.ioore(i);
              t1 = d[i];
              var t4 = this.bodies;
            case 6:
              state0 = 0;
              t1.subLocal$1($.index(t4, prev).get$worldCenter());
              ++i;
          }
      t1 = this.step;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      if (state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 0 && t1.get$warmStarting() === true)
        switch (state0) {
          case 0:
            t2 = this._impulse;
            t1 = t1.get$dtRatio();
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            this._impulse = t2 * t1;
            i = 0;
          default:
            L2:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = $.get$length(this.bodies);
                  case 7:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L2;
                    t1 = this.bodies;
                  case 8:
                    state0 = 0;
                    var t3 = $.index(t1, i).get$linearVelocity();
                    t4 = t3.get$x();
                  case 9:
                    state0 = 0;
                    var t6 = this.bodies;
                  case 10:
                    state0 = 0;
                    var t8 = $.index(t6, i).get$invMass();
                  case 11:
                    state0 = 0;
                    if (i >= d.length)
                      throw $.ioore(i);
                    var t10 = d[i].get$y();
                  case 12:
                    state0 = 0;
                    t3.set$x($.add(t4, $.mul($.mul($.mul(t8, t10), 0.5), this._impulse)));
                    t3 = this.bodies;
                  case 13:
                    state0 = 0;
                    var t13 = $.index(t3, i).get$linearVelocity();
                    var t14 = t13.get$y();
                  case 14:
                    state0 = 0;
                    var t16 = this.bodies;
                  case 15:
                    state0 = 0;
                    var t18 = $.index(t16, i).get$invMass();
                  case 16:
                    state0 = 0;
                    if (i >= d.length)
                      throw $.ioore(i);
                    var t20 = d[i].get$x();
                  case 17:
                    state0 = 0;
                    t13.set$y($.add(t14, $.mul($.mul($.mul(t18, $.neg(t20)), 0.5), this._impulse)));
                    ++i;
                }
        }
      else
        this._impulse = 0;
  }
},
 solvePositionConstraints$1: function(baumgarte) {
  return this.constrainEdges$1(this.step);
},
 solveVelocityConstraints$1: function(argStep) {
  var d = $.ListImplementation_List($.get$length(this.bodies));
  var i = 0;
  while (true) {
    var t1 = $.get$length(this.bodies);
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(1, d, t1, i, 0, 0, 0, 0, 0);
    if (!(i < t1))
      break;
    t1 = $.Vector$(0, 0);
    if (i >= d.length)
      throw $.ioore(i);
    d[i] = t1;
    ++i;
  }
  var crossMassSum = 0;
  var dotMassSum = 0;
  i = 0;
  while (true) {
    t1 = $.get$length(this.bodies);
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(2, t1, d, crossMassSum, dotMassSum, i, 0, 0, 0);
    if (!(i < t1))
      break;
    if (i === 0) {
      t1 = $.get$length(this.bodies);
      if (typeof t1 !== 'number')
        return this.solveVelocityConstraints$1$bailout(3, d, crossMassSum, dotMassSum, i, t1, 0, 0, 0);
      var prev = t1 - 1;
    } else
      prev = i - 1;
    t1 = $.get$length(this.bodies);
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(4, prev, d, crossMassSum, t1, dotMassSum, i, 0, 0);
    var next = i === t1 - 1 ? 0 : i + 1;
    if (i >= d.length)
      throw $.ioore(i);
    t1 = d[i];
    var t2 = this.bodies;
    if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$1$bailout(5, next, prev, t1, d, crossMassSum, dotMassSum, i, t2);
    if (next >= t2.length)
      throw $.ioore(next);
    t1.setFrom$1(t2[next].get$worldCenter());
    if (i >= d.length)
      throw $.ioore(i);
    t1 = d[i];
    var t4 = this.bodies;
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$1$bailout(6, prev, d, crossMassSum, t4, dotMassSum, i, t1, 0);
    if (prev !== (prev | 0))
      throw $.iae(prev);
    if (prev < 0 || prev >= t4.length)
      throw $.ioore(prev);
    t1.subLocal$1(t4[prev].get$worldCenter());
    if (i >= d.length)
      throw $.ioore(i);
    t1 = d[i].get$lengthSquared();
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(7, t1, d, crossMassSum, dotMassSum, i, 0, 0, 0);
    var t7 = this.bodies;
    if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$1$bailout(8, t1, d, crossMassSum, t7, dotMassSum, i, 0, 0);
    if (i >= t7.length)
      throw $.ioore(i);
    var t9 = t7[i].get$mass();
    if (typeof t9 !== 'number')
      return this.solveVelocityConstraints$1$bailout(9, t1, d, crossMassSum, t9, dotMassSum, i, 0, 0);
    dotMassSum += t1 / t9;
    if (i >= t7.length)
      throw $.ioore(i);
    var t11 = t7[i].get$linearVelocity();
    if (i >= d.length)
      throw $.ioore(i);
    var t12 = d[i];
    var t13 = t11.get$x();
    if (typeof t13 !== 'number')
      return this.solveVelocityConstraints$1$bailout(11, t11, t12, t13, d, crossMassSum, i, dotMassSum, 0);
    var t15 = t12.get$y();
    if (typeof t15 !== 'number')
      return this.solveVelocityConstraints$1$bailout(12, t11, t12, t13, t15, d, crossMassSum, i, dotMassSum);
    t15 = t13 * t15;
    t11 = t11.get$y();
    if (typeof t11 !== 'number')
      return this.solveVelocityConstraints$1$bailout(13, t12, d, crossMassSum, t15, t11, i, dotMassSum, 0);
    t12 = t12.get$x();
    if (typeof t12 !== 'number')
      return this.solveVelocityConstraints$1$bailout(14, d, crossMassSum, t15, t11, t12, i, dotMassSum, 0);
    crossMassSum += t15 - t11 * t12;
    ++i;
  }
  var lambda = -2 * crossMassSum / dotMassSum;
  this._impulse = this._impulse + lambda;
  i = 0;
  while (true) {
    t1 = $.get$length(this.bodies);
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(15, i, lambda, t1, d, 0, 0, 0, 0);
    if (!(i < t1))
      break;
    t1 = this.bodies;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$1$bailout(16, t1, lambda, i, d, 0, 0, 0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    var t3 = t1[i].get$linearVelocity();
    t4 = t3.get$x();
    if (typeof t4 !== 'number')
      return this.solveVelocityConstraints$1$bailout(17, lambda, i, d, t3, t4, 0, 0, 0);
    var t6 = this.bodies;
    if (typeof t6 !== 'string' && (typeof t6 !== 'object' || t6 === null || t6.constructor !== Array && !t6.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$1$bailout(18, lambda, t6, i, d, t3, t4, 0, 0);
    if (i >= t6.length)
      throw $.ioore(i);
    var t8 = t6[i].get$invMass();
    if (typeof t8 !== 'number')
      return this.solveVelocityConstraints$1$bailout(19, lambda, t8, i, d, t3, t4, 0, 0);
    if (i >= d.length)
      throw $.ioore(i);
    var t10 = d[i].get$y();
    if (typeof t10 !== 'number')
      return this.solveVelocityConstraints$1$bailout(20, lambda, t8, t10, i, d, t3, t4, 0);
    t3.set$x(t4 + t8 * t10 * 0.5 * lambda);
    t3 = this.bodies;
    if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$1$bailout(21, i, lambda, t3, d, 0, 0, 0, 0);
    if (i >= t3.length)
      throw $.ioore(i);
    t13 = t3[i].get$linearVelocity();
    var t14 = t13.get$y();
    if (typeof t14 !== 'number')
      return this.solveVelocityConstraints$1$bailout(22, lambda, t13, t14, i, d, 0, 0, 0);
    var t16 = this.bodies;
    if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$1$bailout(23, lambda, t13, t14, t16, i, d, 0, 0);
    if (i >= t16.length)
      throw $.ioore(i);
    var t18 = t16[i].get$invMass();
    if (typeof t18 !== 'number')
      return this.solveVelocityConstraints$1$bailout(24, lambda, t13, t14, i, t18, d, 0, 0);
    if (i >= d.length)
      throw $.ioore(i);
    var t20 = d[i].get$x();
    if (typeof t20 !== 'number')
      return this.solveVelocityConstraints$1$bailout(25, lambda, t13, t14, i, t18, t20, d, 0);
    t13.set$y(t14 + t18 * -t20 * 0.5 * lambda);
    ++i;
  }
},
 solveVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      d = env0;
      t1 = env1;
      i = env2;
      break;
    case 2:
      t1 = env0;
      d = env1;
      crossMassSum = env2;
      dotMassSum = env3;
      i = env4;
      break;
    case 3:
      d = env0;
      crossMassSum = env1;
      dotMassSum = env2;
      i = env3;
      t1 = env4;
      break;
    case 4:
      prev = env0;
      d = env1;
      crossMassSum = env2;
      t1 = env3;
      dotMassSum = env4;
      i = env5;
      break;
    case 5:
      next = env0;
      prev = env1;
      t1 = env2;
      d = env3;
      crossMassSum = env4;
      dotMassSum = env5;
      i = env6;
      t2 = env7;
      break;
    case 6:
      prev = env0;
      d = env1;
      crossMassSum = env2;
      t4 = env3;
      dotMassSum = env4;
      i = env5;
      t1 = env6;
      break;
    case 7:
      t1 = env0;
      d = env1;
      crossMassSum = env2;
      dotMassSum = env3;
      i = env4;
      break;
    case 8:
      t1 = env0;
      d = env1;
      crossMassSum = env2;
      t7 = env3;
      dotMassSum = env4;
      i = env5;
      break;
    case 9:
      t1 = env0;
      d = env1;
      crossMassSum = env2;
      t9 = env3;
      dotMassSum = env4;
      i = env5;
      break;
    case 10:
      d = env0;
      crossMassSum = env1;
      t9 = env2;
      i = env3;
      dotMassSum = env4;
      break;
    case 11:
      t11 = env0;
      t12 = env1;
      t13 = env2;
      d = env3;
      crossMassSum = env4;
      i = env5;
      dotMassSum = env6;
      break;
    case 12:
      t11 = env0;
      t12 = env1;
      t13 = env2;
      t15 = env3;
      d = env4;
      crossMassSum = env5;
      i = env6;
      dotMassSum = env7;
      break;
    case 13:
      t12 = env0;
      d = env1;
      crossMassSum = env2;
      t15 = env3;
      t11 = env4;
      i = env5;
      dotMassSum = env6;
      break;
    case 14:
      d = env0;
      crossMassSum = env1;
      t15 = env2;
      t11 = env3;
      t12 = env4;
      i = env5;
      dotMassSum = env6;
      break;
    case 15:
      i = env0;
      lambda = env1;
      t1 = env2;
      d = env3;
      break;
    case 16:
      t1 = env0;
      lambda = env1;
      i = env2;
      d = env3;
      break;
    case 17:
      lambda = env0;
      i = env1;
      d = env2;
      t3 = env3;
      t4 = env4;
      break;
    case 18:
      lambda = env0;
      t6 = env1;
      i = env2;
      d = env3;
      t3 = env4;
      t4 = env5;
      break;
    case 19:
      lambda = env0;
      t8 = env1;
      i = env2;
      d = env3;
      t3 = env4;
      t4 = env5;
      break;
    case 20:
      lambda = env0;
      t8 = env1;
      t10 = env2;
      i = env3;
      d = env4;
      t3 = env5;
      t4 = env6;
      break;
    case 21:
      i = env0;
      lambda = env1;
      t3 = env2;
      d = env3;
      break;
    case 22:
      lambda = env0;
      t13 = env1;
      t14 = env2;
      i = env3;
      d = env4;
      break;
    case 23:
      lambda = env0;
      t13 = env1;
      t14 = env2;
      t16 = env3;
      i = env4;
      d = env5;
      break;
    case 24:
      lambda = env0;
      t13 = env1;
      t14 = env2;
      i = env3;
      t18 = env4;
      d = env5;
      break;
    case 25:
      lambda = env0;
      t13 = env1;
      t14 = env2;
      i = env3;
      t18 = env4;
      t20 = env5;
      d = env6;
      break;
  }
  switch (state0) {
    case 0:
      var d = $.ListImplementation_List($.get$length(this.bodies));
      var i = 0;
    case 1:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t1 = $.get$length(this.bodies);
            case 1:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
              t1 = $.Vector$(0, 0);
              if (i >= d.length)
                throw $.ioore(i);
              d[i] = t1;
              ++i;
          }
      var crossMassSum = 0;
      var dotMassSum = 0;
      i = 0;
    default:
      L1:
        while (true)
          switch (state0) {
            case 0:
              t1 = $.get$length(this.bodies);
            case 2:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L1;
            case 3:
              if (state0 === 3 || state0 === 0 && i === 0)
                switch (state0) {
                  case 0:
                    t1 = $.get$length(this.bodies);
                  case 3:
                    state0 = 0;
                    var prev = $.sub(t1, 1);
                }
              else
                prev = i - 1;
              t1 = $.get$length(this.bodies);
            case 4:
              state0 = 0;
              var next = i === $.sub(t1, 1) ? 0 : i + 1;
              if (i >= d.length)
                throw $.ioore(i);
              t1 = d[i];
              var t2 = this.bodies;
            case 5:
              state0 = 0;
              t1.setFrom$1($.index(t2, next).get$worldCenter());
              if (i >= d.length)
                throw $.ioore(i);
              t1 = d[i];
              var t4 = this.bodies;
            case 6:
              state0 = 0;
              t1.subLocal$1($.index(t4, prev).get$worldCenter());
              if (i >= d.length)
                throw $.ioore(i);
              t1 = d[i].get$lengthSquared();
            case 7:
              state0 = 0;
              var t7 = this.bodies;
            case 8:
              state0 = 0;
              var t9 = $.index(t7, i).get$mass();
            case 9:
              state0 = 0;
              t9 = $.div(t1, t9);
              if (typeof t9 !== 'number')
                throw $.iae(t9);
              dotMassSum += t9;
              t9 = this.bodies;
            case 10:
              state0 = 0;
              var t11 = $.index(t9, i).get$linearVelocity();
              if (i >= d.length)
                throw $.ioore(i);
              var t12 = d[i];
              var t13 = t11.get$x();
            case 11:
              state0 = 0;
              var t15 = t12.get$y();
            case 12:
              state0 = 0;
              t15 = $.mul(t13, t15);
              t11 = t11.get$y();
            case 13:
              state0 = 0;
              t12 = t12.get$x();
            case 14:
              state0 = 0;
              t15 = $.sub(t15, $.mul(t11, t12));
              if (typeof t15 !== 'number')
                throw $.iae(t15);
              crossMassSum += t15;
              ++i;
          }
      var lambda = -2 * crossMassSum / dotMassSum;
      this._impulse = this._impulse + lambda;
      i = 0;
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
      L2:
        while (true)
          switch (state0) {
            case 0:
              t1 = $.get$length(this.bodies);
            case 15:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L2;
              t1 = this.bodies;
            case 16:
              state0 = 0;
              var t3 = $.index(t1, i).get$linearVelocity();
              t4 = t3.get$x();
            case 17:
              state0 = 0;
              var t6 = this.bodies;
            case 18:
              state0 = 0;
              var t8 = $.index(t6, i).get$invMass();
            case 19:
              state0 = 0;
              if (i >= d.length)
                throw $.ioore(i);
              var t10 = d[i].get$y();
            case 20:
              state0 = 0;
              t3.set$x($.add(t4, $.mul($.mul($.mul(t8, t10), 0.5), lambda)));
              t3 = this.bodies;
            case 21:
              state0 = 0;
              t13 = $.index(t3, i).get$linearVelocity();
              var t14 = t13.get$y();
            case 22:
              state0 = 0;
              var t16 = this.bodies;
            case 23:
              state0 = 0;
              var t18 = $.index(t16, i).get$invMass();
            case 24:
              state0 = 0;
              if (i >= d.length)
                throw $.ioore(i);
              var t20 = d[i].get$x();
            case 25:
              state0 = 0;
              t13.set$y($.add(t14, $.mul($.mul($.mul(t18, $.neg(t20)), 0.5), lambda)));
              ++i;
          }
  }
},
 getAnchorA$1: function(argOut) {
  throw $.$$throw($.NotImplementedException$(null));
},
 getAnchorB$1: function(argOut) {
  throw $.$$throw($.NotImplementedException$(null));
},
 ConstantVolumeJoint$2: function(_world, def) {
  if ($.leB($.get$length(def.get$bodies()), 2))
    throw $.$$throw($.IllegalArgumentException$('You cannot create a constant volume joint with less than three bodies.'));
  this.bodies = $.ListImplementation_List$from(def.get$bodies());
  this.targetLengths = $.ListImplementation_List($.get$length(this.bodies));
  for (var i = 0; $.ltB(i, $.get$length(this.targetLengths)); ++i) {
    var next = i === $.sub($.get$length(this.targetLengths), 1) ? 0 : i + 1;
    var temp = $.Vector$copy($.index(this.bodies, i).get$worldCenter());
    temp.subLocal$1($.index(this.bodies, next).get$worldCenter());
    var dist = $.get$length(temp);
    $.indexSet(this.targetLengths, i, dist);
  }
  this.targetVolume = this.get$area();
  var t1 = def.get$joints();
  if (!(t1 == null) && !$.eqB($.get$length(t1), $.get$length(def.get$bodies())))
    throw $.$$throw($.IllegalArgumentException$('Incorrect joint definition.  Joints have to correspond to the bodies'));
  t1 = def.get$joints();
  if (t1 == null) {
    var djd = $.DistanceJointDef$();
    this.distanceJoints = $.ListImplementation_List($.get$length(this.bodies));
    for (t1 = this._world, i = 0; $.ltB(i, $.get$length(this.targetLengths)); ++i) {
      next = i === $.sub($.get$length(this.targetLengths), 1) ? 0 : i + 1;
      djd.frequencyHz = def.get$frequencyHz();
      djd.dampingRatio = def.get$dampingRatio();
      djd.initialize$4($.index(this.bodies, i), $.index(this.bodies, next), $.index(this.bodies, i).get$worldCenter(), $.index(this.bodies, next).get$worldCenter());
      $.indexSet(this.distanceJoints, i, t1.createJoint$1(djd));
    }
  } else {
    this.distanceJoints = $.ListImplementation_List($.get$length(t1));
    $.setRange$3(this.distanceJoints, 0, $.get$length(def.get$joints()), def.get$joints());
  }
  this.frequencyHz = def.get$frequencyHz();
  this.dampingRatio = def.get$dampingRatio();
  this.normals = $.ListImplementation_List($.get$length(this.bodies));
  for (i = 0; $.ltB(i, $.get$length(this.normals)); ++i)
    $.indexSet(this.normals, i, $.Vector$(0, 0));
  this.bodyA = $.index(this.bodies, 0);
  this.bodyB = $.index(this.bodies, 1);
  this.collideConnected = false;
}
};

$$.ConstantVolumeJointDef = {"":
 ["frequencyHz?", "dampingRatio?", "bodies?", "joints?", "type", "userData", "bodyA", "bodyB", "collideConnected"],
 "super": "JointDef",
 addBody$1: function(argBody) {
  this.bodies.push(argBody);
  var t1 = this.bodies.length;
  if (t1 === 1)
    this.bodyA = argBody;
  else if (t1 === 2)
    this.bodyB = argBody;
},
 ConstantVolumeJointDef$0: function() {
  this.type = 10;
  this.collideConnected = false;
}
};

$$.DistanceJoint = {"":
 ["localAnchor1", "localAnchor2", "u", "impulse", "mass?", "length=", "frequencyHz?", "dampingRatio?", "gamma", "bias", "type", "_prev", "_lib2_next", "edgeA", "edgeB", "bodyA", "bodyB", "islandFlag", "collideConnected", "userData", "localCenterA", "localCenterB", "invMassA", "invIA", "invMassB", "invIB"],
 "super": "Joint",
 getAnchorA$1: function(argOut) {
  this.bodyA.getWorldPointToOut$2(this.localAnchor1, argOut);
},
 getAnchorB$1: function(argOut) {
  this.bodyB.getWorldPointToOut$2(this.localAnchor2, argOut);
},
 initVelocityConstraints$1: function(step) {
  var b1 = this.bodyA;
  var b2 = this.bodyB;
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
  r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
  $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
  $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
  var t1 = b2.get$sweep().get$center().get$x();
  if (typeof t1 !== 'number')
    return this.initVelocityConstraints$1$bailout(1, step, b2, r1, r2, t1, b1, 0, 0, 0, 0, 0);
  var t3 = r2.x;
  if (typeof t3 !== 'number')
    return this.initVelocityConstraints$1$bailout(2, step, b2, t3, r1, r2, t1, b1, 0, 0, 0, 0);
  t3 = t1 + t3;
  t1 = b1.get$sweep().get$center().get$x();
  if (typeof t1 !== 'number')
    return this.initVelocityConstraints$1$bailout(3, step, b2, t1, b1, r1, r2, t3, 0, 0, 0, 0);
  t1 = t3 - t1;
  t3 = r1.x;
  if (typeof t3 !== 'number')
    return this.initVelocityConstraints$1$bailout(4, step, b2, t1, t3, r1, r2, b1, 0, 0, 0, 0);
  t3 = t1 - t3;
  t1 = this.u;
  t1.x = t3;
  t3 = b2.get$sweep().get$center().get$y();
  if (typeof t3 !== 'number')
    return this.initVelocityConstraints$1$bailout(5, step, b2, t1, r1, r2, t3, b1, 0, 0, 0, 0);
  var t8 = r2.y;
  if (typeof t8 !== 'number')
    return this.initVelocityConstraints$1$bailout(6, step, b2, t1, r1, t8, r2, t3, b1, 0, 0, 0);
  t8 = t3 + t8;
  t3 = b1.get$sweep().get$center().get$y();
  if (typeof t3 !== 'number')
    return this.initVelocityConstraints$1$bailout(7, step, b2, t3, t1, r1, r2, b1, t8, 0, 0, 0);
  t3 = t8 - t3;
  t8 = r1.y;
  if (typeof t8 !== 'number')
    return this.initVelocityConstraints$1$bailout(8, step, b2, t3, t1, r1, t8, r2, b1, 0, 0, 0);
  t1.y = t3 - t8;
  var len = $.get$length(t1);
  if (typeof len !== 'number')
    return this.initVelocityConstraints$1$bailout(9, step, b2, t1, r1, r2, len, b1, 0, 0, 0, 0);
  if (len > 0.005) {
    var t2 = t1.x;
    if (typeof t2 !== 'number')
      return this.initVelocityConstraints$1$bailout(10, step, b2, t1, r1, r2, len, t2, b1, 0, 0, 0);
    var t4 = 1 / len;
    t1.x = t2 * t4;
    var t5 = t1.y;
    if (typeof t5 !== 'number')
      return this.initVelocityConstraints$1$bailout(11, step, b2, t5, t1, r1, t4, r2, len, b1, 0, 0);
    t1.y = t5 * t4;
  } else
    t1.setCoords$2(0, 0);
  t2 = r1.x;
  if (typeof t2 !== 'number')
    return this.initVelocityConstraints$1$bailout(12, step, b2, t2, t1, r1, r2, len, b1, 0, 0, 0);
  t4 = t1.y;
  if (typeof t4 !== 'number')
    return this.initVelocityConstraints$1$bailout(13, step, b2, t2, t4, r1, t1, r2, len, b1, 0, 0);
  t2 *= t4;
  var t6 = r1.y;
  if (typeof t6 !== 'number')
    return this.initVelocityConstraints$1$bailout(14, step, b2, t1, t6, r1, r2, t2, len, b1, 0, 0);
  t8 = t1.x;
  if (typeof t8 !== 'number')
    return this.initVelocityConstraints$1$bailout(15, step, b2, t1, t6, t8, r2, r1, t2, len, b1, 0);
  var cr1u = t2 - t6 * t8;
  t2 = r2.x;
  if (typeof t2 !== 'number')
    return this.initVelocityConstraints$1$bailout(16, step, cr1u, b2, t1, r1, r2, t2, len, b1, 0, 0);
  t4 = t2 * t4;
  t2 = r2.y;
  if (typeof t2 !== 'number')
    return this.initVelocityConstraints$1$bailout(18, step, cr1u, b2, t1, t4, r1, r2, t2, len, b1, 0);
  var cr2u = t4 - t2 * t8;
  t4 = b1.get$invMass();
  if (typeof t4 !== 'number')
    return this.initVelocityConstraints$1$bailout(20, step, cr1u, len, b2, t1, r1, r2, cr2u, t4, b1, 0);
  var t13 = b1.get$invInertia();
  if (typeof t13 !== 'number')
    return this.initVelocityConstraints$1$bailout(21, step, cr1u, len, b2, t1, r1, r2, cr2u, t4, t13, b1);
  t4 += t13 * cr1u * cr1u;
  var t15 = b2.get$invMass();
  if (typeof t15 !== 'number')
    return this.initVelocityConstraints$1$bailout(22, step, b2, t4, t1, t15, r1, r2, len, cr2u, b1, 0);
  t15 = t4 + t15;
  t4 = b2.get$invInertia();
  if (typeof t4 !== 'number')
    return this.initVelocityConstraints$1$bailout(23, step, b2, t1, t15, r1, r2, t4, len, cr2u, b1, 0);
  var invMass = t15 + t4 * cr2u * cr2u;
  this.mass = 1 / invMass;
  t2 = this.frequencyHz;
  if (typeof t2 !== 'number')
    return this.initVelocityConstraints$1$bailout(24, step, b2, b1, t1, r1, r2, len, invMass, t2, 0, 0);
  if (t2 > 0) {
    t2 = $.get$length(this);
    if (typeof t2 !== 'number')
      return this.initVelocityConstraints$1$bailout(25, step, b2, t1, r1, r2, t2, len, invMass, b1, 0, 0);
    var C = len - t2;
    t2 = this.frequencyHz;
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    var omega = 6.283185307179586 * t2;
    t2 = this.mass;
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    t4 = 2 * t2;
    t5 = this.dampingRatio;
    if (typeof t5 !== 'number')
      throw $.iae(t5);
    var d = t4 * t5 * omega;
    var k = t2 * omega * omega;
    t6 = step.dt;
    this.gamma = t6 * (d + t6 * k);
    t2 = this.gamma;
    this.gamma = !(t2 === 0) ? 1 / t2 : 0;
    this.bias = C * step.dt * k * this.gamma;
    this.mass = invMass + this.gamma;
    t2 = this.mass;
    if (!(t2 === 0)) {
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = 1 / t2;
    } else
      t2 = 0;
    this.mass = t2;
  }
  if (step.warmStarting) {
    this.impulse = this.impulse * step.dtRatio;
    var P = $.Vector$(0, 0);
    P.setFrom$1(t1).mulLocal$1(this.impulse);
    t2 = b1.get$linearVelocity();
    t3 = t2.get$x();
    if (typeof t3 !== 'number')
      return this.initVelocityConstraints$1$bailout(26, b2, t2, t3, r1, r2, P, b1, 0, 0, 0, 0);
    t5 = b1.get$invMass();
    if (typeof t5 !== 'number')
      return this.initVelocityConstraints$1$bailout(27, b2, t2, t3, t5, r1, r2, P, b1, 0, 0, 0);
    var t7 = P.x;
    if (typeof t7 !== 'number')
      return this.initVelocityConstraints$1$bailout(28, b2, t2, t3, t5, r1, r2, t7, P, b1, 0, 0);
    t2.set$x(t3 - t5 * t7);
    t2 = b1.get$linearVelocity();
    var t9 = t2.get$y();
    if (typeof t9 !== 'number')
      return this.initVelocityConstraints$1$bailout(29, b2, r1, r2, t2, t9, P, b1, 0, 0, 0, 0);
    var t11 = b1.get$invMass();
    if (typeof t11 !== 'number')
      return this.initVelocityConstraints$1$bailout(30, b2, P, r1, r2, t2, t9, t11, b1, 0, 0, 0);
    t13 = P.y;
    if (typeof t13 !== 'number')
      return this.initVelocityConstraints$1$bailout(31, b2, t11, P, r1, r2, t2, t9, t13, b1, 0, 0);
    t2.set$y(t9 - t11 * t13);
    t2 = b1.get$angularVelocity();
    if (typeof t2 !== 'number')
      return this.initVelocityConstraints$1$bailout(32, b2, t2, r1, r2, P, b1, 0, 0, 0, 0, 0);
    var t16 = b1.get$invInertia();
    if (typeof t16 !== 'number')
      return this.initVelocityConstraints$1$bailout(33, b2, t2, t16, r1, r2, P, b1, 0, 0, 0, 0);
    var t18 = r1.x;
    if (typeof t18 !== 'number')
      return this.initVelocityConstraints$1$bailout(34, b2, b1, t2, t16, r1, r2, P, t18, 0, 0, 0);
    var t20 = P.y;
    if (typeof t20 !== 'number')
      return this.initVelocityConstraints$1$bailout(35, b2, t20, b1, t2, t16, r1, r2, P, t18, 0, 0);
    t20 = t18 * t20;
    t18 = r1.y;
    if (typeof t18 !== 'number')
      return this.initVelocityConstraints$1$bailout(36, b2, t18, t2, t16, r2, t20, P, b1, 0, 0, 0);
    var t23 = P.x;
    if (typeof t23 !== 'number')
      return this.initVelocityConstraints$1$bailout(37, b2, t18, t23, t2, t16, r2, t20, P, b1, 0, 0);
    b1.set$angularVelocity(t2 - t16 * (t20 - t18 * t23));
    var t25 = b2.get$linearVelocity();
    var t26 = t25.get$x();
    if (typeof t26 !== 'number')
      return this.initVelocityConstraints$1$bailout(38, b2, r2, P, t25, t26, 0, 0, 0, 0, 0, 0);
    var t28 = b2.get$invMass();
    if (typeof t28 !== 'number')
      return this.initVelocityConstraints$1$bailout(39, b2, t25, t26, t28, r2, P, 0, 0, 0, 0, 0);
    var t30 = P.x;
    if (typeof t30 !== 'number')
      return this.initVelocityConstraints$1$bailout(40, b2, t30, t25, t26, t28, r2, P, 0, 0, 0, 0);
    t25.set$x(t26 + t28 * t30);
    t25 = b2.get$linearVelocity();
    var t32 = t25.get$y();
    if (typeof t32 !== 'number')
      return this.initVelocityConstraints$1$bailout(41, b2, t32, r2, P, t25, 0, 0, 0, 0, 0, 0);
    var t34 = b2.get$invMass();
    if (typeof t34 !== 'number')
      return this.initVelocityConstraints$1$bailout(42, b2, t32, t34, r2, P, t25, 0, 0, 0, 0, 0);
    var t36 = P.y;
    if (typeof t36 !== 'number')
      return this.initVelocityConstraints$1$bailout(43, b2, t32, t34, t36, r2, P, t25, 0, 0, 0, 0);
    t25.set$y(t32 + t34 * t36);
    t25 = b2.get$angularVelocity();
    if (typeof t25 !== 'number')
      return this.initVelocityConstraints$1$bailout(44, b2, t25, r2, P, 0, 0, 0, 0, 0, 0, 0);
    var t39 = b2.get$invInertia();
    if (typeof t39 !== 'number')
      return this.initVelocityConstraints$1$bailout(45, b2, t25, t39, r2, P, 0, 0, 0, 0, 0, 0);
    var t41 = r2.x;
    if (typeof t41 !== 'number')
      return this.initVelocityConstraints$1$bailout(46, b2, t41, t25, t39, r2, P, 0, 0, 0, 0, 0);
    var t43 = P.y;
    if (typeof t43 !== 'number')
      return this.initVelocityConstraints$1$bailout(47, b2, t41, t43, t25, t39, r2, P, 0, 0, 0, 0);
    t43 = t41 * t43;
    t41 = r2.y;
    if (typeof t41 !== 'number')
      return this.initVelocityConstraints$1$bailout(48, b2, t41, t25, t39, t43, P, 0, 0, 0, 0, 0);
    var t46 = P.x;
    if (typeof t46 !== 'number')
      return this.initVelocityConstraints$1$bailout(49, b2, t41, t25, t39, t46, t43, 0, 0, 0, 0, 0);
    b2.set$angularVelocity(t25 + t39 * (t43 - t41 * t46));
  } else
    this.impulse = 0;
},
 initVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      var step = env0;
      b2 = env1;
      r1 = env2;
      r2 = env3;
      t1 = env4;
      b1 = env5;
      break;
    case 2:
      step = env0;
      b2 = env1;
      t3 = env2;
      r1 = env3;
      r2 = env4;
      t1 = env5;
      b1 = env6;
      break;
    case 3:
      step = env0;
      b2 = env1;
      t1 = env2;
      b1 = env3;
      r1 = env4;
      r2 = env5;
      t3 = env6;
      break;
    case 4:
      step = env0;
      b2 = env1;
      t1 = env2;
      t3 = env3;
      r1 = env4;
      r2 = env5;
      b1 = env6;
      break;
    case 5:
      step = env0;
      b2 = env1;
      t1 = env2;
      r1 = env3;
      r2 = env4;
      t3 = env5;
      b1 = env6;
      break;
    case 6:
      step = env0;
      b2 = env1;
      t1 = env2;
      r1 = env3;
      t8 = env4;
      r2 = env5;
      t3 = env6;
      b1 = env7;
      break;
    case 7:
      step = env0;
      b2 = env1;
      t3 = env2;
      t1 = env3;
      r1 = env4;
      r2 = env5;
      b1 = env6;
      t8 = env7;
      break;
    case 8:
      step = env0;
      b2 = env1;
      t3 = env2;
      t1 = env3;
      r1 = env4;
      t8 = env5;
      r2 = env6;
      b1 = env7;
      break;
    case 9:
      step = env0;
      b2 = env1;
      t1 = env2;
      r1 = env3;
      r2 = env4;
      len = env5;
      b1 = env6;
      break;
    case 10:
      step = env0;
      b2 = env1;
      t1 = env2;
      r1 = env3;
      r2 = env4;
      len = env5;
      t2 = env6;
      b1 = env7;
      break;
    case 11:
      step = env0;
      b2 = env1;
      t5 = env2;
      t1 = env3;
      r1 = env4;
      t4 = env5;
      r2 = env6;
      len = env7;
      b1 = env8;
      break;
    case 12:
      step = env0;
      b2 = env1;
      t2 = env2;
      t1 = env3;
      r1 = env4;
      r2 = env5;
      len = env6;
      b1 = env7;
      break;
    case 13:
      step = env0;
      b2 = env1;
      t2 = env2;
      t4 = env3;
      r1 = env4;
      t1 = env5;
      r2 = env6;
      len = env7;
      b1 = env8;
      break;
    case 14:
      step = env0;
      b2 = env1;
      t1 = env2;
      t2 = env3;
      r1 = env4;
      r2 = env5;
      t4 = env6;
      len = env7;
      b1 = env8;
      break;
    case 15:
      step = env0;
      b2 = env1;
      t1 = env2;
      t2 = env3;
      t7 = env4;
      r2 = env5;
      r1 = env6;
      t4 = env7;
      len = env8;
      b1 = env9;
      break;
    case 16:
      step = env0;
      cr1u = env1;
      b2 = env2;
      t1 = env3;
      r1 = env4;
      r2 = env5;
      t4 = env6;
      len = env7;
      b1 = env8;
      break;
    case 17:
      step = env0;
      cr1u = env1;
      b2 = env2;
      t1 = env3;
      r1 = env4;
      r2 = env5;
      t4 = env6;
      t10 = env7;
      len = env8;
      b1 = env9;
      break;
    case 18:
      step = env0;
      cr1u = env1;
      b2 = env2;
      t1 = env3;
      t10 = env4;
      r1 = env5;
      r2 = env6;
      t4 = env7;
      len = env8;
      b1 = env9;
      break;
    case 19:
      step = env0;
      cr1u = env1;
      len = env2;
      b2 = env3;
      t1 = env4;
      t10 = env5;
      r1 = env6;
      r2 = env7;
      t4 = env8;
      t13 = env9;
      b1 = env10;
      break;
    case 20:
      step = env0;
      cr1u = env1;
      len = env2;
      b2 = env3;
      t1 = env4;
      r1 = env5;
      r2 = env6;
      cr2u = env7;
      t10 = env8;
      b1 = env9;
      break;
    case 21:
      step = env0;
      cr1u = env1;
      len = env2;
      b2 = env3;
      t1 = env4;
      r1 = env5;
      r2 = env6;
      cr2u = env7;
      t10 = env8;
      t16 = env9;
      b1 = env10;
      break;
    case 22:
      step = env0;
      b2 = env1;
      t10 = env2;
      t1 = env3;
      t18 = env4;
      r1 = env5;
      r2 = env6;
      len = env7;
      cr2u = env8;
      b1 = env9;
      break;
    case 23:
      step = env0;
      b2 = env1;
      t1 = env2;
      t18 = env3;
      r1 = env4;
      r2 = env5;
      t10 = env6;
      len = env7;
      cr2u = env8;
      b1 = env9;
      break;
    case 24:
      step = env0;
      b2 = env1;
      b1 = env2;
      t1 = env3;
      r1 = env4;
      r2 = env5;
      len = env6;
      invMass = env7;
      t2 = env8;
      break;
    case 25:
      step = env0;
      b2 = env1;
      t1 = env2;
      r1 = env3;
      r2 = env4;
      t2 = env5;
      len = env6;
      invMass = env7;
      b1 = env8;
      break;
    case 26:
      b2 = env0;
      t2 = env1;
      t3 = env2;
      r1 = env3;
      r2 = env4;
      P = env5;
      b1 = env6;
      break;
    case 27:
      b2 = env0;
      t2 = env1;
      t3 = env2;
      t5 = env3;
      r1 = env4;
      r2 = env5;
      P = env6;
      b1 = env7;
      break;
    case 28:
      b2 = env0;
      t2 = env1;
      t3 = env2;
      t5 = env3;
      r1 = env4;
      r2 = env5;
      t7 = env6;
      P = env7;
      b1 = env8;
      break;
    case 29:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      t2 = env3;
      t9 = env4;
      P = env5;
      b1 = env6;
      break;
    case 30:
      b2 = env0;
      P = env1;
      r1 = env2;
      r2 = env3;
      t2 = env4;
      t9 = env5;
      t11 = env6;
      b1 = env7;
      break;
    case 31:
      b2 = env0;
      t11 = env1;
      P = env2;
      r1 = env3;
      r2 = env4;
      t2 = env5;
      t9 = env6;
      t13 = env7;
      b1 = env8;
      break;
    case 32:
      b2 = env0;
      t2 = env1;
      r1 = env2;
      r2 = env3;
      P = env4;
      b1 = env5;
      break;
    case 33:
      b2 = env0;
      t2 = env1;
      t16 = env2;
      r1 = env3;
      r2 = env4;
      P = env5;
      b1 = env6;
      break;
    case 34:
      b2 = env0;
      b1 = env1;
      t2 = env2;
      t16 = env3;
      r1 = env4;
      r2 = env5;
      P = env6;
      t18 = env7;
      break;
    case 35:
      b2 = env0;
      t20 = env1;
      b1 = env2;
      t2 = env3;
      t16 = env4;
      r1 = env5;
      r2 = env6;
      P = env7;
      t18 = env8;
      break;
    case 36:
      b2 = env0;
      t18 = env1;
      t2 = env2;
      t16 = env3;
      r2 = env4;
      t20 = env5;
      P = env6;
      b1 = env7;
      break;
    case 37:
      b2 = env0;
      t18 = env1;
      t23 = env2;
      t2 = env3;
      t16 = env4;
      r2 = env5;
      t20 = env6;
      P = env7;
      b1 = env8;
      break;
    case 38:
      b2 = env0;
      r2 = env1;
      P = env2;
      t25 = env3;
      t26 = env4;
      break;
    case 39:
      b2 = env0;
      t25 = env1;
      t26 = env2;
      t28 = env3;
      r2 = env4;
      P = env5;
      break;
    case 40:
      b2 = env0;
      t30 = env1;
      t25 = env2;
      t26 = env3;
      t28 = env4;
      r2 = env5;
      P = env6;
      break;
    case 41:
      b2 = env0;
      t32 = env1;
      r2 = env2;
      P = env3;
      t25 = env4;
      break;
    case 42:
      b2 = env0;
      t32 = env1;
      t34 = env2;
      r2 = env3;
      P = env4;
      t25 = env5;
      break;
    case 43:
      b2 = env0;
      t32 = env1;
      t34 = env2;
      t36 = env3;
      r2 = env4;
      P = env5;
      t25 = env6;
      break;
    case 44:
      b2 = env0;
      t25 = env1;
      r2 = env2;
      P = env3;
      break;
    case 45:
      b2 = env0;
      t25 = env1;
      t39 = env2;
      r2 = env3;
      P = env4;
      break;
    case 46:
      b2 = env0;
      t41 = env1;
      t25 = env2;
      t39 = env3;
      r2 = env4;
      P = env5;
      break;
    case 47:
      b2 = env0;
      t41 = env1;
      t43 = env2;
      t25 = env3;
      t39 = env4;
      r2 = env5;
      P = env6;
      break;
    case 48:
      b2 = env0;
      t41 = env1;
      t25 = env2;
      t39 = env3;
      t43 = env4;
      P = env5;
      break;
    case 49:
      b2 = env0;
      t41 = env1;
      t25 = env2;
      t39 = env3;
      t46 = env4;
      t43 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var b1 = this.bodyA;
      var b2 = this.bodyB;
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
      r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
      $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
      $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
      var t1 = b2.get$sweep().get$center().get$x();
    case 1:
      state0 = 0;
      var t3 = r2.x;
    case 2:
      state0 = 0;
      t3 = $.add(t1, t3);
      t1 = b1.get$sweep().get$center().get$x();
    case 3:
      state0 = 0;
      t1 = $.sub(t3, t1);
      t3 = r1.x;
    case 4:
      state0 = 0;
      t3 = $.sub(t1, t3);
      t1 = this.u;
      t1.x = t3;
      t3 = b2.get$sweep().get$center().get$y();
    case 5:
      state0 = 0;
      var t8 = r2.y;
    case 6:
      state0 = 0;
      t8 = $.add(t3, t8);
      t3 = b1.get$sweep().get$center().get$y();
    case 7:
      state0 = 0;
      t3 = $.sub(t8, t3);
      t8 = r1.y;
    case 8:
      state0 = 0;
      t1.y = $.sub(t3, t8);
      var len = $.get$length(t1);
    case 9:
      state0 = 0;
    default:
      if (state0 === 11 || state0 === 10 || state0 === 0 && $.gtB(len, 0.005))
        switch (state0) {
          case 0:
            var t2 = t1.x;
          case 10:
            state0 = 0;
            if (typeof len !== 'number')
              throw $.iae(len);
            var t4 = 1 / len;
            t1.x = $.mul(t2, t4);
            var t5 = t1.y;
          case 11:
            state0 = 0;
            t1.y = $.mul(t5, t4);
        }
      else
        t1.setCoords$2(0, 0);
      t2 = r1.x;
    case 12:
      state0 = 0;
      t4 = t1.y;
    case 13:
      state0 = 0;
      t4 = $.mul(t2, t4);
      t2 = r1.y;
    case 14:
      state0 = 0;
      var t7 = t1.x;
    case 15:
      state0 = 0;
      var cr1u = $.sub(t4, $.mul(t2, t7));
      t4 = r2.x;
    case 16:
      state0 = 0;
      var t10 = t1.y;
    case 17:
      state0 = 0;
      t10 = $.mul(t4, t10);
      t4 = r2.y;
    case 18:
      state0 = 0;
      var t13 = t1.x;
    case 19:
      state0 = 0;
      var cr2u = $.sub(t10, $.mul(t4, t13));
      t10 = b1.get$invMass();
    case 20:
      state0 = 0;
      var t16 = b1.get$invInertia();
    case 21:
      state0 = 0;
      t10 = $.add(t10, $.mul($.mul(t16, cr1u), cr1u));
      var t18 = b2.get$invMass();
    case 22:
      state0 = 0;
      t18 = $.add(t10, t18);
      t10 = b2.get$invInertia();
    case 23:
      state0 = 0;
      var invMass = $.add(t18, $.mul($.mul(t10, cr2u), cr2u));
      if (typeof invMass !== 'number')
        throw $.iae(invMass);
      this.mass = 1 / invMass;
      t2 = this.frequencyHz;
    case 24:
      state0 = 0;
    case 25:
      if (state0 === 25 || state0 === 0 && $.gtB(t2, 0))
        switch (state0) {
          case 0:
            t2 = $.get$length(this);
          case 25:
            state0 = 0;
            var C = $.sub(len, t2);
            t2 = this.frequencyHz;
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            var omega = 6.283185307179586 * t2;
            t2 = this.mass;
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t4 = 2 * t2;
            t5 = this.dampingRatio;
            if (typeof t5 !== 'number')
              throw $.iae(t5);
            var d = t4 * t5 * omega;
            var k = t2 * omega * omega;
            var t6 = step.dt;
            if (typeof k !== 'number')
              throw $.iae(k);
            this.gamma = t6 * (d + t6 * k);
            t2 = this.gamma;
            this.gamma = !(t2 === 0) ? 1 / t2 : 0;
            this.bias = $.mul($.mul($.mul(C, step.dt), k), this.gamma);
            this.mass = invMass + this.gamma;
            t2 = this.mass;
            if (!(t2 === 0)) {
              if (typeof t2 !== 'number')
                throw $.iae(t2);
              t2 = 1 / t2;
            } else
              t2 = 0;
            this.mass = t2;
        }
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
      if (state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 0 && step.warmStarting)
        switch (state0) {
          case 0:
            this.impulse = this.impulse * step.dtRatio;
            var P = $.Vector$(0, 0);
            P.setFrom$1(t1).mulLocal$1(this.impulse);
            t2 = b1.get$linearVelocity();
            t3 = t2.get$x();
          case 26:
            state0 = 0;
            t5 = b1.get$invMass();
          case 27:
            state0 = 0;
            t7 = P.x;
          case 28:
            state0 = 0;
            t2.set$x($.sub(t3, $.mul(t5, t7)));
            t2 = b1.get$linearVelocity();
            var t9 = t2.get$y();
          case 29:
            state0 = 0;
            var t11 = b1.get$invMass();
          case 30:
            state0 = 0;
            t13 = P.y;
          case 31:
            state0 = 0;
            t2.set$y($.sub(t9, $.mul(t11, t13)));
            t2 = b1.get$angularVelocity();
          case 32:
            state0 = 0;
            t16 = b1.get$invInertia();
          case 33:
            state0 = 0;
            t18 = r1.x;
          case 34:
            state0 = 0;
            var t20 = P.y;
          case 35:
            state0 = 0;
            t20 = $.mul(t18, t20);
            t18 = r1.y;
          case 36:
            state0 = 0;
            var t23 = P.x;
          case 37:
            state0 = 0;
            b1.set$angularVelocity($.sub(t2, $.mul(t16, $.sub(t20, $.mul(t18, t23)))));
            var t25 = b2.get$linearVelocity();
            var t26 = t25.get$x();
          case 38:
            state0 = 0;
            var t28 = b2.get$invMass();
          case 39:
            state0 = 0;
            var t30 = P.x;
          case 40:
            state0 = 0;
            t25.set$x($.add(t26, $.mul(t28, t30)));
            t25 = b2.get$linearVelocity();
            var t32 = t25.get$y();
          case 41:
            state0 = 0;
            var t34 = b2.get$invMass();
          case 42:
            state0 = 0;
            var t36 = P.y;
          case 43:
            state0 = 0;
            t25.set$y($.add(t32, $.mul(t34, t36)));
            t25 = b2.get$angularVelocity();
          case 44:
            state0 = 0;
            var t39 = b2.get$invInertia();
          case 45:
            state0 = 0;
            var t41 = r2.x;
          case 46:
            state0 = 0;
            var t43 = P.y;
          case 47:
            state0 = 0;
            t43 = $.mul(t41, t43);
            t41 = r2.y;
          case 48:
            state0 = 0;
            var t46 = P.x;
          case 49:
            state0 = 0;
            b2.set$angularVelocity($.add(t25, $.mul(t39, $.sub(t43, $.mul(t41, t46)))));
        }
      else
        this.impulse = 0;
  }
},
 solveVelocityConstraints$1: function(step) {
  var b1 = this.bodyA;
  var b2 = this.bodyB;
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
  r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
  $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
  $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
  var v1 = $.Vector$(0, 0);
  var v2 = $.Vector$(0, 0);
  $.Vector_crossNumAndVectorToOut(b1.get$angularVelocity(), r1, v1);
  $.Vector_crossNumAndVectorToOut(b2.get$angularVelocity(), r2, v2);
  v1.addLocal$1(b1.get$linearVelocity());
  v2.addLocal$1(b2.get$linearVelocity());
  var t1 = this.u;
  var t2 = v2.subLocal$1(v1);
  var t3 = t1.x;
  if (typeof t3 !== 'number')
    return this.solveVelocityConstraints$1$bailout(1, b2, t1, t3, r1, r2, t2, b1, 0, 0);
  var t5 = t2.get$x();
  if (typeof t5 !== 'number')
    return this.solveVelocityConstraints$1$bailout(2, b2, t1, t3, r1, r2, t2, t5, b1, 0);
  t5 = t3 * t5;
  t3 = t1.y;
  if (typeof t3 !== 'number')
    return this.solveVelocityConstraints$1$bailout(3, b2, t1, t3, r1, r2, t2, t5, b1, 0);
  t2 = t2.get$y();
  if (typeof t2 !== 'number')
    return this.solveVelocityConstraints$1$bailout(4, b2, t2, t1, t3, r1, r2, t5, b1, 0);
  var Cdot = t5 + t3 * t2;
  t5 = this.mass;
  if (typeof t5 !== 'number')
    return this.solveVelocityConstraints$1$bailout(5, b2, t1, Cdot, t5, r1, r2, b1, 0, 0);
  t5 = -t5;
  var t10 = this.bias;
  if (typeof t10 !== 'number')
    return this.solveVelocityConstraints$1$bailout(6, b2, t1, Cdot, t5, r1, r2, t10, b1, 0);
  t10 = Cdot + t10;
  var t12 = this.gamma;
  var t13 = this.impulse;
  var imp = t5 * (t10 + t12 * t13);
  this.impulse = t13 + imp;
  t5 = t1.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  var Px = imp * t5;
  t1 = t1.y;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var Py = imp * t1;
  t1 = b1.get$linearVelocity();
  t5 = t1.get$x();
  if (typeof t5 !== 'number')
    return this.solveVelocityConstraints$1$bailout(7, b2, t5, t1, r1, r2, Px, Py, b1, 0);
  var t15 = b1.get$invMass();
  if (typeof t15 !== 'number')
    return this.solveVelocityConstraints$1$bailout(8, b2, t5, t15, t1, r1, r2, Px, Py, b1);
  t1.set$x(t5 - t15 * Px);
  t1 = b1.get$linearVelocity();
  var t17 = t1.get$y();
  if (typeof t17 !== 'number')
    return this.solveVelocityConstraints$1$bailout(9, b2, t1, r1, r2, Px, t17, Py, b1, 0);
  var t19 = b1.get$invMass();
  if (typeof t19 !== 'number')
    return this.solveVelocityConstraints$1$bailout(10, b2, t1, r1, r2, Px, t17, t19, Py, b1);
  t1.set$y(t17 - t19 * Py);
  t1 = b1.get$angularVelocity();
  if (typeof t1 !== 'number')
    return this.solveVelocityConstraints$1$bailout(11, b2, b1, r1, r2, Px, Py, t1, 0, 0);
  var t22 = b1.get$invInertia();
  if (typeof t22 !== 'number')
    return this.solveVelocityConstraints$1$bailout(12, b2, t22, b1, r1, r2, Px, Py, t1, 0);
  var t24 = r1.x;
  if (typeof t24 !== 'number')
    return this.solveVelocityConstraints$1$bailout(13, b2, t22, b1, t24, r1, r2, Px, Py, t1);
  t24 *= Py;
  var t26 = r1.y;
  if (typeof t26 !== 'number')
    return this.solveVelocityConstraints$1$bailout(14, b2, t22, t26, t24, t1, r2, Px, Py, b1);
  b1.set$angularVelocity(t1 - t22 * (t24 - t26 * Px));
  var t28 = b2.get$linearVelocity();
  var t29 = t28.get$x();
  if (typeof t29 !== 'number')
    return this.solveVelocityConstraints$1$bailout(15, b2, t28, r2, Px, Py, t29, 0, 0, 0);
  var t31 = b2.get$invMass();
  if (typeof t31 !== 'number')
    return this.solveVelocityConstraints$1$bailout(16, b2, t31, t28, r2, Px, Py, t29, 0, 0);
  t28.set$x(t29 + t31 * Px);
  t28 = b2.get$linearVelocity();
  var t33 = t28.get$y();
  if (typeof t33 !== 'number')
    return this.solveVelocityConstraints$1$bailout(17, b2, t28, t33, r2, Px, Py, 0, 0, 0);
  var t35 = b2.get$invMass();
  if (typeof t35 !== 'number')
    return this.solveVelocityConstraints$1$bailout(18, b2, t28, t33, t35, r2, Px, Py, 0, 0);
  t28.set$y(t33 + t35 * Py);
  t28 = b2.get$angularVelocity();
  if (typeof t28 !== 'number')
    return this.solveVelocityConstraints$1$bailout(19, b2, r2, Px, Py, t28, 0, 0, 0, 0);
  var t38 = b2.get$invInertia();
  if (typeof t38 !== 'number')
    return this.solveVelocityConstraints$1$bailout(20, b2, t28, r2, Px, Py, t38, 0, 0, 0);
  var t40 = r2.x;
  if (typeof t40 !== 'number')
    return this.solveVelocityConstraints$1$bailout(21, b2, t40, t38, r2, Px, Py, t28, 0, 0);
  t40 *= Py;
  var t42 = r2.y;
  if (typeof t42 !== 'number')
    return this.solveVelocityConstraints$1$bailout(22, b2, t40, t42, Px, t28, t38, 0, 0, 0);
  b2.set$angularVelocity(t28 + t38 * (t40 - t42 * Px));
},
 solveVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      b2 = env0;
      t1 = env1;
      t3 = env2;
      r1 = env3;
      r2 = env4;
      t2 = env5;
      b1 = env6;
      break;
    case 2:
      b2 = env0;
      t1 = env1;
      t3 = env2;
      r1 = env3;
      r2 = env4;
      t2 = env5;
      t5 = env6;
      b1 = env7;
      break;
    case 3:
      b2 = env0;
      t1 = env1;
      t3 = env2;
      r1 = env3;
      r2 = env4;
      t2 = env5;
      t5 = env6;
      b1 = env7;
      break;
    case 4:
      b2 = env0;
      t2 = env1;
      t1 = env2;
      t3 = env3;
      r1 = env4;
      r2 = env5;
      t5 = env6;
      b1 = env7;
      break;
    case 5:
      b2 = env0;
      t1 = env1;
      Cdot = env2;
      t5 = env3;
      r1 = env4;
      r2 = env5;
      b1 = env6;
      break;
    case 6:
      b2 = env0;
      t1 = env1;
      Cdot = env2;
      t5 = env3;
      r1 = env4;
      r2 = env5;
      t10 = env6;
      b1 = env7;
      break;
    case 7:
      b2 = env0;
      t12 = env1;
      t1 = env2;
      r1 = env3;
      r2 = env4;
      Px = env5;
      Py = env6;
      b1 = env7;
      break;
    case 8:
      b2 = env0;
      t12 = env1;
      t14 = env2;
      t1 = env3;
      r1 = env4;
      r2 = env5;
      Px = env6;
      Py = env7;
      b1 = env8;
      break;
    case 9:
      b2 = env0;
      t1 = env1;
      r1 = env2;
      r2 = env3;
      Px = env4;
      t16 = env5;
      Py = env6;
      b1 = env7;
      break;
    case 10:
      b2 = env0;
      t1 = env1;
      r1 = env2;
      r2 = env3;
      Px = env4;
      t16 = env5;
      t18 = env6;
      Py = env7;
      b1 = env8;
      break;
    case 11:
      b2 = env0;
      b1 = env1;
      r1 = env2;
      r2 = env3;
      Px = env4;
      Py = env5;
      t1 = env6;
      break;
    case 12:
      b2 = env0;
      t21 = env1;
      b1 = env2;
      r1 = env3;
      r2 = env4;
      Px = env5;
      Py = env6;
      t1 = env7;
      break;
    case 13:
      b2 = env0;
      t21 = env1;
      b1 = env2;
      t23 = env3;
      r1 = env4;
      r2 = env5;
      Px = env6;
      Py = env7;
      t1 = env8;
      break;
    case 14:
      b2 = env0;
      t21 = env1;
      t25 = env2;
      t23 = env3;
      t1 = env4;
      r2 = env5;
      Px = env6;
      Py = env7;
      b1 = env8;
      break;
    case 15:
      b2 = env0;
      t27 = env1;
      r2 = env2;
      Px = env3;
      Py = env4;
      t28 = env5;
      break;
    case 16:
      b2 = env0;
      t30 = env1;
      t27 = env2;
      r2 = env3;
      Px = env4;
      Py = env5;
      t28 = env6;
      break;
    case 17:
      b2 = env0;
      t27 = env1;
      t32 = env2;
      r2 = env3;
      Px = env4;
      Py = env5;
      break;
    case 18:
      b2 = env0;
      t27 = env1;
      t32 = env2;
      t34 = env3;
      r2 = env4;
      Px = env5;
      Py = env6;
      break;
    case 19:
      b2 = env0;
      r2 = env1;
      Px = env2;
      Py = env3;
      t27 = env4;
      break;
    case 20:
      b2 = env0;
      t27 = env1;
      r2 = env2;
      Px = env3;
      Py = env4;
      t37 = env5;
      break;
    case 21:
      b2 = env0;
      t39 = env1;
      t37 = env2;
      r2 = env3;
      Px = env4;
      Py = env5;
      t27 = env6;
      break;
    case 22:
      b2 = env0;
      t39 = env1;
      t41 = env2;
      Px = env3;
      t27 = env4;
      t37 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var b1 = this.bodyA;
      var b2 = this.bodyB;
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
      r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
      $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
      $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
      var v1 = $.Vector$(0, 0);
      var v2 = $.Vector$(0, 0);
      $.Vector_crossNumAndVectorToOut(b1.get$angularVelocity(), r1, v1);
      $.Vector_crossNumAndVectorToOut(b2.get$angularVelocity(), r2, v2);
      v1.addLocal$1(b1.get$linearVelocity());
      v2.addLocal$1(b2.get$linearVelocity());
      var t1 = this.u;
      var t2 = v2.subLocal$1(v1);
      var t3 = t1.x;
    case 1:
      state0 = 0;
      var t5 = t2.get$x();
    case 2:
      state0 = 0;
      t5 = $.mul(t3, t5);
      t3 = t1.y;
    case 3:
      state0 = 0;
      t2 = t2.get$y();
    case 4:
      state0 = 0;
      var Cdot = $.add(t5, $.mul(t3, t2));
      t5 = this.mass;
    case 5:
      state0 = 0;
      t5 = $.neg(t5);
      var t10 = this.bias;
    case 6:
      state0 = 0;
      var imp = $.mul(t5, $.add($.add(Cdot, t10), this.gamma * this.impulse));
      t5 = this.impulse;
      if (typeof imp !== 'number')
        throw $.iae(imp);
      this.impulse = t5 + imp;
      var t12 = t1.x;
      if (typeof t12 !== 'number')
        throw $.iae(t12);
      var Px = imp * t12;
      t1 = t1.y;
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      var Py = imp * t1;
      t1 = b1.get$linearVelocity();
      t12 = t1.get$x();
    case 7:
      state0 = 0;
      var t14 = b1.get$invMass();
    case 8:
      state0 = 0;
      t1.set$x($.sub(t12, $.mul(t14, Px)));
      t1 = b1.get$linearVelocity();
      var t16 = t1.get$y();
    case 9:
      state0 = 0;
      var t18 = b1.get$invMass();
    case 10:
      state0 = 0;
      t1.set$y($.sub(t16, $.mul(t18, Py)));
      t1 = b1.get$angularVelocity();
    case 11:
      state0 = 0;
      var t21 = b1.get$invInertia();
    case 12:
      state0 = 0;
      var t23 = r1.x;
    case 13:
      state0 = 0;
      t23 = $.mul(t23, Py);
      var t25 = r1.y;
    case 14:
      state0 = 0;
      b1.set$angularVelocity($.sub(t1, $.mul(t21, $.sub(t23, $.mul(t25, Px)))));
      var t27 = b2.get$linearVelocity();
      var t28 = t27.get$x();
    case 15:
      state0 = 0;
      var t30 = b2.get$invMass();
    case 16:
      state0 = 0;
      t27.set$x($.add(t28, $.mul(t30, Px)));
      t27 = b2.get$linearVelocity();
      var t32 = t27.get$y();
    case 17:
      state0 = 0;
      var t34 = b2.get$invMass();
    case 18:
      state0 = 0;
      t27.set$y($.add(t32, $.mul(t34, Py)));
      t27 = b2.get$angularVelocity();
    case 19:
      state0 = 0;
      var t37 = b2.get$invInertia();
    case 20:
      state0 = 0;
      var t39 = r2.x;
    case 21:
      state0 = 0;
      t39 = $.mul(t39, Py);
      var t41 = r2.y;
    case 22:
      state0 = 0;
      b2.set$angularVelocity($.add(t27, $.mul(t37, $.sub(t39, $.mul(t41, Px)))));
  }
},
 solvePositionConstraints$1: function(baumgarte) {
  var t1 = this.frequencyHz;
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(1, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  if (t1 > 0)
    return true;
  var b1 = this.bodyA;
  var b2 = this.bodyB;
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  var d = $.Vector$(0, 0);
  r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
  r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
  $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
  $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
  t1 = b2.get$sweep().get$center().get$x();
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(2, b2, r1, r2, d, t1, b1, 0, 0, 0, 0, 0);
  var t3 = r2.x;
  if (typeof t3 !== 'number')
    return this.solvePositionConstraints$1$bailout(3, b2, r1, r2, t3, d, t1, b1, 0, 0, 0, 0);
  t3 = t1 + t3;
  t1 = b1.get$sweep().get$center().get$x();
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(4, b2, r1, r2, d, t3, t1, b1, 0, 0, 0, 0);
  t1 = t3 - t1;
  t3 = r1.x;
  if (typeof t3 !== 'number')
    return this.solvePositionConstraints$1$bailout(5, b2, r1, r2, d, t1, t3, b1, 0, 0, 0, 0);
  d.x = t1 - t3;
  var t7 = b2.get$sweep().get$center().get$y();
  if (typeof t7 !== 'number')
    return this.solvePositionConstraints$1$bailout(6, b2, r1, r2, d, t7, b1, 0, 0, 0, 0, 0);
  var t9 = r2.y;
  if (typeof t9 !== 'number')
    return this.solvePositionConstraints$1$bailout(7, b2, r1, r2, d, t7, t9, b1, 0, 0, 0, 0);
  t9 = t7 + t9;
  t7 = b1.get$sweep().get$center().get$y();
  if (typeof t7 !== 'number')
    return this.solvePositionConstraints$1$bailout(8, b2, r1, r2, d, t9, t7, b1, 0, 0, 0, 0);
  t7 = t9 - t7;
  t9 = r1.y;
  if (typeof t9 !== 'number')
    return this.solvePositionConstraints$1$bailout(9, b2, r1, r2, d, t9, t7, b1, 0, 0, 0, 0);
  d.y = t7 - t9;
  var len = d.normalize$0();
  if (typeof len !== 'number')
    return this.solvePositionConstraints$1$bailout(10, b2, r1, r2, len, d, b1, 0, 0, 0, 0, 0);
  var t14 = $.get$length(this);
  if (typeof t14 !== 'number')
    return this.solvePositionConstraints$1$bailout(11, b2, r1, r2, len, d, t14, b1, 0, 0, 0, 0);
  var C = $.max(-0.2, $.min(len - t14, 0.2));
  var t16 = this.mass;
  if (typeof t16 !== 'number')
    return this.solvePositionConstraints$1$bailout(12, C, b2, r2, r1, d, t16, b1, 0, 0, 0, 0);
  var imp = -t16 * C;
  var t18 = this.u;
  t18.setFrom$1(d);
  var t19 = t18.x;
  if (typeof t19 !== 'number')
    return this.solvePositionConstraints$1$bailout(13, C, b2, r2, r1, imp, t18, t19, b1, 0, 0, 0);
  var Px = imp * t19;
  t18 = t18.y;
  if (typeof t18 !== 'number')
    return this.solvePositionConstraints$1$bailout(14, C, b2, r2, r1, imp, Px, t18, b1, 0, 0, 0);
  var Py = imp * t18;
  t18 = b1.get$sweep().get$center();
  var t21 = t18.get$x();
  if (typeof t21 !== 'number')
    return this.solvePositionConstraints$1$bailout(15, C, t18, t21, b2, r2, r1, Py, Px, b1, 0, 0);
  var t23 = b1.get$invMass();
  if (typeof t23 !== 'number')
    return this.solvePositionConstraints$1$bailout(16, C, t18, t21, t23, r2, b2, Py, r1, Px, b1, 0);
  t18.set$x(t21 - t23 * Px);
  t18 = b1.get$sweep().get$center();
  var t25 = t18.get$y();
  if (typeof t25 !== 'number')
    return this.solvePositionConstraints$1$bailout(17, C, b2, r2, r1, Py, t18, t25, Px, b1, 0, 0);
  var t27 = b1.get$invMass();
  if (typeof t27 !== 'number')
    return this.solvePositionConstraints$1$bailout(18, C, b2, r2, r1, Py, t18, t25, t27, Px, b1, 0);
  t18.set$y(t25 - t27 * Py);
  t18 = b1.get$sweep();
  var t29 = t18.get$angle();
  if (typeof t29 !== 'number')
    return this.solvePositionConstraints$1$bailout(19, C, b2, r2, t18, t29, Py, r1, Px, b1, 0, 0);
  var t31 = b1.get$invInertia();
  if (typeof t31 !== 'number')
    return this.solvePositionConstraints$1$bailout(20, C, b2, r2, t18, t29, t31, r1, Py, Px, b1, 0);
  var t33 = r1.x;
  if (typeof t33 !== 'number')
    return this.solvePositionConstraints$1$bailout(21, C, b2, r2, t18, t29, t33, r1, t31, Py, Px, b1);
  t33 *= Py;
  var t35 = r1.y;
  if (typeof t35 !== 'number')
    return this.solvePositionConstraints$1$bailout(22, t35, C, r2, b2, t29, t18, t31, t33, Py, Px, b1);
  t18.set$angle(t29 - t31 * (t33 - t35 * Px));
  t18 = b2.get$sweep().get$center();
  var t37 = t18.get$x();
  if (typeof t37 !== 'number')
    return this.solvePositionConstraints$1$bailout(23, C, b2, r2, t18, t37, b1, Px, Py, 0, 0, 0);
  var t39 = b2.get$invMass();
  if (typeof t39 !== 'number')
    return this.solvePositionConstraints$1$bailout(24, C, b2, r2, t18, t37, t39, b1, Px, Py, 0, 0);
  t18.set$x(t37 + t39 * Px);
  t18 = b2.get$sweep().get$center();
  var t41 = t18.get$y();
  if (typeof t41 !== 'number')
    return this.solvePositionConstraints$1$bailout(25, C, b2, r2, b1, Px, t18, t41, Py, 0, 0, 0);
  var t43 = b2.get$invMass();
  if (typeof t43 !== 'number')
    return this.solvePositionConstraints$1$bailout(26, C, b2, r2, b1, Px, t18, t41, t43, Py, 0, 0);
  t18.set$y(t41 + t43 * Py);
  t18 = b2.get$sweep();
  var t45 = t18.get$angle();
  if (typeof t45 !== 'number')
    return this.solvePositionConstraints$1$bailout(27, C, b2, r2, t18, t45, Py, Px, b1, 0, 0, 0);
  var t47 = b2.get$invInertia();
  if (typeof t47 !== 'number')
    return this.solvePositionConstraints$1$bailout(28, C, b2, r2, t18, t45, t47, b1, Px, Py, 0, 0);
  var t49 = r2.x;
  if (typeof t49 !== 'number')
    return this.solvePositionConstraints$1$bailout(29, C, b2, r2, t18, t45, t47, t49, b1, Px, Py, 0);
  t49 *= Py;
  var t51 = r2.y;
  if (typeof t51 !== 'number')
    return this.solvePositionConstraints$1$bailout(30, C, b2, t51, t18, t45, t47, t49, Px, b1, 0, 0);
  t18.set$angle(t45 + t47 * (t49 - t51 * Px));
  b1.synchronizeTransform$0();
  b2.synchronizeTransform$0();
  t18 = $.abs(C);
  if (typeof t18 !== 'number')
    return this.solvePositionConstraints$1$bailout(31, t18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return t18 < 0.005;
},
 solvePositionConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      d = env3;
      t1 = env4;
      b1 = env5;
      break;
    case 3:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      t3 = env3;
      d = env4;
      t1 = env5;
      b1 = env6;
      break;
    case 4:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      d = env3;
      t3 = env4;
      t1 = env5;
      b1 = env6;
      break;
    case 5:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      d = env3;
      t1 = env4;
      t3 = env5;
      b1 = env6;
      break;
    case 6:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      d = env3;
      t7 = env4;
      b1 = env5;
      break;
    case 7:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      d = env3;
      t7 = env4;
      t9 = env5;
      b1 = env6;
      break;
    case 8:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      d = env3;
      t9 = env4;
      t7 = env5;
      b1 = env6;
      break;
    case 9:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      d = env3;
      t9 = env4;
      t7 = env5;
      b1 = env6;
      break;
    case 10:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      len = env3;
      d = env4;
      b1 = env5;
      break;
    case 11:
      b2 = env0;
      r1 = env1;
      r2 = env2;
      len = env3;
      d = env4;
      t14 = env5;
      b1 = env6;
      break;
    case 12:
      C = env0;
      b2 = env1;
      r2 = env2;
      r1 = env3;
      d = env4;
      t16 = env5;
      b1 = env6;
      break;
    case 13:
      C = env0;
      b2 = env1;
      r2 = env2;
      r1 = env3;
      imp = env4;
      t18 = env5;
      t19 = env6;
      b1 = env7;
      break;
    case 14:
      C = env0;
      b2 = env1;
      r2 = env2;
      r1 = env3;
      imp = env4;
      Px = env5;
      t18 = env6;
      b1 = env7;
      break;
    case 15:
      C = env0;
      t18 = env1;
      t21 = env2;
      b2 = env3;
      r2 = env4;
      r1 = env5;
      Py = env6;
      Px = env7;
      b1 = env8;
      break;
    case 16:
      C = env0;
      t18 = env1;
      t21 = env2;
      t23 = env3;
      r2 = env4;
      b2 = env5;
      Py = env6;
      r1 = env7;
      Px = env8;
      b1 = env9;
      break;
    case 17:
      C = env0;
      b2 = env1;
      r2 = env2;
      r1 = env3;
      Py = env4;
      t18 = env5;
      t25 = env6;
      Px = env7;
      b1 = env8;
      break;
    case 18:
      C = env0;
      b2 = env1;
      r2 = env2;
      r1 = env3;
      Py = env4;
      t18 = env5;
      t25 = env6;
      t27 = env7;
      Px = env8;
      b1 = env9;
      break;
    case 19:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t29 = env4;
      Py = env5;
      r1 = env6;
      Px = env7;
      b1 = env8;
      break;
    case 20:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t29 = env4;
      t31 = env5;
      r1 = env6;
      Py = env7;
      Px = env8;
      b1 = env9;
      break;
    case 21:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t29 = env4;
      t33 = env5;
      r1 = env6;
      t31 = env7;
      Py = env8;
      Px = env9;
      b1 = env10;
      break;
    case 22:
      t35 = env0;
      C = env1;
      r2 = env2;
      b2 = env3;
      t29 = env4;
      t18 = env5;
      t31 = env6;
      t33 = env7;
      Py = env8;
      Px = env9;
      b1 = env10;
      break;
    case 23:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t37 = env4;
      b1 = env5;
      Px = env6;
      Py = env7;
      break;
    case 24:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t37 = env4;
      t39 = env5;
      b1 = env6;
      Px = env7;
      Py = env8;
      break;
    case 25:
      C = env0;
      b2 = env1;
      r2 = env2;
      b1 = env3;
      Px = env4;
      t18 = env5;
      t41 = env6;
      Py = env7;
      break;
    case 26:
      C = env0;
      b2 = env1;
      r2 = env2;
      b1 = env3;
      Px = env4;
      t18 = env5;
      t41 = env6;
      t43 = env7;
      Py = env8;
      break;
    case 27:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t45 = env4;
      Py = env5;
      Px = env6;
      b1 = env7;
      break;
    case 28:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t45 = env4;
      t47 = env5;
      b1 = env6;
      Px = env7;
      Py = env8;
      break;
    case 29:
      C = env0;
      b2 = env1;
      r2 = env2;
      t18 = env3;
      t45 = env4;
      t47 = env5;
      t49 = env6;
      b1 = env7;
      Px = env8;
      Py = env9;
      break;
    case 30:
      C = env0;
      b2 = env1;
      t51 = env2;
      t18 = env3;
      t45 = env4;
      t47 = env5;
      t49 = env6;
      Px = env7;
      b1 = env8;
      break;
    case 31:
      t18 = env0;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.frequencyHz;
    case 1:
      state0 = 0;
      if ($.gtB(t1, 0))
        return true;
      var b1 = this.bodyA;
      var b2 = this.bodyB;
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      var d = $.Vector$(0, 0);
      r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
      r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
      $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
      $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
      t1 = b2.get$sweep().get$center().get$x();
    case 2:
      state0 = 0;
      var t3 = r2.x;
    case 3:
      state0 = 0;
      t3 = $.add(t1, t3);
      t1 = b1.get$sweep().get$center().get$x();
    case 4:
      state0 = 0;
      t1 = $.sub(t3, t1);
      t3 = r1.x;
    case 5:
      state0 = 0;
      d.x = $.sub(t1, t3);
      var t7 = b2.get$sweep().get$center().get$y();
    case 6:
      state0 = 0;
      var t9 = r2.y;
    case 7:
      state0 = 0;
      t9 = $.add(t7, t9);
      t7 = b1.get$sweep().get$center().get$y();
    case 8:
      state0 = 0;
      t7 = $.sub(t9, t7);
      t9 = r1.y;
    case 9:
      state0 = 0;
      d.y = $.sub(t7, t9);
      var len = d.normalize$0();
    case 10:
      state0 = 0;
      var t14 = $.get$length(this);
    case 11:
      state0 = 0;
      var C = $.max(-0.2, $.min($.sub(len, t14), 0.2));
      var t16 = this.mass;
    case 12:
      state0 = 0;
      var imp = $.mul($.neg(t16), C);
      var t18 = this.u;
      t18.setFrom$1(d);
      var t19 = t18.x;
    case 13:
      state0 = 0;
      var Px = $.mul(imp, t19);
      t18 = t18.y;
    case 14:
      state0 = 0;
      var Py = $.mul(imp, t18);
      t18 = b1.get$sweep().get$center();
      var t21 = t18.get$x();
    case 15:
      state0 = 0;
      var t23 = b1.get$invMass();
    case 16:
      state0 = 0;
      t18.set$x($.sub(t21, $.mul(t23, Px)));
      t18 = b1.get$sweep().get$center();
      var t25 = t18.get$y();
    case 17:
      state0 = 0;
      var t27 = b1.get$invMass();
    case 18:
      state0 = 0;
      t18.set$y($.sub(t25, $.mul(t27, Py)));
      t18 = b1.get$sweep();
      var t29 = t18.get$angle();
    case 19:
      state0 = 0;
      var t31 = b1.get$invInertia();
    case 20:
      state0 = 0;
      var t33 = r1.x;
    case 21:
      state0 = 0;
      t33 = $.mul(t33, Py);
      var t35 = r1.y;
    case 22:
      state0 = 0;
      t18.set$angle($.sub(t29, $.mul(t31, $.sub(t33, $.mul(t35, Px)))));
      t18 = b2.get$sweep().get$center();
      var t37 = t18.get$x();
    case 23:
      state0 = 0;
      var t39 = b2.get$invMass();
    case 24:
      state0 = 0;
      t18.set$x($.add(t37, $.mul(t39, Px)));
      t18 = b2.get$sweep().get$center();
      var t41 = t18.get$y();
    case 25:
      state0 = 0;
      var t43 = b2.get$invMass();
    case 26:
      state0 = 0;
      t18.set$y($.add(t41, $.mul(t43, Py)));
      t18 = b2.get$sweep();
      var t45 = t18.get$angle();
    case 27:
      state0 = 0;
      var t47 = b2.get$invInertia();
    case 28:
      state0 = 0;
      var t49 = r2.x;
    case 29:
      state0 = 0;
      t49 = $.mul(t49, Py);
      var t51 = r2.y;
    case 30:
      state0 = 0;
      t18.set$angle($.add(t45, $.mul(t47, $.sub(t49, $.mul(t51, Px)))));
      b1.synchronizeTransform$0();
      b2.synchronizeTransform$0();
      t18 = $.abs(C);
    case 31:
      state0 = 0;
      return $.lt(t18, 0.005);
  }
}
};

$$.DistanceJointDef = {"":
 ["localAnchorA?", "localAnchorB?", "length=", "frequencyHz?", "dampingRatio?", "type", "userData", "bodyA", "bodyB", "collideConnected"],
 "super": "JointDef",
 initialize$4: function(b1, b2, anchor1, anchor2) {
  this.bodyA = b1;
  this.bodyB = b2;
  this.localAnchorA.setFrom$1(this.bodyA.getLocalPoint$1(anchor1));
  this.localAnchorB.setFrom$1(this.bodyB.getLocalPoint$1(anchor2));
  var d = $.Vector$copy(anchor2);
  d.subLocal$1(anchor1);
  $.set$length(this, $.get$length(d));
},
 DistanceJointDef$0: function() {
  this.type = 3;
}
};

$$.FrictionJoint = {"":
 ["_localAnchorA", "_localAnchorB", "_linearImpulse", "_angularImpulse", "_maxForce", "_maxTorque", "type", "_prev", "_lib2_next", "edgeA", "edgeB", "bodyA", "bodyB", "islandFlag", "collideConnected", "userData", "localCenterA", "localCenterB", "invMassA", "invIA", "invMassB", "invIB"],
 "super": "Joint",
 get$maxForce: function() {
  return this._maxForce;
},
 get$maxTorque: function() {
  return this._maxTorque;
},
 initVelocityConstraints$1: function(step) {
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  r1.setFrom$1(this._localAnchorA).subLocal$1(this.bodyA.get$localCenter());
  r2.setFrom$1(this._localAnchorB).subLocal$1(this.bodyB.get$localCenter());
  $.Matrix22_mulMatrixAndVectorToOut(this.bodyA.get$originTransform().get$rotation(), r1, r1);
  $.Matrix22_mulMatrixAndVectorToOut(this.bodyB.get$originTransform().get$rotation(), r2, r2);
  var K = $.Matrix22$(null, null);
  var t1 = this.bodyA;
  var t2 = t1.get$invMass();
  if (typeof t2 !== 'number')
    return this.initVelocityConstraints$1$bailout(1, step, t2, r1, K, r2, 0, 0, 0);
  var t4 = this.bodyB;
  var t5 = t4.get$invMass();
  if (typeof t5 !== 'number')
    return this.initVelocityConstraints$1$bailout(2, step, t2, t5, r1, r2, K, 0, 0);
  t5 = t2 + t5;
  t1 = t1.get$invInertia();
  if (typeof t1 !== 'number')
    return this.initVelocityConstraints$1$bailout(3, step, t5, r1, t1, r2, K, 0, 0);
  var t7 = r1.y;
  if (typeof t7 !== 'number')
    return this.initVelocityConstraints$1$bailout(4, step, t5, r1, t1, r2, K, t7, 0);
  t1 *= t7;
  t5 += t1 * t7;
  t4 = t4.get$invInertia();
  if (typeof t4 !== 'number')
    return this.initVelocityConstraints$1$bailout(6, step, t4, r1, r2, K, t5, 0, 0);
  var t10 = r2.y;
  if (typeof t10 !== 'number')
    return this.initVelocityConstraints$1$bailout(7, step, t4, t10, r1, r2, K, t5, 0);
  t4 *= t10;
  t5 += t4 * t10;
  K.col1.set$x(t5);
  t5 = this.bodyA.get$invInertia();
  if (typeof t5 !== 'number')
    return this.initVelocityConstraints$1$bailout(9, step, t5, r1, K, r2, 0, 0, 0);
  t5 = -t5;
  var t13 = r1.x;
  if (typeof t13 !== 'number')
    return this.initVelocityConstraints$1$bailout(10, step, r1, t13, r2, K, t5, 0, 0);
  t13 = t5 * t13;
  t5 = r1.y;
  if (typeof t5 !== 'number')
    return this.initVelocityConstraints$1$bailout(11, step, t13, r1, t5, r2, K, 0, 0);
  t5 = t13 * t5;
  t13 = this.bodyB.get$invInertia();
  if (typeof t13 !== 'number')
    return this.initVelocityConstraints$1$bailout(12, step, t5, r1, t13, r2, K, 0, 0);
  var t17 = r2.x;
  if (typeof t17 !== 'number')
    return this.initVelocityConstraints$1$bailout(13, step, t5, r1, t13, r2, t17, K, 0);
  t17 = t13 * t17;
  t13 = r2.y;
  if (typeof t13 !== 'number')
    return this.initVelocityConstraints$1$bailout(14, step, t5, r1, r2, t17, t13, K, 0);
  t5 -= t17 * t13;
  K.col1.set$y(t5);
  t5 = K.col1.get$y();
  K.col2.set$x(t5);
  t5 = this.bodyA;
  var t20 = t5.get$invMass();
  if (typeof t20 !== 'number')
    return this.initVelocityConstraints$1$bailout(15, step, K, r1, t20, r2, 0, 0, 0);
  var t22 = this.bodyB;
  var t23 = t22.get$invMass();
  if (typeof t23 !== 'number')
    return this.initVelocityConstraints$1$bailout(16, step, r1, t20, r2, t23, K, 0, 0);
  t23 = t20 + t23;
  t5 = t5.get$invInertia();
  if (typeof t5 !== 'number')
    return this.initVelocityConstraints$1$bailout(17, step, r1, r2, t23, t5, K, 0, 0);
  var t25 = r1.x;
  if (typeof t25 !== 'number')
    return this.initVelocityConstraints$1$bailout(18, step, t25, r1, r2, t23, t5, K, 0);
  t5 *= t25;
  t23 += t5 * t25;
  t22 = t22.get$invInertia();
  if (typeof t22 !== 'number')
    return this.initVelocityConstraints$1$bailout(20, step, t23, r1, t22, r2, K, 0, 0);
  var t28 = r2.x;
  if (typeof t28 !== 'number')
    return this.initVelocityConstraints$1$bailout(21, step, t28, t23, r1, t22, r2, K, 0);
  t22 *= t28;
  t23 += t22 * t28;
  K.col2.set$y(t23);
  var linearMass = $.Matrix22$(null, null);
  linearMass.setFrom$1(K);
  linearMass.invertLocal$0();
  t23 = this.bodyA.get$invInertia();
  if (typeof t23 !== 'number')
    return this.initVelocityConstraints$1$bailout(23, step, r1, t23, r2, 0, 0, 0, 0);
  var t31 = this.bodyB.get$invInertia();
  if (typeof t31 !== 'number')
    return this.initVelocityConstraints$1$bailout(24, step, t31, r1, t23, r2, 0, 0, 0);
  if (t23 + t31 > 0)
    ;
  t1 = step.warmStarting;
  t2 = this._linearImpulse;
  if (t1) {
    t2.mulLocal$1(step.dtRatio);
    this._angularImpulse = this._angularImpulse * step.dtRatio;
    var P = $.Vector$(0, 0);
    P.setFrom$1(t2);
    t1 = this.bodyA.get$linearVelocity();
    t2 = t1.get$x();
    if (typeof t2 !== 'number')
      return this.initVelocityConstraints$1$bailout(25, t1, t2, P, r1, r2, 0, 0, 0);
    t4 = this.bodyA.get$invMass();
    if (typeof t4 !== 'number')
      return this.initVelocityConstraints$1$bailout(26, P, r1, t1, t2, r2, t4, 0, 0);
    var t6 = P.x;
    if (typeof t6 !== 'number')
      return this.initVelocityConstraints$1$bailout(27, t6, P, r1, t1, r2, t2, t4, 0);
    t1.set$x(t2 - t4 * t6);
    t1 = this.bodyA.get$linearVelocity();
    var t8 = t1.get$y();
    if (typeof t8 !== 'number')
      return this.initVelocityConstraints$1$bailout(28, t1, P, t8, r1, r2, 0, 0, 0);
    t10 = this.bodyA.get$invMass();
    if (typeof t10 !== 'number')
      return this.initVelocityConstraints$1$bailout(29, t1, P, t8, r1, t10, r2, 0, 0);
    var t12 = P.y;
    if (typeof t12 !== 'number')
      return this.initVelocityConstraints$1$bailout(30, t1, P, t8, r1, t10, r2, t12, 0);
    t1.set$y(t8 - t10 * t12);
    t1 = this.bodyA;
    var t14 = t1.get$angularVelocity();
    if (typeof t14 !== 'number')
      return this.initVelocityConstraints$1$bailout(31, t14, P, r1, t1, r2, 0, 0, 0);
    var t16 = this.bodyA.get$invInertia();
    if (typeof t16 !== 'number')
      return this.initVelocityConstraints$1$bailout(32, P, r1, t1, r2, t14, t16, 0, 0);
    var t18 = r1.x;
    if (typeof t18 !== 'number')
      return this.initVelocityConstraints$1$bailout(33, P, r1, t1, r2, t18, t14, t16, 0);
    t20 = P.y;
    if (typeof t20 !== 'number')
      return this.initVelocityConstraints$1$bailout(34, P, r1, t1, r2, t18, t20, t14, t16);
    t20 = t18 * t20;
    t18 = r1.y;
    if (typeof t18 !== 'number')
      return this.initVelocityConstraints$1$bailout(35, P, t20, t1, r2, t18, t14, t16, 0);
    t23 = P.x;
    if (typeof t23 !== 'number')
      return this.initVelocityConstraints$1$bailout(36, P, t20, t1, r2, t18, t23, t14, t16);
    t1.set$angularVelocity(t14 - t16 * (t20 - t18 * t23 + this._angularImpulse));
    t1 = this.bodyB.get$linearVelocity();
    t25 = t1.get$x();
    if (typeof t25 !== 'number')
      return this.initVelocityConstraints$1$bailout(37, P, t1, t25, r2, 0, 0, 0, 0);
    var t27 = this.bodyB.get$invMass();
    if (typeof t27 !== 'number')
      return this.initVelocityConstraints$1$bailout(38, P, t1, t25, t27, r2, 0, 0, 0);
    var t29 = P.x;
    if (typeof t29 !== 'number')
      return this.initVelocityConstraints$1$bailout(39, P, t1, t25, t27, r2, t29, 0, 0);
    t1.set$x(t25 + t27 * t29);
    t1 = this.bodyB.get$linearVelocity();
    t31 = t1.get$y();
    if (typeof t31 !== 'number')
      return this.initVelocityConstraints$1$bailout(40, t31, P, t1, r2, 0, 0, 0, 0);
    var t33 = this.bodyB.get$invMass();
    if (typeof t33 !== 'number')
      return this.initVelocityConstraints$1$bailout(41, t31, t33, P, t1, r2, 0, 0, 0);
    var t35 = P.y;
    if (typeof t35 !== 'number')
      return this.initVelocityConstraints$1$bailout(42, t33, t35, P, r2, t1, t31, 0, 0);
    t1.set$y(t31 + t33 * t35);
    t1 = this.bodyB;
    var t37 = t1.get$angularVelocity();
    if (typeof t37 !== 'number')
      return this.initVelocityConstraints$1$bailout(43, t37, t1, P, r2, 0, 0, 0, 0);
    var t39 = this.bodyB.get$invInertia();
    if (typeof t39 !== 'number')
      return this.initVelocityConstraints$1$bailout(44, t37, t1, P, t39, r2, 0, 0, 0);
    var t41 = r2.x;
    if (typeof t41 !== 'number')
      return this.initVelocityConstraints$1$bailout(45, t1, P, t41, r2, t37, t39, 0, 0);
    var t43 = P.y;
    if (typeof t43 !== 'number')
      return this.initVelocityConstraints$1$bailout(46, t1, P, t41, t43, r2, t37, t39, 0);
    t43 = t41 * t43;
    t41 = r2.y;
    if (typeof t41 !== 'number')
      return this.initVelocityConstraints$1$bailout(47, t1, P, t41, t37, t39, t43, 0, 0);
    var t46 = P.x;
    if (typeof t46 !== 'number')
      return this.initVelocityConstraints$1$bailout(48, t1, t41, t46, t37, t39, t43, 0, 0);
    t1.set$angularVelocity(t37 + t39 * (t43 - t41 * t46 + this._angularImpulse));
  } else {
    t2.setZero$0();
    this._angularImpulse = 0;
  }
},
 initVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      var step = env0;
      t1 = env1;
      r1 = env2;
      K = env3;
      r2 = env4;
      break;
    case 2:
      step = env0;
      t1 = env1;
      t3 = env2;
      r1 = env3;
      r2 = env4;
      K = env5;
      break;
    case 3:
      step = env0;
      t3 = env1;
      r1 = env2;
      t1 = env3;
      r2 = env4;
      K = env5;
      break;
    case 4:
      step = env0;
      t3 = env1;
      r1 = env2;
      t1 = env3;
      r2 = env4;
      K = env5;
      t6 = env6;
      break;
    case 5:
      step = env0;
      t3 = env1;
      r1 = env2;
      r2 = env3;
      t6 = env4;
      K = env5;
      t1 = env6;
      break;
    case 6:
      step = env0;
      t9 = env1;
      r1 = env2;
      r2 = env3;
      K = env4;
      t3 = env5;
      break;
    case 7:
      step = env0;
      t9 = env1;
      t11 = env2;
      r1 = env3;
      r2 = env4;
      K = env5;
      t3 = env6;
      break;
    case 8:
      step = env0;
      t9 = env1;
      t11 = env2;
      r1 = env3;
      r2 = env4;
      K = env5;
      t3 = env6;
      break;
    case 9:
      step = env0;
      t3 = env1;
      r1 = env2;
      K = env3;
      r2 = env4;
      break;
    case 10:
      step = env0;
      r1 = env1;
      t15 = env2;
      r2 = env3;
      K = env4;
      t3 = env5;
      break;
    case 11:
      step = env0;
      t15 = env1;
      r1 = env2;
      t3 = env3;
      r2 = env4;
      K = env5;
      break;
    case 12:
      step = env0;
      t3 = env1;
      r1 = env2;
      t15 = env3;
      r2 = env4;
      K = env5;
      break;
    case 13:
      step = env0;
      t3 = env1;
      r1 = env2;
      t15 = env3;
      r2 = env4;
      t19 = env5;
      K = env6;
      break;
    case 14:
      step = env0;
      t3 = env1;
      r1 = env2;
      r2 = env3;
      t19 = env4;
      t15 = env5;
      K = env6;
      break;
    case 15:
      step = env0;
      K = env1;
      r1 = env2;
      t3 = env3;
      r2 = env4;
      break;
    case 16:
      step = env0;
      r1 = env1;
      t3 = env2;
      r2 = env3;
      t23 = env4;
      K = env5;
      break;
    case 17:
      step = env0;
      r1 = env1;
      r2 = env2;
      t23 = env3;
      t3 = env4;
      K = env5;
      break;
    case 18:
      step = env0;
      t26 = env1;
      r1 = env2;
      r2 = env3;
      t23 = env4;
      t3 = env5;
      K = env6;
      break;
    case 19:
      step = env0;
      t3 = env1;
      r1 = env2;
      r2 = env3;
      t23 = env4;
      K = env5;
      t26 = env6;
      break;
    case 20:
      step = env0;
      t23 = env1;
      r1 = env2;
      t29 = env3;
      r2 = env4;
      K = env5;
      break;
    case 21:
      step = env0;
      t31 = env1;
      t23 = env2;
      r1 = env3;
      t29 = env4;
      r2 = env5;
      K = env6;
      break;
    case 22:
      step = env0;
      t23 = env1;
      r1 = env2;
      r2 = env3;
      t31 = env4;
      t29 = env5;
      K = env6;
      break;
    case 23:
      step = env0;
      r1 = env1;
      t23 = env2;
      r2 = env3;
      break;
    case 24:
      step = env0;
      t35 = env1;
      r1 = env2;
      t23 = env3;
      r2 = env4;
      break;
    case 25:
      t1 = env0;
      t2 = env1;
      P = env2;
      r1 = env3;
      r2 = env4;
      break;
    case 26:
      P = env0;
      r1 = env1;
      t1 = env2;
      t2 = env3;
      r2 = env4;
      t4 = env5;
      break;
    case 27:
      t6 = env0;
      P = env1;
      r1 = env2;
      t1 = env3;
      r2 = env4;
      t2 = env5;
      t4 = env6;
      break;
    case 28:
      t1 = env0;
      P = env1;
      t8 = env2;
      r1 = env3;
      r2 = env4;
      break;
    case 29:
      t1 = env0;
      P = env1;
      t8 = env2;
      r1 = env3;
      t10 = env4;
      r2 = env5;
      break;
    case 30:
      t1 = env0;
      P = env1;
      t8 = env2;
      r1 = env3;
      t10 = env4;
      r2 = env5;
      t12 = env6;
      break;
    case 31:
      t14 = env0;
      P = env1;
      r1 = env2;
      t1 = env3;
      r2 = env4;
      break;
    case 32:
      P = env0;
      r1 = env1;
      t1 = env2;
      r2 = env3;
      t14 = env4;
      t16 = env5;
      break;
    case 33:
      P = env0;
      r1 = env1;
      t1 = env2;
      r2 = env3;
      t18 = env4;
      t14 = env5;
      t16 = env6;
      break;
    case 34:
      P = env0;
      r1 = env1;
      t1 = env2;
      r2 = env3;
      t18 = env4;
      t20 = env5;
      t14 = env6;
      t16 = env7;
      break;
    case 35:
      P = env0;
      t20 = env1;
      t1 = env2;
      r2 = env3;
      t18 = env4;
      t14 = env5;
      t16 = env6;
      break;
    case 36:
      P = env0;
      t20 = env1;
      t1 = env2;
      r2 = env3;
      t18 = env4;
      t23 = env5;
      t14 = env6;
      t16 = env7;
      break;
    case 37:
      P = env0;
      t1 = env1;
      t25 = env2;
      r2 = env3;
      break;
    case 38:
      P = env0;
      t1 = env1;
      t25 = env2;
      t27 = env3;
      r2 = env4;
      break;
    case 39:
      P = env0;
      t1 = env1;
      t25 = env2;
      t27 = env3;
      r2 = env4;
      t29 = env5;
      break;
    case 40:
      t31 = env0;
      P = env1;
      t1 = env2;
      r2 = env3;
      break;
    case 41:
      t31 = env0;
      t33 = env1;
      P = env2;
      t1 = env3;
      r2 = env4;
      break;
    case 42:
      t33 = env0;
      t35 = env1;
      P = env2;
      r2 = env3;
      t1 = env4;
      t31 = env5;
      break;
    case 43:
      t37 = env0;
      t1 = env1;
      P = env2;
      r2 = env3;
      break;
    case 44:
      t37 = env0;
      t1 = env1;
      P = env2;
      t39 = env3;
      r2 = env4;
      break;
    case 45:
      t1 = env0;
      P = env1;
      t41 = env2;
      r2 = env3;
      t37 = env4;
      t39 = env5;
      break;
    case 46:
      t1 = env0;
      P = env1;
      t41 = env2;
      t43 = env3;
      r2 = env4;
      t37 = env5;
      t39 = env6;
      break;
    case 47:
      t1 = env0;
      P = env1;
      t41 = env2;
      t37 = env3;
      t39 = env4;
      t43 = env5;
      break;
    case 48:
      t1 = env0;
      t41 = env1;
      t46 = env2;
      t37 = env3;
      t39 = env4;
      t43 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      r1.setFrom$1(this._localAnchorA).subLocal$1(this.bodyA.get$localCenter());
      r2.setFrom$1(this._localAnchorB).subLocal$1(this.bodyB.get$localCenter());
      $.Matrix22_mulMatrixAndVectorToOut(this.bodyA.get$originTransform().get$rotation(), r1, r1);
      $.Matrix22_mulMatrixAndVectorToOut(this.bodyB.get$originTransform().get$rotation(), r2, r2);
      var K = $.Matrix22$(null, null);
      var t1 = this.bodyA.get$invMass();
    case 1:
      state0 = 0;
      var t3 = this.bodyB.get$invMass();
    case 2:
      state0 = 0;
      t3 = $.add(t1, t3);
      t1 = this.bodyA.get$invInertia();
    case 3:
      state0 = 0;
      var t6 = r1.y;
    case 4:
      state0 = 0;
      t6 = $.mul(t1, t6);
      t1 = r1.y;
    case 5:
      state0 = 0;
      t3 = $.add(t3, $.mul(t6, t1));
      var t9 = this.bodyB.get$invInertia();
    case 6:
      state0 = 0;
      var t11 = r2.y;
    case 7:
      state0 = 0;
      t11 = $.mul(t9, t11);
      t9 = r2.y;
    case 8:
      state0 = 0;
      t3 = $.add(t3, $.mul(t11, t9));
      K.col1.set$x(t3);
      t3 = this.bodyA.get$invInertia();
    case 9:
      state0 = 0;
      t3 = $.neg(t3);
      var t15 = r1.x;
    case 10:
      state0 = 0;
      t15 = $.mul(t3, t15);
      t3 = r1.y;
    case 11:
      state0 = 0;
      t3 = $.mul(t15, t3);
      t15 = this.bodyB.get$invInertia();
    case 12:
      state0 = 0;
      var t19 = r2.x;
    case 13:
      state0 = 0;
      t19 = $.mul(t15, t19);
      t15 = r2.y;
    case 14:
      state0 = 0;
      t3 = $.sub(t3, $.mul(t19, t15));
      K.col1.set$y(t3);
      t3 = K.col1.get$y();
      K.col2.set$x(t3);
      t3 = this.bodyA.get$invMass();
    case 15:
      state0 = 0;
      var t23 = this.bodyB.get$invMass();
    case 16:
      state0 = 0;
      t23 = $.add(t3, t23);
      t3 = this.bodyA.get$invInertia();
    case 17:
      state0 = 0;
      var t26 = r1.x;
    case 18:
      state0 = 0;
      t26 = $.mul(t3, t26);
      t3 = r1.x;
    case 19:
      state0 = 0;
      t23 = $.add(t23, $.mul(t26, t3));
      var t29 = this.bodyB.get$invInertia();
    case 20:
      state0 = 0;
      var t31 = r2.x;
    case 21:
      state0 = 0;
      t31 = $.mul(t29, t31);
      t29 = r2.x;
    case 22:
      state0 = 0;
      t23 = $.add(t23, $.mul(t31, t29));
      K.col2.set$y(t23);
      var linearMass = $.Matrix22$(null, null);
      linearMass.setFrom$1(K);
      linearMass.invertLocal$0();
      t23 = this.bodyA.get$invInertia();
    case 23:
      state0 = 0;
      var t35 = this.bodyB.get$invInertia();
    case 24:
      state0 = 0;
      var angularMass = $.add(t23, t35);
      if ($.gtB(angularMass, 0))
        if (typeof angularMass !== 'number')
          throw $.iae(angularMass);
      t1 = step.warmStarting;
      var t2 = this._linearImpulse;
    default:
      if (state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 0 && t1)
        switch (state0) {
          case 0:
            t2.mulLocal$1(step.dtRatio);
            this._angularImpulse = this._angularImpulse * step.dtRatio;
            var P = $.Vector$(0, 0);
            P.setFrom$1(t2);
            t1 = this.bodyA.get$linearVelocity();
            t2 = t1.get$x();
          case 25:
            state0 = 0;
            var t4 = this.bodyA.get$invMass();
          case 26:
            state0 = 0;
            t6 = P.x;
          case 27:
            state0 = 0;
            t1.set$x($.sub(t2, $.mul(t4, t6)));
            t1 = this.bodyA.get$linearVelocity();
            var t8 = t1.get$y();
          case 28:
            state0 = 0;
            var t10 = this.bodyA.get$invMass();
          case 29:
            state0 = 0;
            var t12 = P.y;
          case 30:
            state0 = 0;
            t1.set$y($.sub(t8, $.mul(t10, t12)));
            t1 = this.bodyA;
            var t14 = t1.get$angularVelocity();
          case 31:
            state0 = 0;
            var t16 = this.bodyA.get$invInertia();
          case 32:
            state0 = 0;
            var t18 = r1.x;
          case 33:
            state0 = 0;
            var t20 = P.y;
          case 34:
            state0 = 0;
            t20 = $.mul(t18, t20);
            t18 = r1.y;
          case 35:
            state0 = 0;
            t23 = P.x;
          case 36:
            state0 = 0;
            t1.set$angularVelocity($.sub(t14, $.mul(t16, $.add($.sub(t20, $.mul(t18, t23)), this._angularImpulse))));
            t1 = this.bodyB.get$linearVelocity();
            var t25 = t1.get$x();
          case 37:
            state0 = 0;
            var t27 = this.bodyB.get$invMass();
          case 38:
            state0 = 0;
            t29 = P.x;
          case 39:
            state0 = 0;
            t1.set$x($.add(t25, $.mul(t27, t29)));
            t1 = this.bodyB.get$linearVelocity();
            t31 = t1.get$y();
          case 40:
            state0 = 0;
            var t33 = this.bodyB.get$invMass();
          case 41:
            state0 = 0;
            t35 = P.y;
          case 42:
            state0 = 0;
            t1.set$y($.add(t31, $.mul(t33, t35)));
            t1 = this.bodyB;
            var t37 = t1.get$angularVelocity();
          case 43:
            state0 = 0;
            var t39 = this.bodyB.get$invInertia();
          case 44:
            state0 = 0;
            var t41 = r2.x;
          case 45:
            state0 = 0;
            var t43 = P.y;
          case 46:
            state0 = 0;
            t43 = $.mul(t41, t43);
            t41 = r2.y;
          case 47:
            state0 = 0;
            var t46 = P.x;
          case 48:
            state0 = 0;
            t1.set$angularVelocity($.add(t37, $.mul(t39, $.add($.sub(t43, $.mul(t41, t46)), this._angularImpulse))));
        }
      else {
        t2.setZero$0();
        this._angularImpulse = 0;
      }
  }
},
 solveVelocityConstraints$1: function(step) {
  var t1 = this.bodyB.get$angularVelocity();
  if (typeof t1 !== 'number')
    return this.solveVelocityConstraints$1$bailout(1, step, t1, 0, 0, 0, 0, 0, 0);
  var t3 = this.bodyA.get$angularVelocity();
  if (typeof t3 !== 'number')
    return this.solveVelocityConstraints$1$bailout(2, step, t1, t3, 0, 0, 0, 0, 0);
  var Cdot = t1 - t3;
  t3 = this.bodyA.get$invInertia();
  if (typeof t3 !== 'number')
    return this.solveVelocityConstraints$1$bailout(3, step, Cdot, t3, 0, 0, 0, 0, 0);
  var t5 = this.bodyB.get$invInertia();
  if (typeof t5 !== 'number')
    return this.solveVelocityConstraints$1$bailout(4, step, Cdot, t3, t5, 0, 0, 0, 0);
  var angularMass = t3 + t5;
  if (angularMass > 0)
    angularMass = 1 / angularMass;
  var impulse = -angularMass * Cdot;
  var oldImpulse = this._angularImpulse;
  t1 = step.dt;
  var t2 = this._maxTorque;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  var maxImpulse = t1 * t2;
  t2 = oldImpulse + impulse;
  this._angularImpulse = $.max(-maxImpulse, $.min(t2, maxImpulse));
  impulse = this._angularImpulse - oldImpulse;
  t1 = this.bodyA;
  t3 = t1.get$angularVelocity();
  if (typeof t3 !== 'number')
    return this.solveVelocityConstraints$1$bailout(5, step, impulse, t3, t1, 0, 0, 0, 0);
  t5 = this.bodyA.get$invInertia();
  if (typeof t5 !== 'number')
    return this.solveVelocityConstraints$1$bailout(6, step, impulse, t3, t5, t1, 0, 0, 0);
  t1.set$angularVelocity(t3 - t5 * impulse);
  t1 = this.bodyB;
  var t7 = t1.get$angularVelocity();
  if (typeof t7 !== 'number')
    return this.solveVelocityConstraints$1$bailout(7, step, impulse, t1, t7, 0, 0, 0, 0);
  var t9 = this.bodyB.get$invInertia();
  if (typeof t9 !== 'number')
    return this.solveVelocityConstraints$1$bailout(8, step, impulse, t1, t7, t9, 0, 0, 0);
  t1.set$angularVelocity(t7 + t9 * impulse);
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  r1.setFrom$1(this._localAnchorA).subLocal$1(this.bodyA.get$localCenter());
  r2.setFrom$1(this._localAnchorB).subLocal$1(this.bodyB.get$localCenter());
  $.Matrix22_mulMatrixAndVectorToOut(this.bodyA.get$originTransform().get$rotation(), r1, r1);
  $.Matrix22_mulMatrixAndVectorToOut(this.bodyB.get$originTransform().get$rotation(), r2, r2);
  var temp = $.Vector$(0, 0);
  Cdot = $.Vector$(0, 0);
  $.Vector_crossNumAndVectorToOut(this.bodyA.get$angularVelocity(), r1, temp);
  $.Vector_crossNumAndVectorToOut(this.bodyB.get$angularVelocity(), r2, Cdot);
  Cdot.addLocal$1(this.bodyB.get$linearVelocity()).subLocal$1(this.bodyA.get$linearVelocity()).subLocal$1(temp);
  var K = $.Matrix22$(null, null);
  t1 = this.bodyA;
  var t11 = t1.get$invMass();
  if (typeof t11 !== 'number')
    return this.solveVelocityConstraints$1$bailout(9, step, K, t11, r1, r2, Cdot, 0, 0);
  var t13 = this.bodyB;
  var t14 = t13.get$invMass();
  if (typeof t14 !== 'number')
    return this.solveVelocityConstraints$1$bailout(10, step, K, t11, t14, r1, r2, Cdot, 0);
  t14 = t11 + t14;
  t1 = t1.get$invInertia();
  if (typeof t1 !== 'number')
    return this.solveVelocityConstraints$1$bailout(11, step, K, r1, t14, r2, t1, Cdot, 0);
  var t16 = r1.y;
  if (typeof t16 !== 'number')
    return this.solveVelocityConstraints$1$bailout(12, step, K, r1, t14, r2, t1, t16, Cdot);
  t1 *= t16;
  t14 += t1 * t16;
  t13 = t13.get$invInertia();
  if (typeof t13 !== 'number')
    return this.solveVelocityConstraints$1$bailout(14, step, K, t13, t14, r1, r2, Cdot, 0);
  var t19 = r2.y;
  if (typeof t19 !== 'number')
    return this.solveVelocityConstraints$1$bailout(15, step, K, t13, t14, r1, r2, t19, Cdot);
  t13 *= t19;
  t14 += t13 * t19;
  K.col1.set$x(t14);
  t14 = this.bodyA.get$invInertia();
  if (typeof t14 !== 'number')
    return this.solveVelocityConstraints$1$bailout(17, step, K, r1, r2, t14, Cdot, 0, 0);
  t14 = -t14;
  var t22 = r1.x;
  if (typeof t22 !== 'number')
    return this.solveVelocityConstraints$1$bailout(18, step, K, Cdot, t14, r1, r2, t22, 0);
  t22 = t14 * t22;
  t14 = r1.y;
  if (typeof t14 !== 'number')
    return this.solveVelocityConstraints$1$bailout(19, step, K, t22, r1, t14, r2, Cdot, 0);
  t14 = t22 * t14;
  t22 = this.bodyB.get$invInertia();
  if (typeof t22 !== 'number')
    return this.solveVelocityConstraints$1$bailout(20, step, K, r1, t14, r2, t22, Cdot, 0);
  var t26 = r2.x;
  if (typeof t26 !== 'number')
    return this.solveVelocityConstraints$1$bailout(21, step, K, t26, r1, t14, r2, t22, Cdot);
  t26 = t22 * t26;
  t22 = r2.y;
  if (typeof t22 !== 'number')
    return this.solveVelocityConstraints$1$bailout(22, step, K, t22, r1, t14, r2, t26, Cdot);
  t14 -= t26 * t22;
  K.col1.set$y(t14);
  t14 = K.col1.get$y();
  K.col2.set$x(t14);
  t14 = this.bodyA;
  var t29 = t14.get$invMass();
  if (typeof t29 !== 'number')
    return this.solveVelocityConstraints$1$bailout(23, step, K, r1, r2, t29, Cdot, 0, 0);
  var t31 = this.bodyB;
  var t32 = t31.get$invMass();
  if (typeof t32 !== 'number')
    return this.solveVelocityConstraints$1$bailout(24, step, K, r1, r2, t29, t32, Cdot, 0);
  t32 = t29 + t32;
  t14 = t14.get$invInertia();
  if (typeof t14 !== 'number')
    return this.solveVelocityConstraints$1$bailout(25, step, K, r1, r2, t32, t14, Cdot, 0);
  var t34 = r1.x;
  if (typeof t34 !== 'number')
    return this.solveVelocityConstraints$1$bailout(26, step, K, r1, r2, t34, t32, t14, Cdot);
  t14 *= t34;
  t32 += t14 * t34;
  t31 = t31.get$invInertia();
  if (typeof t31 !== 'number')
    return this.solveVelocityConstraints$1$bailout(28, step, K, r1, t32, r2, t31, Cdot, 0);
  var t37 = r2.x;
  if (typeof t37 !== 'number')
    return this.solveVelocityConstraints$1$bailout(29, step, K, r1, t32, r2, t31, t37, Cdot);
  t31 *= t37;
  t32 += t31 * t37;
  K.col2.set$y(t32);
  var linearMass = $.Matrix22$(null, null);
  linearMass.setFrom$1(K);
  linearMass.invertLocal$0();
  var impulse0 = $.Vector$(0, 0);
  $.Matrix22_mulMatrixAndVectorToOut(linearMass, Cdot, impulse0);
  impulse0.negateLocal$0();
  oldImpulse = $.Vector$(0, 0);
  t32 = this._linearImpulse;
  oldImpulse.setFrom$1(t32);
  t32.addLocal$1(impulse0);
  var t39 = step.dt;
  var t40 = this._maxForce;
  if (typeof t40 !== 'number')
    throw $.iae(t40);
  var maxImpulse0 = t39 * t40;
  t1 = t32.get$lengthSquared();
  if (typeof t1 !== 'number')
    return this.solveVelocityConstraints$1$bailout(31, t32, r1, maxImpulse0, r2, impulse0, t1, oldImpulse, 0);
  if (t1 > maxImpulse0 * maxImpulse0) {
    t32.normalize$0();
    t32.mulLocal$1(maxImpulse0);
  }
  impulse0.setFrom$1(t32).subLocal$1(oldImpulse);
  t1 = this.bodyA.get$linearVelocity();
  t2 = t1.get$x();
  if (typeof t2 !== 'number')
    return this.solveVelocityConstraints$1$bailout(32, impulse0, t1, t2, r1, r2, 0, 0, 0);
  var t4 = impulse0.x;
  if (typeof t4 !== 'number')
    return this.solveVelocityConstraints$1$bailout(33, r1, r2, impulse0, t1, t2, t4, 0, 0);
  var t6 = this.bodyA.get$invMass();
  if (typeof t6 !== 'number')
    return this.solveVelocityConstraints$1$bailout(34, r1, r2, impulse0, t1, t2, t4, t6, 0);
  t1.set$x(t2 - t4 * t6);
  t1 = this.bodyA.get$linearVelocity();
  var t8 = t1.get$y();
  if (typeof t8 !== 'number')
    return this.solveVelocityConstraints$1$bailout(35, impulse0, t1, r1, t8, r2, 0, 0, 0);
  var t10 = impulse0.y;
  if (typeof t10 !== 'number')
    return this.solveVelocityConstraints$1$bailout(36, t1, r1, t8, r2, impulse0, t10, 0, 0);
  var t12 = this.bodyA.get$invMass();
  if (typeof t12 !== 'number')
    return this.solveVelocityConstraints$1$bailout(37, t1, r1, t8, r2, impulse0, t12, t10, 0);
  t1.set$y(t8 - t10 * t12);
  t1 = this.bodyA;
  t14 = t1.get$angularVelocity();
  if (typeof t14 !== 'number')
    return this.solveVelocityConstraints$1$bailout(38, r2, impulse0, t14, r1, t1, 0, 0, 0);
  t16 = this.bodyA.get$invInertia();
  if (typeof t16 !== 'number')
    return this.solveVelocityConstraints$1$bailout(39, t1, t16, r1, r2, impulse0, t14, 0, 0);
  var t18 = r1.x;
  if (typeof t18 !== 'number')
    return this.solveVelocityConstraints$1$bailout(40, t1, t16, t18, r1, r2, impulse0, t14, 0);
  var t20 = impulse0.y;
  if (typeof t20 !== 'number')
    return this.solveVelocityConstraints$1$bailout(41, t1, t16, t18, t20, r1, r2, impulse0, t14);
  t20 = t18 * t20;
  t18 = r1.y;
  if (typeof t18 !== 'number')
    return this.solveVelocityConstraints$1$bailout(42, t14, t16, t18, t20, r2, impulse0, t1, 0);
  var t23 = impulse0.x;
  if (typeof t23 !== 'number')
    return this.solveVelocityConstraints$1$bailout(43, t14, t16, t18, t23, t20, r2, impulse0, t1);
  t1.set$angularVelocity(t14 - t16 * (t20 - t18 * t23));
  t1 = this.bodyB.get$linearVelocity();
  var t25 = t1.get$x();
  if (typeof t25 !== 'number')
    return this.solveVelocityConstraints$1$bailout(44, impulse0, t1, t25, r2, 0, 0, 0, 0);
  var t27 = impulse0.x;
  if (typeof t27 !== 'number')
    return this.solveVelocityConstraints$1$bailout(45, impulse0, t1, t25, t27, r2, 0, 0, 0);
  t29 = this.bodyB.get$invMass();
  if (typeof t29 !== 'number')
    return this.solveVelocityConstraints$1$bailout(46, t1, t25, t27, r2, impulse0, t29, 0, 0);
  t1.set$x(t25 + t27 * t29);
  t1 = this.bodyB.get$linearVelocity();
  t31 = t1.get$y();
  if (typeof t31 !== 'number')
    return this.solveVelocityConstraints$1$bailout(47, impulse0, t1, t31, r2, 0, 0, 0, 0);
  t34 = impulse0.y;
  if (typeof t34 !== 'number')
    return this.solveVelocityConstraints$1$bailout(48, impulse0, t34, t1, t31, r2, 0, 0, 0);
  var t36 = this.bodyB.get$invMass();
  if (typeof t36 !== 'number')
    return this.solveVelocityConstraints$1$bailout(49, t36, r2, impulse0, t34, t1, t31, 0, 0);
  t1.set$y(t31 + t34 * t36);
  t1 = this.bodyB;
  var t38 = t1.get$angularVelocity();
  if (typeof t38 !== 'number')
    return this.solveVelocityConstraints$1$bailout(50, t38, impulse0, t1, r2, 0, 0, 0, 0);
  t40 = this.bodyB.get$invInertia();
  if (typeof t40 !== 'number')
    return this.solveVelocityConstraints$1$bailout(51, t38, impulse0, t40, t1, r2, 0, 0, 0);
  var t42 = r2.x;
  if (typeof t42 !== 'number')
    return this.solveVelocityConstraints$1$bailout(52, r2, t38, impulse0, t40, t1, t42, 0, 0);
  var t44 = impulse0.y;
  if (typeof t44 !== 'number')
    return this.solveVelocityConstraints$1$bailout(53, r2, t38, impulse0, t40, t1, t42, t44, 0);
  t44 = t42 * t44;
  t42 = r2.y;
  if (typeof t42 !== 'number')
    return this.solveVelocityConstraints$1$bailout(54, t38, impulse0, t40, t1, t44, t42, 0, 0);
  var t47 = impulse0.x;
  if (typeof t47 !== 'number')
    return this.solveVelocityConstraints$1$bailout(55, t47, t38, t40, t1, t44, t42, 0, 0);
  t1.set$angularVelocity(t38 + t40 * (t44 - t42 * t47));
},
 solveVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      var step = env0;
      t1 = env1;
      break;
    case 2:
      step = env0;
      t1 = env1;
      t3 = env2;
      break;
    case 3:
      step = env0;
      Cdot = env1;
      t3 = env2;
      break;
    case 4:
      step = env0;
      Cdot = env1;
      t3 = env2;
      t5 = env3;
      break;
    case 5:
      step = env0;
      impulse = env1;
      t3 = env2;
      t1 = env3;
      break;
    case 6:
      step = env0;
      impulse = env1;
      t3 = env2;
      t5 = env3;
      t1 = env4;
      break;
    case 7:
      step = env0;
      impulse = env1;
      t1 = env2;
      t7 = env3;
      break;
    case 8:
      step = env0;
      impulse = env1;
      t1 = env2;
      t7 = env3;
      t9 = env4;
      break;
    case 9:
      step = env0;
      K = env1;
      t1 = env2;
      r1 = env3;
      r2 = env4;
      Cdot = env5;
      break;
    case 10:
      step = env0;
      K = env1;
      t1 = env2;
      t12 = env3;
      r1 = env4;
      r2 = env5;
      Cdot = env6;
      break;
    case 11:
      step = env0;
      K = env1;
      r1 = env2;
      t12 = env3;
      r2 = env4;
      t1 = env5;
      Cdot = env6;
      break;
    case 12:
      step = env0;
      K = env1;
      r1 = env2;
      t12 = env3;
      r2 = env4;
      t1 = env5;
      t15 = env6;
      Cdot = env7;
      break;
    case 13:
      step = env0;
      K = env1;
      r1 = env2;
      t12 = env3;
      r2 = env4;
      t1 = env5;
      t15 = env6;
      Cdot = env7;
      break;
    case 14:
      step = env0;
      K = env1;
      t18 = env2;
      t12 = env3;
      r1 = env4;
      r2 = env5;
      Cdot = env6;
      break;
    case 15:
      step = env0;
      K = env1;
      t18 = env2;
      t12 = env3;
      r1 = env4;
      r2 = env5;
      t20 = env6;
      Cdot = env7;
      break;
    case 16:
      step = env0;
      K = env1;
      t12 = env2;
      r1 = env3;
      t20 = env4;
      r2 = env5;
      t18 = env6;
      Cdot = env7;
      break;
    case 17:
      step = env0;
      K = env1;
      r1 = env2;
      r2 = env3;
      t12 = env4;
      Cdot = env5;
      break;
    case 18:
      step = env0;
      K = env1;
      Cdot = env2;
      t12 = env3;
      r1 = env4;
      r2 = env5;
      t24 = env6;
      break;
    case 19:
      step = env0;
      K = env1;
      t24 = env2;
      r1 = env3;
      t12 = env4;
      r2 = env5;
      Cdot = env6;
      break;
    case 20:
      step = env0;
      K = env1;
      r1 = env2;
      t12 = env3;
      r2 = env4;
      t24 = env5;
      Cdot = env6;
      break;
    case 21:
      step = env0;
      K = env1;
      t28 = env2;
      r1 = env3;
      t12 = env4;
      r2 = env5;
      t24 = env6;
      Cdot = env7;
      break;
    case 22:
      step = env0;
      K = env1;
      t24 = env2;
      r1 = env3;
      t12 = env4;
      r2 = env5;
      t28 = env6;
      Cdot = env7;
      break;
    case 23:
      step = env0;
      K = env1;
      r1 = env2;
      r2 = env3;
      t12 = env4;
      Cdot = env5;
      break;
    case 24:
      step = env0;
      K = env1;
      r1 = env2;
      r2 = env3;
      t12 = env4;
      t32 = env5;
      Cdot = env6;
      break;
    case 25:
      step = env0;
      K = env1;
      r1 = env2;
      r2 = env3;
      t32 = env4;
      t12 = env5;
      Cdot = env6;
      break;
    case 26:
      step = env0;
      K = env1;
      r1 = env2;
      r2 = env3;
      t35 = env4;
      t32 = env5;
      t12 = env6;
      Cdot = env7;
      break;
    case 27:
      step = env0;
      K = env1;
      t35 = env2;
      r1 = env3;
      r2 = env4;
      t12 = env5;
      t32 = env6;
      Cdot = env7;
      break;
    case 28:
      step = env0;
      K = env1;
      r1 = env2;
      t32 = env3;
      r2 = env4;
      t38 = env5;
      Cdot = env6;
      break;
    case 29:
      step = env0;
      K = env1;
      r1 = env2;
      t32 = env3;
      r2 = env4;
      t38 = env5;
      t40 = env6;
      Cdot = env7;
      break;
    case 30:
      step = env0;
      K = env1;
      r1 = env2;
      t32 = env3;
      r2 = env4;
      t40 = env5;
      t38 = env6;
      Cdot = env7;
      break;
    case 31:
      t32 = env0;
      r1 = env1;
      maxImpulse0 = env2;
      r2 = env3;
      impulse0 = env4;
      t1 = env5;
      oldImpulse = env6;
      break;
    case 32:
      impulse0 = env0;
      t1 = env1;
      t2 = env2;
      r1 = env3;
      r2 = env4;
      break;
    case 33:
      r1 = env0;
      r2 = env1;
      impulse0 = env2;
      t1 = env3;
      t2 = env4;
      t4 = env5;
      break;
    case 34:
      r1 = env0;
      r2 = env1;
      impulse0 = env2;
      t1 = env3;
      t2 = env4;
      t4 = env5;
      t6 = env6;
      break;
    case 35:
      impulse0 = env0;
      t1 = env1;
      r1 = env2;
      t8 = env3;
      r2 = env4;
      break;
    case 36:
      t1 = env0;
      r1 = env1;
      t8 = env2;
      r2 = env3;
      impulse0 = env4;
      t10 = env5;
      break;
    case 37:
      t1 = env0;
      r1 = env1;
      t8 = env2;
      r2 = env3;
      impulse0 = env4;
      t12 = env5;
      t10 = env6;
      break;
    case 38:
      r2 = env0;
      impulse0 = env1;
      t14 = env2;
      r1 = env3;
      t1 = env4;
      break;
    case 39:
      t1 = env0;
      t16 = env1;
      r1 = env2;
      r2 = env3;
      impulse0 = env4;
      t14 = env5;
      break;
    case 40:
      t1 = env0;
      t16 = env1;
      t18 = env2;
      r1 = env3;
      r2 = env4;
      impulse0 = env5;
      t14 = env6;
      break;
    case 41:
      t1 = env0;
      t16 = env1;
      t18 = env2;
      t20 = env3;
      r1 = env4;
      r2 = env5;
      impulse0 = env6;
      t14 = env7;
      break;
    case 42:
      t14 = env0;
      t16 = env1;
      t18 = env2;
      t20 = env3;
      r2 = env4;
      impulse0 = env5;
      t1 = env6;
      break;
    case 43:
      t14 = env0;
      t16 = env1;
      t18 = env2;
      t23 = env3;
      t20 = env4;
      r2 = env5;
      impulse0 = env6;
      t1 = env7;
      break;
    case 44:
      impulse0 = env0;
      t1 = env1;
      t25 = env2;
      r2 = env3;
      break;
    case 45:
      impulse0 = env0;
      t1 = env1;
      t25 = env2;
      t27 = env3;
      r2 = env4;
      break;
    case 46:
      t1 = env0;
      t25 = env1;
      t27 = env2;
      r2 = env3;
      impulse0 = env4;
      t29 = env5;
      break;
    case 47:
      impulse0 = env0;
      t1 = env1;
      t31 = env2;
      r2 = env3;
      break;
    case 48:
      impulse0 = env0;
      t34 = env1;
      t1 = env2;
      t31 = env3;
      r2 = env4;
      break;
    case 49:
      t36 = env0;
      r2 = env1;
      impulse0 = env2;
      t34 = env3;
      t1 = env4;
      t31 = env5;
      break;
    case 50:
      t38 = env0;
      impulse0 = env1;
      t1 = env2;
      r2 = env3;
      break;
    case 51:
      t38 = env0;
      impulse0 = env1;
      t40 = env2;
      t1 = env3;
      r2 = env4;
      break;
    case 52:
      r2 = env0;
      t38 = env1;
      impulse0 = env2;
      t40 = env3;
      t1 = env4;
      t42 = env5;
      break;
    case 53:
      r2 = env0;
      t38 = env1;
      impulse0 = env2;
      t40 = env3;
      t1 = env4;
      t42 = env5;
      t44 = env6;
      break;
    case 54:
      t38 = env0;
      impulse0 = env1;
      t40 = env2;
      t1 = env3;
      t44 = env4;
      t42 = env5;
      break;
    case 55:
      t47 = env0;
      t38 = env1;
      t40 = env2;
      t1 = env3;
      t44 = env4;
      t42 = env5;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.bodyB.get$angularVelocity();
    case 1:
      state0 = 0;
      var t3 = this.bodyA.get$angularVelocity();
    case 2:
      state0 = 0;
      var Cdot = $.sub(t1, t3);
      t3 = this.bodyA.get$invInertia();
    case 3:
      state0 = 0;
      var t5 = this.bodyB.get$invInertia();
    case 4:
      state0 = 0;
      var angularMass = $.add(t3, t5);
      if ($.gtB(angularMass, 0)) {
        if (typeof angularMass !== 'number')
          throw $.iae(angularMass);
        angularMass = 1 / angularMass;
      }
      var impulse = $.mul($.neg(angularMass), Cdot);
      var oldImpulse = this._angularImpulse;
      t1 = step.dt;
      var t2 = this._maxTorque;
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      var maxImpulse = t1 * t2;
      if (typeof impulse !== 'number')
        throw $.iae(impulse);
      t2 = oldImpulse + impulse;
      this._angularImpulse = $.max(-maxImpulse, $.min(t2, maxImpulse));
      impulse = this._angularImpulse - oldImpulse;
      t1 = this.bodyA;
      t3 = t1.get$angularVelocity();
    case 5:
      state0 = 0;
      t5 = this.bodyA.get$invInertia();
    case 6:
      state0 = 0;
      t1.set$angularVelocity($.sub(t3, $.mul(t5, impulse)));
      t1 = this.bodyB;
      var t7 = t1.get$angularVelocity();
    case 7:
      state0 = 0;
      var t9 = this.bodyB.get$invInertia();
    case 8:
      state0 = 0;
      t1.set$angularVelocity($.add(t7, $.mul(t9, impulse)));
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      r1.setFrom$1(this._localAnchorA).subLocal$1(this.bodyA.get$localCenter());
      r2.setFrom$1(this._localAnchorB).subLocal$1(this.bodyB.get$localCenter());
      $.Matrix22_mulMatrixAndVectorToOut(this.bodyA.get$originTransform().get$rotation(), r1, r1);
      $.Matrix22_mulMatrixAndVectorToOut(this.bodyB.get$originTransform().get$rotation(), r2, r2);
      var temp = $.Vector$(0, 0);
      Cdot = $.Vector$(0, 0);
      $.Vector_crossNumAndVectorToOut(this.bodyA.get$angularVelocity(), r1, temp);
      $.Vector_crossNumAndVectorToOut(this.bodyB.get$angularVelocity(), r2, Cdot);
      Cdot.addLocal$1(this.bodyB.get$linearVelocity()).subLocal$1(this.bodyA.get$linearVelocity()).subLocal$1(temp);
      var K = $.Matrix22$(null, null);
      t1 = this.bodyA.get$invMass();
    case 9:
      state0 = 0;
      var t12 = this.bodyB.get$invMass();
    case 10:
      state0 = 0;
      t12 = $.add(t1, t12);
      t1 = this.bodyA.get$invInertia();
    case 11:
      state0 = 0;
      var t15 = r1.y;
    case 12:
      state0 = 0;
      t15 = $.mul(t1, t15);
      t1 = r1.y;
    case 13:
      state0 = 0;
      t12 = $.add(t12, $.mul(t15, t1));
      var t18 = this.bodyB.get$invInertia();
    case 14:
      state0 = 0;
      var t20 = r2.y;
    case 15:
      state0 = 0;
      t20 = $.mul(t18, t20);
      t18 = r2.y;
    case 16:
      state0 = 0;
      t12 = $.add(t12, $.mul(t20, t18));
      K.col1.set$x(t12);
      t12 = this.bodyA.get$invInertia();
    case 17:
      state0 = 0;
      t12 = $.neg(t12);
      var t24 = r1.x;
    case 18:
      state0 = 0;
      t24 = $.mul(t12, t24);
      t12 = r1.y;
    case 19:
      state0 = 0;
      t12 = $.mul(t24, t12);
      t24 = this.bodyB.get$invInertia();
    case 20:
      state0 = 0;
      var t28 = r2.x;
    case 21:
      state0 = 0;
      t28 = $.mul(t24, t28);
      t24 = r2.y;
    case 22:
      state0 = 0;
      t12 = $.sub(t12, $.mul(t28, t24));
      K.col1.set$y(t12);
      t12 = K.col1.get$y();
      K.col2.set$x(t12);
      t12 = this.bodyA.get$invMass();
    case 23:
      state0 = 0;
      var t32 = this.bodyB.get$invMass();
    case 24:
      state0 = 0;
      t32 = $.add(t12, t32);
      t12 = this.bodyA.get$invInertia();
    case 25:
      state0 = 0;
      var t35 = r1.x;
    case 26:
      state0 = 0;
      t35 = $.mul(t12, t35);
      t12 = r1.x;
    case 27:
      state0 = 0;
      t32 = $.add(t32, $.mul(t35, t12));
      var t38 = this.bodyB.get$invInertia();
    case 28:
      state0 = 0;
      var t40 = r2.x;
    case 29:
      state0 = 0;
      t40 = $.mul(t38, t40);
      t38 = r2.x;
    case 30:
      state0 = 0;
      t32 = $.add(t32, $.mul(t40, t38));
      K.col2.set$y(t32);
      var linearMass = $.Matrix22$(null, null);
      linearMass.setFrom$1(K);
      linearMass.invertLocal$0();
      var impulse0 = $.Vector$(0, 0);
      $.Matrix22_mulMatrixAndVectorToOut(linearMass, Cdot, impulse0);
      impulse0.negateLocal$0();
      oldImpulse = $.Vector$(0, 0);
      t32 = this._linearImpulse;
      oldImpulse.setFrom$1(t32);
      t32.addLocal$1(impulse0);
      var t43 = step.dt;
      var t44 = this._maxForce;
      if (typeof t44 !== 'number')
        throw $.iae(t44);
      var maxImpulse0 = t43 * t44;
      t1 = t32.get$lengthSquared();
    case 31:
      state0 = 0;
      if ($.gtB(t1, maxImpulse0 * maxImpulse0)) {
        t32.normalize$0();
        t32.mulLocal$1(maxImpulse0);
      }
      impulse0.setFrom$1(t32).subLocal$1(oldImpulse);
      t1 = this.bodyA.get$linearVelocity();
      t2 = t1.get$x();
    case 32:
      state0 = 0;
      var t4 = impulse0.x;
    case 33:
      state0 = 0;
      var t6 = this.bodyA.get$invMass();
    case 34:
      state0 = 0;
      t1.set$x($.sub(t2, $.mul(t4, t6)));
      t1 = this.bodyA.get$linearVelocity();
      var t8 = t1.get$y();
    case 35:
      state0 = 0;
      var t10 = impulse0.y;
    case 36:
      state0 = 0;
      t12 = this.bodyA.get$invMass();
    case 37:
      state0 = 0;
      t1.set$y($.sub(t8, $.mul(t10, t12)));
      t1 = this.bodyA;
      var t14 = t1.get$angularVelocity();
    case 38:
      state0 = 0;
      var t16 = this.bodyA.get$invInertia();
    case 39:
      state0 = 0;
      t18 = r1.x;
    case 40:
      state0 = 0;
      t20 = impulse0.y;
    case 41:
      state0 = 0;
      t20 = $.mul(t18, t20);
      t18 = r1.y;
    case 42:
      state0 = 0;
      var t23 = impulse0.x;
    case 43:
      state0 = 0;
      t1.set$angularVelocity($.sub(t14, $.mul(t16, $.sub(t20, $.mul(t18, t23)))));
      t1 = this.bodyB.get$linearVelocity();
      var t25 = t1.get$x();
    case 44:
      state0 = 0;
      var t27 = impulse0.x;
    case 45:
      state0 = 0;
      var t29 = this.bodyB.get$invMass();
    case 46:
      state0 = 0;
      t1.set$x($.add(t25, $.mul(t27, t29)));
      t1 = this.bodyB.get$linearVelocity();
      var t31 = t1.get$y();
    case 47:
      state0 = 0;
      var t34 = impulse0.y;
    case 48:
      state0 = 0;
      var t36 = this.bodyB.get$invMass();
    case 49:
      state0 = 0;
      t1.set$y($.add(t31, $.mul(t34, t36)));
      t1 = this.bodyB;
      t38 = t1.get$angularVelocity();
    case 50:
      state0 = 0;
      t40 = this.bodyB.get$invInertia();
    case 51:
      state0 = 0;
      var t42 = r2.x;
    case 52:
      state0 = 0;
      t44 = impulse0.y;
    case 53:
      state0 = 0;
      t44 = $.mul(t42, t44);
      t42 = r2.y;
    case 54:
      state0 = 0;
      var t47 = impulse0.x;
    case 55:
      state0 = 0;
      t1.set$angularVelocity($.add(t38, $.mul(t40, $.sub(t44, $.mul(t42, t47)))));
  }
},
 solvePositionConstraints$1: function(baumgarte) {
  return true;
}
};

$$.RevoluteJoint = {"":
 ["localAnchor1", "localAnchor2", "impulse", "_motorImpulse", "mass?", "motorMass", "_enableMotor", "_maxMotorTorque", "_motorSpeed", "_enableLimit", "referenceAngle?", "lowerAngle?", "upperAngle?", "limitState", "type", "_prev", "_lib2_next", "edgeA", "edgeB", "bodyA", "bodyB", "islandFlag", "collideConnected", "userData", "localCenterA", "localCenterB", "invMassA", "invIA", "invMassB", "invIB"],
 "super": "Joint",
 initVelocityConstraints$1: function(step) {
  var b1 = this.bodyA;
  var b2 = this.bodyB;
  if (this._enableMotor === true || this._enableLimit === true)
    ;
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
  r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
  $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
  $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
  var m1 = b1.get$invMass();
  if (typeof m1 !== 'number')
    return this.initVelocityConstraints$1$bailout(1, step, b1, b2, r1, r2, m1, 0, 0, 0, 0, 0, 0, 0, 0);
  var m2 = b2.get$invMass();
  if (typeof m2 !== 'number')
    return this.initVelocityConstraints$1$bailout(2, step, b1, b2, r1, r2, m1, m2, 0, 0, 0, 0, 0, 0, 0);
  var i1 = b1.get$invInertia();
  if (typeof i1 !== 'number')
    return this.initVelocityConstraints$1$bailout(3, step, b1, b2, r1, r2, m1, m2, i1, 0, 0, 0, 0, 0, 0);
  var i2 = b2.get$invInertia();
  if (typeof i2 !== 'number')
    return this.initVelocityConstraints$1$bailout(4, step, b1, b2, r1, r2, m1, m2, i1, i2, 0, 0, 0, 0, 0);
  var t5 = m1 + m2;
  var t6 = r1.y;
  if (typeof t6 !== 'number')
    return this.initVelocityConstraints$1$bailout(5, step, t5, t6, b1, b2, r1, r2, m1, m2, i1, i2, 0, 0, 0);
  var t8 = t5 + t6 * t6 * i1;
  var t9 = r2.y;
  if (typeof t9 !== 'number')
    return this.initVelocityConstraints$1$bailout(6, step, t9, t8, b1, b2, r1, r2, m1, m2, i1, i2, 0, 0, 0);
  t8 += t9 * t9 * i2;
  var t11 = this.mass;
  var t12 = t11.col1;
  t12.x = t8;
  t8 = r1.y;
  if (typeof t8 !== 'number')
    return this.initVelocityConstraints$1$bailout(7, step, t11, t12, t8, m1, m2, i1, i2, b1, b2, r1, r2, 0, 0);
  t8 = -t8;
  var t14 = r1.x;
  if (typeof t14 !== 'number')
    return this.initVelocityConstraints$1$bailout(8, step, t11, t12, t14, t8, m1, m2, i1, i2, b1, b2, r1, r2, 0);
  var t16 = t8 * t14 * i1;
  var t17 = r2.y;
  if (typeof t17 !== 'number')
    return this.initVelocityConstraints$1$bailout(9, step, t11, t12, t17, t16, m1, m2, i1, i2, b1, b2, r1, r2, 0);
  var t19 = r2.x;
  if (typeof t19 !== 'number')
    return this.initVelocityConstraints$1$bailout(10, step, t11, t12, t17, t19, t16, m1, m2, i1, i2, b1, b2, r1, r2);
  t16 -= t17 * t19 * i2;
  var t21 = t11.col2;
  t21.x = t16;
  t16 = r1.y;
  if (typeof t16 !== 'number')
    return this.initVelocityConstraints$1$bailout(11, step, t11, t12, t21, m1, m2, i1, i2, t16, b1, b2, r1, r2, 0);
  var t23 = -t16 * i1;
  var t24 = r2.y;
  if (typeof t24 !== 'number')
    return this.initVelocityConstraints$1$bailout(12, step, t11, t12, t21, m1, t24, m2, i1, i2, b1, b2, r1, r2, t23);
  t23 -= t24 * i2;
  t11 = t11.col3;
  t11.x = t23;
  t12.y = t21.x;
  t23 = r1.x;
  if (typeof t23 !== 'number')
    return this.initVelocityConstraints$1$bailout(13, step, t12, t21, t5, m1, m2, i2, t11, i1, t23, b1, b2, r1, r2);
  t5 += t23 * t23 * i1;
  var t27 = r2.x;
  if (typeof t27 !== 'number')
    return this.initVelocityConstraints$1$bailout(14, step, t12, t21, m1, m2, i1, i2, t11, t5, b1, b2, r1, r2, t27);
  t21.y = t5 + t27 * t27 * i2;
  var t29 = r1.x;
  if (typeof t29 !== 'number')
    return this.initVelocityConstraints$1$bailout(15, step, t12, t21, m1, m2, i1, i2, t11, b1, r1, b2, r2, t29, 0);
  t29 *= i1;
  var t31 = r2.x;
  if (typeof t31 !== 'number')
    return this.initVelocityConstraints$1$bailout(16, step, t29, t12, t21, m1, m2, i1, i2, t11, b1, b2, r1, r2, t31);
  t11.y = t29 + t31 * i2;
  t12.z = t11.x;
  t21.z = t11.y;
  t21 = i1 + i2;
  t11.z = t21;
  this.motorMass = t21;
  var t1 = this.motorMass;
  if (typeof t1 !== 'number')
    return this.initVelocityConstraints$1$bailout(17, step, t1, b1, b2, r1, r2, m1, m2, i1, i2, 0, 0, 0, 0);
  if (t1 > 0)
    this.motorMass = 1 / t1;
  t1 = this._enableMotor;
  if (typeof t1 !== 'boolean')
    return this.initVelocityConstraints$1$bailout(18, step, t1, b1, b2, r1, r2, m1, m2, i1, i2, 0, 0, 0, 0);
  if (!t1)
    this._motorImpulse = 0;
  if (this._enableLimit === true) {
    t1 = b2.get$sweep().get$angle();
    if (typeof t1 !== 'number')
      return this.initVelocityConstraints$1$bailout(19, step, r2, b1, b2, r1, t1, m1, m2, i1, i2, 0, 0, 0, 0);
    var t3 = b1.get$sweep().get$angle();
    if (typeof t3 !== 'number')
      return this.initVelocityConstraints$1$bailout(20, step, r2, t3, b1, b2, r1, t1, m1, m2, i1, i2, 0, 0, 0);
    t3 = t1 - t3;
    t1 = this.referenceAngle;
    if (typeof t1 !== 'number')
      return this.initVelocityConstraints$1$bailout(21, step, r2, t3, b1, b2, r1, t1, m1, m2, i1, i2, 0, 0, 0);
    var jointAngle = t3 - t1;
    t1 = this.upperAngle;
    if (typeof t1 !== 'number')
      return this.initVelocityConstraints$1$bailout(22, step, jointAngle, t1, b1, b2, r1, r2, m1, m2, i1, i2, 0, 0, 0);
    t3 = this.lowerAngle;
    if (typeof t3 !== 'number')
      return this.initVelocityConstraints$1$bailout(23, step, jointAngle, m1, m2, i1, i2, b1, b2, r1, r2, t1, t3, 0, 0);
    t5 = $.abs(t1 - t3);
    if (typeof t5 !== 'number')
      return this.initVelocityConstraints$1$bailout(24, step, jointAngle, r1, b1, t5, b2, r2, m1, m2, i1, i2, 0, 0, 0);
    if (t5 < 0.06981317007977318)
      this.limitState = 3;
    else {
      t1 = this.lowerAngle;
      if (typeof t1 !== 'number')
        return this.initVelocityConstraints$1$bailout(25, step, t1, jointAngle, b1, b2, r1, r2, m1, m2, i1, i2, 0, 0, 0);
      if (jointAngle <= t1) {
        if (!(this.limitState === 1))
          this.impulse.z = 0;
        this.limitState = 1;
      } else {
        t1 = this.upperAngle;
        if (typeof t1 !== 'number')
          return this.initVelocityConstraints$1$bailout(26, step, jointAngle, r1, b1, t1, b2, r2, m1, m2, i1, i2, 0, 0, 0);
        if (jointAngle >= t1) {
          if (!(this.limitState === 2))
            this.impulse.z = 0;
          this.limitState = 2;
        } else {
          this.limitState = 0;
          this.impulse.z = 0;
        }
      }
    }
  } else
    this.limitState = 0;
  t1 = step.warmStarting;
  var t2 = this.impulse;
  if (t1) {
    t2.mulLocal$1(step.dtRatio);
    this._motorImpulse = this._motorImpulse * step.dtRatio;
    var temp = $.Vector$(0, 0);
    var P = $.Vector$(0, 0);
    P.setCoords$2(t2.x, t2.y);
    temp.setFrom$1(P).mulLocal$1(m1);
    b1.get$linearVelocity().subLocal$1(temp);
    t1 = b1.get$angularVelocity();
    if (typeof t1 !== 'number')
      return this.initVelocityConstraints$1$bailout(27, i2, t1, temp, P, b1, b2, r1, r2, m2, t2, i1, 0, 0, 0);
    var t4 = r1.x;
    if (typeof t4 !== 'number')
      return this.initVelocityConstraints$1$bailout(28, t1, m2, i1, i2, t2, temp, P, b1, b2, r1, r2, t4, 0, 0);
    t6 = P.y;
    if (typeof t6 !== 'number')
      return this.initVelocityConstraints$1$bailout(29, t6, t1, m2, t2, i1, i2, temp, P, b1, b2, r1, r2, t4, 0);
    t6 = t4 * t6;
    t4 = r1.y;
    if (typeof t4 !== 'number')
      return this.initVelocityConstraints$1$bailout(30, t4, t6, m2, t2, i1, i2, temp, P, b1, b2, r2, t1, 0, 0);
    t9 = P.x;
    if (typeof t9 !== 'number')
      return this.initVelocityConstraints$1$bailout(31, t4, t9, t6, m2, t2, i1, i2, temp, P, b1, b2, r2, t1, 0);
    t11 = t6 - t4 * t9 + this._motorImpulse;
    t12 = t2.z;
    if (typeof t12 !== 'number')
      return this.initVelocityConstraints$1$bailout(32, t12, t11, m2, t2, i1, i2, temp, P, b1, b2, r2, t1, 0, 0);
    b1.set$angularVelocity(t1 - i1 * (t11 + t12));
    temp.setFrom$1(P).mulLocal$1(m2);
    b2.get$linearVelocity().addLocal$1(temp);
    t14 = b2.get$angularVelocity();
    if (typeof t14 !== 'number')
      return this.initVelocityConstraints$1$bailout(33, P, b2, t14, r2, t2, i2, 0, 0, 0, 0, 0, 0, 0, 0);
    t16 = r2.x;
    if (typeof t16 !== 'number')
      return this.initVelocityConstraints$1$bailout(34, P, t16, b2, t14, r2, t2, i2, 0, 0, 0, 0, 0, 0, 0);
    var t18 = P.y;
    if (typeof t18 !== 'number')
      return this.initVelocityConstraints$1$bailout(35, P, t16, t18, b2, t14, r2, t2, i2, 0, 0, 0, 0, 0, 0);
    t18 = t16 * t18;
    t16 = r2.y;
    if (typeof t16 !== 'number')
      return this.initVelocityConstraints$1$bailout(36, P, t16, b2, t14, t2, t18, i2, 0, 0, 0, 0, 0, 0, 0);
    t21 = P.x;
    if (typeof t21 !== 'number')
      return this.initVelocityConstraints$1$bailout(37, t16, b2, t14, t21, t2, t18, i2, 0, 0, 0, 0, 0, 0, 0);
    t23 = t18 - t16 * t21 + this._motorImpulse;
    t2 = t2.z;
    if (typeof t2 !== 'number')
      return this.initVelocityConstraints$1$bailout(38, i2, b2, t14, t2, t23, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    b2.set$angularVelocity(t14 + i2 * (t23 + t2));
  } else {
    t2.setZero$0();
    this._motorImpulse = 0;
  }
},
 initVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      var step = env0;
      b1 = env1;
      b2 = env2;
      r1 = env3;
      r2 = env4;
      m1 = env5;
      break;
    case 2:
      step = env0;
      b1 = env1;
      b2 = env2;
      r1 = env3;
      r2 = env4;
      m1 = env5;
      m2 = env6;
      break;
    case 3:
      step = env0;
      b1 = env1;
      b2 = env2;
      r1 = env3;
      r2 = env4;
      m1 = env5;
      m2 = env6;
      i1 = env7;
      break;
    case 4:
      step = env0;
      b1 = env1;
      b2 = env2;
      r1 = env3;
      r2 = env4;
      m1 = env5;
      m2 = env6;
      i1 = env7;
      i2 = env8;
      break;
    case 5:
      step = env0;
      t5 = env1;
      t6 = env2;
      b1 = env3;
      b2 = env4;
      r1 = env5;
      r2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 6:
      step = env0;
      t8 = env1;
      t5 = env2;
      b1 = env3;
      b2 = env4;
      r1 = env5;
      r2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 7:
      step = env0;
      t10 = env1;
      t11 = env2;
      t5 = env3;
      m1 = env4;
      m2 = env5;
      i1 = env6;
      i2 = env7;
      b1 = env8;
      b2 = env9;
      r1 = env10;
      r2 = env11;
      break;
    case 8:
      step = env0;
      t10 = env1;
      t11 = env2;
      t13 = env3;
      t5 = env4;
      m1 = env5;
      m2 = env6;
      i1 = env7;
      i2 = env8;
      b1 = env9;
      b2 = env10;
      r1 = env11;
      r2 = env12;
      break;
    case 9:
      step = env0;
      t10 = env1;
      t11 = env2;
      t16 = env3;
      t15 = env4;
      m1 = env5;
      m2 = env6;
      i1 = env7;
      i2 = env8;
      b1 = env9;
      b2 = env10;
      r1 = env11;
      r2 = env12;
      break;
    case 10:
      step = env0;
      t10 = env1;
      t11 = env2;
      t16 = env3;
      t18 = env4;
      t15 = env5;
      m1 = env6;
      m2 = env7;
      i1 = env8;
      i2 = env9;
      b1 = env10;
      b2 = env11;
      r1 = env12;
      r2 = env13;
      break;
    case 11:
      step = env0;
      t10 = env1;
      t11 = env2;
      t20 = env3;
      m1 = env4;
      m2 = env5;
      i1 = env6;
      i2 = env7;
      t15 = env8;
      b1 = env9;
      b2 = env10;
      r1 = env11;
      r2 = env12;
      break;
    case 12:
      step = env0;
      t10 = env1;
      t11 = env2;
      t20 = env3;
      m1 = env4;
      t23 = env5;
      m2 = env6;
      i1 = env7;
      i2 = env8;
      b1 = env9;
      b2 = env10;
      r1 = env11;
      r2 = env12;
      t22 = env13;
      break;
    case 13:
      step = env0;
      t11 = env1;
      t20 = env2;
      t22 = env3;
      m1 = env4;
      m2 = env5;
      i2 = env6;
      t10 = env7;
      i1 = env8;
      t25 = env9;
      b1 = env10;
      b2 = env11;
      r1 = env12;
      r2 = env13;
      break;
    case 14:
      step = env0;
      t11 = env1;
      t20 = env2;
      m1 = env3;
      m2 = env4;
      i1 = env5;
      i2 = env6;
      t10 = env7;
      t22 = env8;
      b1 = env9;
      b2 = env10;
      r1 = env11;
      r2 = env12;
      t27 = env13;
      break;
    case 15:
      step = env0;
      t11 = env1;
      t20 = env2;
      m1 = env3;
      m2 = env4;
      i1 = env5;
      i2 = env6;
      t10 = env7;
      b1 = env8;
      r1 = env9;
      b2 = env10;
      r2 = env11;
      t29 = env12;
      break;
    case 16:
      step = env0;
      t29 = env1;
      t11 = env2;
      t20 = env3;
      m1 = env4;
      m2 = env5;
      i1 = env6;
      i2 = env7;
      t10 = env8;
      b1 = env9;
      b2 = env10;
      r1 = env11;
      r2 = env12;
      t31 = env13;
      break;
    case 17:
      step = env0;
      t1 = env1;
      b1 = env2;
      b2 = env3;
      r1 = env4;
      r2 = env5;
      m1 = env6;
      m2 = env7;
      i1 = env8;
      i2 = env9;
      break;
    case 18:
      step = env0;
      t1 = env1;
      b1 = env2;
      b2 = env3;
      r1 = env4;
      r2 = env5;
      m1 = env6;
      m2 = env7;
      i1 = env8;
      i2 = env9;
      break;
    case 19:
      step = env0;
      r2 = env1;
      b1 = env2;
      b2 = env3;
      r1 = env4;
      t1 = env5;
      m1 = env6;
      m2 = env7;
      i1 = env8;
      i2 = env9;
      break;
    case 20:
      step = env0;
      r2 = env1;
      t3 = env2;
      b1 = env3;
      b2 = env4;
      r1 = env5;
      t1 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 21:
      step = env0;
      r2 = env1;
      t3 = env2;
      b1 = env3;
      b2 = env4;
      r1 = env5;
      t1 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 22:
      step = env0;
      jointAngle = env1;
      t1 = env2;
      b1 = env3;
      b2 = env4;
      r1 = env5;
      r2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 23:
      step = env0;
      jointAngle = env1;
      m1 = env2;
      m2 = env3;
      i1 = env4;
      i2 = env5;
      b1 = env6;
      b2 = env7;
      r1 = env8;
      r2 = env9;
      t1 = env10;
      t3 = env11;
      break;
    case 24:
      step = env0;
      jointAngle = env1;
      r1 = env2;
      b1 = env3;
      t5 = env4;
      b2 = env5;
      r2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 25:
      step = env0;
      t1 = env1;
      jointAngle = env2;
      b1 = env3;
      b2 = env4;
      r1 = env5;
      r2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 26:
      step = env0;
      jointAngle = env1;
      r1 = env2;
      b1 = env3;
      t1 = env4;
      b2 = env5;
      r2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 27:
      i2 = env0;
      t1 = env1;
      temp = env2;
      P = env3;
      b1 = env4;
      b2 = env5;
      r1 = env6;
      r2 = env7;
      m2 = env8;
      t2 = env9;
      i1 = env10;
      break;
    case 28:
      t1 = env0;
      m2 = env1;
      i1 = env2;
      i2 = env3;
      t2 = env4;
      temp = env5;
      P = env6;
      b1 = env7;
      b2 = env8;
      r1 = env9;
      r2 = env10;
      t4 = env11;
      break;
    case 29:
      t6 = env0;
      t1 = env1;
      m2 = env2;
      t2 = env3;
      i1 = env4;
      i2 = env5;
      temp = env6;
      P = env7;
      b1 = env8;
      b2 = env9;
      r1 = env10;
      r2 = env11;
      t4 = env12;
      break;
    case 30:
      t4 = env0;
      t6 = env1;
      m2 = env2;
      t2 = env3;
      i1 = env4;
      i2 = env5;
      temp = env6;
      P = env7;
      b1 = env8;
      b2 = env9;
      r2 = env10;
      t1 = env11;
      break;
    case 31:
      t4 = env0;
      t9 = env1;
      t6 = env2;
      m2 = env3;
      t2 = env4;
      i1 = env5;
      i2 = env6;
      temp = env7;
      P = env8;
      b1 = env9;
      b2 = env10;
      r2 = env11;
      t1 = env12;
      break;
    case 32:
      t12 = env0;
      t11 = env1;
      m2 = env2;
      t2 = env3;
      i1 = env4;
      i2 = env5;
      temp = env6;
      P = env7;
      b1 = env8;
      b2 = env9;
      r2 = env10;
      t1 = env11;
      break;
    case 33:
      P = env0;
      b2 = env1;
      t14 = env2;
      r2 = env3;
      t2 = env4;
      i2 = env5;
      break;
    case 34:
      P = env0;
      t16 = env1;
      b2 = env2;
      t14 = env3;
      r2 = env4;
      t2 = env5;
      i2 = env6;
      break;
    case 35:
      P = env0;
      t16 = env1;
      t18 = env2;
      b2 = env3;
      t14 = env4;
      r2 = env5;
      t2 = env6;
      i2 = env7;
      break;
    case 36:
      P = env0;
      t16 = env1;
      b2 = env2;
      t14 = env3;
      t2 = env4;
      t18 = env5;
      i2 = env6;
      break;
    case 37:
      t16 = env0;
      b2 = env1;
      t14 = env2;
      t21 = env3;
      t2 = env4;
      t18 = env5;
      i2 = env6;
      break;
    case 38:
      i2 = env0;
      b2 = env1;
      t14 = env2;
      t2 = env3;
      t23 = env4;
      break;
  }
  switch (state0) {
    case 0:
      var b1 = this.bodyA;
      var b2 = this.bodyB;
      if (this._enableMotor === true || this._enableLimit === true)
        ;
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
      r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
      $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
      $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
      var m1 = b1.get$invMass();
    case 1:
      state0 = 0;
      var m2 = b2.get$invMass();
    case 2:
      state0 = 0;
      var i1 = b1.get$invInertia();
    case 3:
      state0 = 0;
      var i2 = b2.get$invInertia();
    case 4:
      state0 = 0;
      var t5 = $.add(m1, m2);
      var t6 = r1.y;
    case 5:
      state0 = 0;
      t5 = $.add(t5, $.mul($.mul(t6, t6), i1));
      var t8 = r2.y;
    case 6:
      state0 = 0;
      t5 = $.add(t5, $.mul($.mul(t8, t8), i2));
      var t10 = this.mass;
      var t11 = t10.col1;
      t11.x = t5;
      t5 = r1.y;
    case 7:
      state0 = 0;
      t5 = $.neg(t5);
      var t13 = r1.x;
    case 8:
      state0 = 0;
      var t15 = $.mul($.mul(t5, t13), i1);
      var t16 = r2.y;
    case 9:
      state0 = 0;
      var t18 = r2.x;
    case 10:
      state0 = 0;
      t15 = $.sub(t15, $.mul($.mul(t16, t18), i2));
      var t20 = t10.col2;
      t20.x = t15;
      t15 = r1.y;
    case 11:
      state0 = 0;
      var t22 = $.mul($.neg(t15), i1);
      var t23 = r2.y;
    case 12:
      state0 = 0;
      t22 = $.sub(t22, $.mul(t23, i2));
      t10 = t10.col3;
      t10.x = t22;
      t11.y = t20.x;
      t22 = $.add(m1, m2);
      var t25 = r1.x;
    case 13:
      state0 = 0;
      t22 = $.add(t22, $.mul($.mul(t25, t25), i1));
      var t27 = r2.x;
    case 14:
      state0 = 0;
      t20.y = $.add(t22, $.mul($.mul(t27, t27), i2));
      var t29 = r1.x;
    case 15:
      state0 = 0;
      t29 = $.mul(t29, i1);
      var t31 = r2.x;
    case 16:
      state0 = 0;
      t10.y = $.add(t29, $.mul(t31, i2));
      t11.z = t10.x;
      t20.z = t10.y;
      t10.z = $.add(i1, i2);
      this.motorMass = $.add(i1, i2);
      var t1 = this.motorMass;
    case 17:
      state0 = 0;
      if ($.gtB(t1, 0)) {
        t1 = this.motorMass;
        if (typeof t1 !== 'number')
          throw $.iae(t1);
        this.motorMass = 1 / t1;
      }
      t1 = this._enableMotor;
    case 18:
      state0 = 0;
      if ($.eqB(t1, false))
        this._motorImpulse = 0;
    default:
      if (state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 0 && this._enableLimit === true)
        switch (state0) {
          case 0:
            t1 = b2.get$sweep().get$angle();
          case 19:
            state0 = 0;
            var t3 = b1.get$sweep().get$angle();
          case 20:
            state0 = 0;
            t3 = $.sub(t1, t3);
            t1 = this.referenceAngle;
          case 21:
            state0 = 0;
            var jointAngle = $.sub(t3, t1);
            t1 = this.upperAngle;
          case 22:
            state0 = 0;
            t3 = this.lowerAngle;
          case 23:
            state0 = 0;
            t5 = $.abs($.sub(t1, t3));
          case 24:
            state0 = 0;
          default:
            if (state0 === 0 && $.ltB(t5, 0.06981317007977318))
              this.limitState = 3;
            else
              switch (state0) {
                case 0:
                  t1 = this.lowerAngle;
                case 25:
                  state0 = 0;
                case 26:
                  if (state0 === 0 && $.leB(jointAngle, t1)) {
                    if (!(this.limitState === 1))
                      this.impulse.z = 0;
                    this.limitState = 1;
                  } else
                    switch (state0) {
                      case 0:
                        t1 = this.upperAngle;
                      case 26:
                        state0 = 0;
                        if ($.geB(jointAngle, t1)) {
                          if (!(this.limitState === 2))
                            this.impulse.z = 0;
                          this.limitState = 2;
                        } else {
                          this.limitState = 0;
                          this.impulse.z = 0;
                        }
                    }
              }
        }
      else
        this.limitState = 0;
      t1 = step.warmStarting;
      var t2 = this.impulse;
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
      if (state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 0 && t1)
        switch (state0) {
          case 0:
            t2.mulLocal$1(step.dtRatio);
            this._motorImpulse = this._motorImpulse * step.dtRatio;
            var temp = $.Vector$(0, 0);
            var P = $.Vector$(0, 0);
            P.setCoords$2(t2.x, t2.y);
            temp.setFrom$1(P).mulLocal$1(m1);
            b1.get$linearVelocity().subLocal$1(temp);
            t1 = b1.get$angularVelocity();
          case 27:
            state0 = 0;
            var t4 = r1.x;
          case 28:
            state0 = 0;
            t6 = P.y;
          case 29:
            state0 = 0;
            t6 = $.mul(t4, t6);
            t4 = r1.y;
          case 30:
            state0 = 0;
            var t9 = P.x;
          case 31:
            state0 = 0;
            t11 = $.add($.sub(t6, $.mul(t4, t9)), this._motorImpulse);
            var t12 = t2.z;
          case 32:
            state0 = 0;
            b1.set$angularVelocity($.sub(t1, $.mul(i1, $.add(t11, t12))));
            temp.setFrom$1(P).mulLocal$1(m2);
            b2.get$linearVelocity().addLocal$1(temp);
            var t14 = b2.get$angularVelocity();
          case 33:
            state0 = 0;
            t16 = r2.x;
          case 34:
            state0 = 0;
            t18 = P.y;
          case 35:
            state0 = 0;
            t18 = $.mul(t16, t18);
            t16 = r2.y;
          case 36:
            state0 = 0;
            var t21 = P.x;
          case 37:
            state0 = 0;
            t23 = $.add($.sub(t18, $.mul(t16, t21)), this._motorImpulse);
            t2 = t2.z;
          case 38:
            state0 = 0;
            b2.set$angularVelocity($.add(t14, $.mul(i2, $.add(t23, t2))));
        }
      else {
        t2.setZero$0();
        this._motorImpulse = 0;
      }
  }
},
 solveVelocityConstraints$1: function(step) {
  var b1 = this.bodyA;
  var b2 = this.bodyB;
  var v1 = b1.get$linearVelocity();
  var w1 = b1.get$angularVelocity();
  if (typeof w1 !== 'number')
    return this.solveVelocityConstraints$1$bailout(1, step, b1, b2, v1, w1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var v2 = b2.get$linearVelocity();
  var w2 = b2.get$angularVelocity();
  if (typeof w2 !== 'number')
    return this.solveVelocityConstraints$1$bailout(2, step, b1, b2, v1, w1, v2, w2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var m1 = b1.get$invMass();
  var m2 = b2.get$invMass();
  var i1 = b1.get$invInertia();
  if (typeof i1 !== 'number')
    return this.solveVelocityConstraints$1$bailout(3, step, b1, b2, v1, w1, v2, w2, m1, m2, i1, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var i2 = b2.get$invInertia();
  if (typeof i2 !== 'number')
    return this.solveVelocityConstraints$1$bailout(4, step, b1, b2, v1, w1, v2, w2, m1, m2, i1, i2, 0, 0, 0, 0, 0, 0, 0, 0);
  if (this._enableMotor === true && !(this.limitState === 3)) {
    var t1 = w2 - w1;
    var t2 = this._motorSpeed;
    if (typeof t2 !== 'number')
      return this.solveVelocityConstraints$1$bailout(5, step, t1, v1, w1, v2, w2, m1, m2, i1, i2, b1, b2, t2, 0, 0, 0, 0, 0, 0);
    var Cdot = t1 - t2;
    t2 = this.motorMass;
    if (typeof t2 !== 'number')
      return this.solveVelocityConstraints$1$bailout(6, step, Cdot, v1, w1, v2, w2, m1, m2, i1, i2, b1, b2, t2, 0, 0, 0, 0, 0, 0);
    var imp = t2 * -Cdot;
    var oldImpulse = this._motorImpulse;
    t2 = step.dt;
    var t4 = this._maxMotorTorque;
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    var maxImpulse = t2 * t4;
    t4 = oldImpulse + imp;
    this._motorImpulse = $.max(-maxImpulse, $.min(t4, maxImpulse));
    imp = this._motorImpulse - oldImpulse;
    w1 -= i1 * imp;
    w2 += i2 * imp;
  }
  var temp = $.Vector$(0, 0);
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  t1 = this._enableLimit === true && !(this.limitState === 0);
  t2 = this.localAnchor1;
  var t3 = this.localAnchor2;
  t4 = this.mass;
  if (t1) {
    r1.setFrom$1(t2).subLocal$1(b1.get$localCenter());
    r2.setFrom$1(t3).subLocal$1(b2.get$localCenter());
    $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
    $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
    var Cdot1 = $.Vector$(0, 0);
    Cdot = $.Vector3$(0, 0, 0);
    $.Vector_crossNumAndVectorToOut(w1, r1, temp);
    $.Vector_crossNumAndVectorToOut(w2, r2, Cdot1);
    Cdot1.addLocal$1(v2).subLocal$1(v1).subLocal$1(temp);
    var Cdot2 = w2 - w1;
    Cdot.setCoords$3(Cdot1.x, Cdot1.y, Cdot2);
    imp = $.Vector3$(0, 0, 0);
    t4.solve33ToOut$2(Cdot.negateLocal$0(), imp);
    t1 = this.limitState;
    if (t1 === 3)
      this.impulse.addLocal$1(imp);
    else if (t1 === 1) {
      t1 = this.impulse;
      t2 = t1.z;
      if (typeof t2 !== 'number')
        return this.solveVelocityConstraints$1$bailout(7, imp, v1, t4, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, Cdot1, r1, t1, t2, 0);
      var t5 = imp.z;
      if (typeof t5 !== 'number')
        return this.solveVelocityConstraints$1$bailout(8, imp, v1, t4, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, Cdot1, r1, t1, t2, t5);
      if (t2 + t5 < 0) {
        t4.solve22ToOut$2(Cdot1.negateLocal$0(), temp);
        imp.x = temp.x;
        imp.y = temp.y;
        t2 = t1.z;
        if (typeof t2 !== 'number')
          return this.solveVelocityConstraints$1$bailout(9, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t1, t2, 0, 0, 0);
        imp.z = -t2;
        t4 = t1.x;
        if (typeof t4 !== 'number')
          return this.solveVelocityConstraints$1$bailout(10, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t1, t4, 0, 0, 0);
        var t6 = temp.x;
        if (typeof t6 !== 'number')
          return this.solveVelocityConstraints$1$bailout(11, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t1, t4, t6, 0, 0);
        t1.x = t4 + t6;
        var t8 = t1.y;
        if (typeof t8 !== 'number')
          return this.solveVelocityConstraints$1$bailout(12, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t1, t8, 0, 0, 0);
        var t10 = temp.y;
        if (typeof t10 !== 'number')
          return this.solveVelocityConstraints$1$bailout(13, t10, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t1, t8, 0, 0);
        t1.y = t8 + t10;
        t1.z = 0;
      }
    } else if (t1 === 2) {
      t1 = this.impulse;
      t2 = t1.z;
      if (typeof t2 !== 'number')
        return this.solveVelocityConstraints$1$bailout(14, imp, v1, t4, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, Cdot1, r1, t1, t2, 0);
      t5 = imp.z;
      if (typeof t5 !== 'number')
        return this.solveVelocityConstraints$1$bailout(15, imp, v1, t4, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, Cdot1, r1, t1, t2, t5);
      if (t2 + t5 > 0) {
        t4.solve22ToOut$2(Cdot1.negateLocal$0(), temp);
        imp.x = temp.x;
        imp.y = temp.y;
        t2 = t1.z;
        if (typeof t2 !== 'number')
          return this.solveVelocityConstraints$1$bailout(16, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, t2, r1, t1, 0, 0, 0);
        imp.z = -t2;
        t4 = t1.x;
        if (typeof t4 !== 'number')
          return this.solveVelocityConstraints$1$bailout(17, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t4, t1, 0, 0, 0);
        t6 = temp.x;
        if (typeof t6 !== 'number')
          return this.solveVelocityConstraints$1$bailout(18, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t4, t6, t1, 0, 0);
        t1.x = t4 + t6;
        t8 = t1.y;
        if (typeof t8 !== 'number')
          return this.solveVelocityConstraints$1$bailout(19, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t1, t8, 0, 0, 0);
        t10 = temp.y;
        if (typeof t10 !== 'number')
          return this.solveVelocityConstraints$1$bailout(20, imp, v1, v2, w2, m1, w1, temp, i2, m2, i1, r2, b1, b2, r1, t1, t8, t10, 0, 0);
        t1.y = t8 + t10;
        t1.z = 0;
      }
    }
    var P = $.Vector$(0, 0);
    P.setCoords$2(imp.x, imp.y);
    temp.setFrom$1(P).mulLocal$1(m1);
    v1.subLocal$1(temp);
    t1 = r1.x;
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(21, imp, w1, w2, v2, temp, i2, m2, i1, P, b1, b2, r2, r1, t1, 0, 0, 0, 0, 0);
    t3 = P.y;
    if (typeof t3 !== 'number')
      return this.solveVelocityConstraints$1$bailout(22, t3, imp, w1, w2, v2, temp, i2, m2, i1, P, b1, b2, r2, r1, t1, 0, 0, 0, 0);
    t3 = t1 * t3;
    t1 = r1.y;
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(23, t1, imp, w1, w2, v2, temp, i2, m2, i1, P, b1, b2, r2, t3, 0, 0, 0, 0, 0);
    t6 = P.x;
    if (typeof t6 !== 'number')
      return this.solveVelocityConstraints$1$bailout(24, t1, imp, t6, v2, w2, w1, temp, i2, m2, i1, P, b1, b2, r2, t3, 0, 0, 0, 0);
    t3 -= t1 * t6;
    t8 = imp.z;
    if (typeof t8 !== 'number')
      return this.solveVelocityConstraints$1$bailout(25, imp, t8, w1, w2, v2, temp, i2, m2, i1, P, b1, b2, r2, t3, 0, 0, 0, 0, 0);
    w1 -= i1 * (t3 + t8);
    temp.setFrom$1(P).mulLocal$1(m2);
    v2.addLocal$1(temp);
    t10 = r2.x;
    if (typeof t10 !== 'number')
      return this.solveVelocityConstraints$1$bailout(26, b1, b2, imp, t10, P, w1, w2, i2, r2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var t12 = P.y;
    if (typeof t12 !== 'number')
      return this.solveVelocityConstraints$1$bailout(27, b1, b2, imp, t10, t12, w1, w2, P, i2, r2, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    t12 = t10 * t12;
    t10 = r2.y;
    if (typeof t10 !== 'number')
      return this.solveVelocityConstraints$1$bailout(28, b1, b2, imp, w1, t10, w2, i2, t12, P, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var t15 = P.x;
    if (typeof t15 !== 'number')
      return this.solveVelocityConstraints$1$bailout(29, b1, b2, imp, w1, t10, w2, t15, i2, t12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    t12 -= t10 * t15;
    var t17 = imp.z;
    if (typeof t17 !== 'number')
      return this.solveVelocityConstraints$1$bailout(30, b1, b2, t12, w1, w2, t17, i2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    w2 += i2 * (t12 + t17);
  } else {
    r1.setFrom$1(t2).subLocal$1(b1.get$localCenter());
    r2.setFrom$1(t3).subLocal$1(b2.get$localCenter());
    $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
    $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
    Cdot = $.Vector$(0, 0);
    imp = $.Vector$(0, 0);
    $.Vector_crossNumAndVectorToOut(w1, r1, temp);
    $.Vector_crossNumAndVectorToOut(w2, r2, Cdot);
    Cdot.addLocal$1(v2).subLocal$1(v1).subLocal$1(temp);
    t4.solve22ToOut$2(Cdot.negateLocal$0(), imp);
    t1 = this.impulse;
    t4 = t1.x;
    if (typeof t4 !== 'number')
      return this.solveVelocityConstraints$1$bailout(31, v1, v2, w2, m1, m2, temp, i2, w1, i1, r2, b1, b2, imp, r1, t1, t4, 0, 0, 0);
    t6 = imp.x;
    if (typeof t6 !== 'number')
      return this.solveVelocityConstraints$1$bailout(32, v1, v2, w2, m1, m2, temp, i2, w1, i1, r2, b1, b2, imp, r1, t6, t1, t4, 0, 0);
    t1.x = t4 + t6;
    t8 = t1.y;
    if (typeof t8 !== 'number')
      return this.solveVelocityConstraints$1$bailout(33, v1, v2, w2, m1, m2, temp, i2, w1, i1, r2, b1, b2, imp, r1, t8, t1, 0, 0, 0);
    t10 = imp.y;
    if (typeof t10 !== 'number')
      return this.solveVelocityConstraints$1$bailout(34, v1, v2, w2, m1, m2, temp, i2, w1, i1, r2, b1, b2, imp, r1, t8, t10, t1, 0, 0);
    t1.y = t8 + t10;
    temp.setFrom$1(imp).mulLocal$1(m1);
    v1.subLocal$1(temp);
    t1 = r1.x;
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(35, v2, w2, m2, temp, i2, w1, i1, imp, b1, b2, r2, r1, t1, 0, 0, 0, 0, 0, 0);
    var t13 = imp.y;
    if (typeof t13 !== 'number')
      return this.solveVelocityConstraints$1$bailout(36, v2, w2, m2, temp, i2, w1, i1, imp, b1, b2, r2, r1, t1, t13, 0, 0, 0, 0, 0);
    t13 = t1 * t13;
    t1 = r1.y;
    if (typeof t1 !== 'number')
      return this.solveVelocityConstraints$1$bailout(37, v2, w2, m2, temp, i2, w1, i1, imp, b1, b2, r2, t13, t1, 0, 0, 0, 0, 0, 0);
    var t16 = imp.x;
    if (typeof t16 !== 'number')
      return this.solveVelocityConstraints$1$bailout(38, v2, w2, m2, temp, i2, w1, i1, imp, b1, b2, r2, t13, t1, t16, 0, 0, 0, 0, 0);
    w1 -= i1 * (t13 - t1 * t16);
    temp.setFrom$1(imp).mulLocal$1(m2);
    v2.addLocal$1(temp);
    var t18 = r2.x;
    if (typeof t18 !== 'number')
      return this.solveVelocityConstraints$1$bailout(39, b1, b2, r2, w1, w2, t18, i2, imp, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var t20 = imp.y;
    if (typeof t20 !== 'number')
      return this.solveVelocityConstraints$1$bailout(40, b1, b2, imp, w1, w2, t18, t20, i2, r2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    t20 = t18 * t20;
    t18 = r2.y;
    if (typeof t18 !== 'number')
      return this.solveVelocityConstraints$1$bailout(41, b1, b2, w1, w2, t18, i2, t20, imp, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var t23 = imp.x;
    if (typeof t23 !== 'number')
      return this.solveVelocityConstraints$1$bailout(42, b1, b2, w1, w2, t18, t23, i2, t20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    w2 += i2 * (t20 - t18 * t23);
  }
  b1.set$angularVelocity(w1);
  b2.set$angularVelocity(w2);
},
 solveVelocityConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18) {
  switch (state0) {
    case 1:
      var step = env0;
      b1 = env1;
      b2 = env2;
      v1 = env3;
      w1 = env4;
      break;
    case 2:
      step = env0;
      b1 = env1;
      b2 = env2;
      v1 = env3;
      w1 = env4;
      v2 = env5;
      w2 = env6;
      break;
    case 3:
      step = env0;
      b1 = env1;
      b2 = env2;
      v1 = env3;
      w1 = env4;
      v2 = env5;
      w2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      break;
    case 4:
      step = env0;
      b1 = env1;
      b2 = env2;
      v1 = env3;
      w1 = env4;
      v2 = env5;
      w2 = env6;
      m1 = env7;
      m2 = env8;
      i1 = env9;
      i2 = env10;
      break;
    case 5:
      step = env0;
      t1 = env1;
      v1 = env2;
      w1 = env3;
      v2 = env4;
      w2 = env5;
      m1 = env6;
      m2 = env7;
      i1 = env8;
      i2 = env9;
      b1 = env10;
      b2 = env11;
      t2 = env12;
      break;
    case 6:
      step = env0;
      Cdot = env1;
      v1 = env2;
      w1 = env3;
      v2 = env4;
      w2 = env5;
      m1 = env6;
      m2 = env7;
      i1 = env8;
      i2 = env9;
      b1 = env10;
      b2 = env11;
      t2 = env12;
      break;
    case 7:
      imp = env0;
      v1 = env1;
      t4 = env2;
      v2 = env3;
      w2 = env4;
      m1 = env5;
      w1 = env6;
      temp = env7;
      i2 = env8;
      m2 = env9;
      i1 = env10;
      r2 = env11;
      b1 = env12;
      b2 = env13;
      Cdot1 = env14;
      r1 = env15;
      t1 = env16;
      t2 = env17;
      break;
    case 8:
      imp = env0;
      v1 = env1;
      t4 = env2;
      v2 = env3;
      w2 = env4;
      m1 = env5;
      w1 = env6;
      temp = env7;
      i2 = env8;
      m2 = env9;
      i1 = env10;
      r2 = env11;
      b1 = env12;
      b2 = env13;
      Cdot1 = env14;
      r1 = env15;
      t1 = env16;
      t2 = env17;
      t5 = env18;
      break;
    case 9:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t1 = env14;
      t2 = env15;
      break;
    case 10:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t1 = env14;
      t4 = env15;
      break;
    case 11:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t1 = env14;
      t4 = env15;
      t6 = env16;
      break;
    case 12:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t1 = env14;
      t8 = env15;
      break;
    case 13:
      t10 = env0;
      imp = env1;
      v1 = env2;
      v2 = env3;
      w2 = env4;
      m1 = env5;
      w1 = env6;
      temp = env7;
      i2 = env8;
      m2 = env9;
      i1 = env10;
      r2 = env11;
      b1 = env12;
      b2 = env13;
      r1 = env14;
      t1 = env15;
      t8 = env16;
      break;
    case 14:
      imp = env0;
      v1 = env1;
      t4 = env2;
      v2 = env3;
      w2 = env4;
      m1 = env5;
      w1 = env6;
      temp = env7;
      i2 = env8;
      m2 = env9;
      i1 = env10;
      r2 = env11;
      b1 = env12;
      b2 = env13;
      Cdot1 = env14;
      r1 = env15;
      t1 = env16;
      t2 = env17;
      break;
    case 15:
      imp = env0;
      v1 = env1;
      t4 = env2;
      v2 = env3;
      w2 = env4;
      m1 = env5;
      w1 = env6;
      temp = env7;
      i2 = env8;
      m2 = env9;
      i1 = env10;
      r2 = env11;
      b1 = env12;
      b2 = env13;
      Cdot1 = env14;
      r1 = env15;
      t1 = env16;
      t2 = env17;
      t5 = env18;
      break;
    case 16:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      t2 = env13;
      r1 = env14;
      t1 = env15;
      break;
    case 17:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t4 = env14;
      t1 = env15;
      break;
    case 18:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t4 = env14;
      t6 = env15;
      t1 = env16;
      break;
    case 19:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t1 = env14;
      t8 = env15;
      break;
    case 20:
      imp = env0;
      v1 = env1;
      v2 = env2;
      w2 = env3;
      m1 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      r2 = env10;
      b1 = env11;
      b2 = env12;
      r1 = env13;
      t1 = env14;
      t8 = env15;
      t10 = env16;
      break;
    case 21:
      imp = env0;
      w1 = env1;
      w2 = env2;
      v2 = env3;
      temp = env4;
      i2 = env5;
      m2 = env6;
      i1 = env7;
      P = env8;
      b1 = env9;
      b2 = env10;
      r2 = env11;
      r1 = env12;
      t1 = env13;
      break;
    case 22:
      t3 = env0;
      imp = env1;
      w1 = env2;
      w2 = env3;
      v2 = env4;
      temp = env5;
      i2 = env6;
      m2 = env7;
      i1 = env8;
      P = env9;
      b1 = env10;
      b2 = env11;
      r2 = env12;
      r1 = env13;
      t1 = env14;
      break;
    case 23:
      t1 = env0;
      imp = env1;
      w1 = env2;
      w2 = env3;
      v2 = env4;
      temp = env5;
      i2 = env6;
      m2 = env7;
      i1 = env8;
      P = env9;
      b1 = env10;
      b2 = env11;
      r2 = env12;
      t3 = env13;
      break;
    case 24:
      t1 = env0;
      imp = env1;
      t6 = env2;
      v2 = env3;
      w2 = env4;
      w1 = env5;
      temp = env6;
      i2 = env7;
      m2 = env8;
      i1 = env9;
      P = env10;
      b1 = env11;
      b2 = env12;
      r2 = env13;
      t3 = env14;
      break;
    case 25:
      imp = env0;
      t8 = env1;
      w1 = env2;
      w2 = env3;
      v2 = env4;
      temp = env5;
      i2 = env6;
      m2 = env7;
      i1 = env8;
      P = env9;
      b1 = env10;
      b2 = env11;
      r2 = env12;
      t3 = env13;
      break;
    case 26:
      b1 = env0;
      b2 = env1;
      imp = env2;
      t10 = env3;
      P = env4;
      w1 = env5;
      w2 = env6;
      i2 = env7;
      r2 = env8;
      break;
    case 27:
      b1 = env0;
      b2 = env1;
      imp = env2;
      t10 = env3;
      t12 = env4;
      w1 = env5;
      w2 = env6;
      P = env7;
      i2 = env8;
      r2 = env9;
      break;
    case 28:
      b1 = env0;
      b2 = env1;
      imp = env2;
      w1 = env3;
      t10 = env4;
      w2 = env5;
      i2 = env6;
      t12 = env7;
      P = env8;
      break;
    case 29:
      b1 = env0;
      b2 = env1;
      imp = env2;
      w1 = env3;
      t10 = env4;
      w2 = env5;
      t15 = env6;
      i2 = env7;
      t12 = env8;
      break;
    case 30:
      b1 = env0;
      b2 = env1;
      t12 = env2;
      w1 = env3;
      w2 = env4;
      t17 = env5;
      i2 = env6;
      break;
    case 31:
      v1 = env0;
      v2 = env1;
      w2 = env2;
      m1 = env3;
      m2 = env4;
      temp = env5;
      i2 = env6;
      w1 = env7;
      i1 = env8;
      r2 = env9;
      b1 = env10;
      b2 = env11;
      imp = env12;
      r1 = env13;
      t1 = env14;
      t4 = env15;
      break;
    case 32:
      v1 = env0;
      v2 = env1;
      w2 = env2;
      m1 = env3;
      m2 = env4;
      temp = env5;
      i2 = env6;
      w1 = env7;
      i1 = env8;
      r2 = env9;
      b1 = env10;
      b2 = env11;
      imp = env12;
      r1 = env13;
      t6 = env14;
      t1 = env15;
      t4 = env16;
      break;
    case 33:
      v1 = env0;
      v2 = env1;
      w2 = env2;
      m1 = env3;
      m2 = env4;
      temp = env5;
      i2 = env6;
      w1 = env7;
      i1 = env8;
      r2 = env9;
      b1 = env10;
      b2 = env11;
      imp = env12;
      r1 = env13;
      t8 = env14;
      t1 = env15;
      break;
    case 34:
      v1 = env0;
      v2 = env1;
      w2 = env2;
      m1 = env3;
      m2 = env4;
      temp = env5;
      i2 = env6;
      w1 = env7;
      i1 = env8;
      r2 = env9;
      b1 = env10;
      b2 = env11;
      imp = env12;
      r1 = env13;
      t8 = env14;
      t10 = env15;
      t1 = env16;
      break;
    case 35:
      v2 = env0;
      w2 = env1;
      m2 = env2;
      temp = env3;
      i2 = env4;
      w1 = env5;
      i1 = env6;
      imp = env7;
      b1 = env8;
      b2 = env9;
      r2 = env10;
      r1 = env11;
      t1 = env12;
      break;
    case 36:
      v2 = env0;
      w2 = env1;
      m2 = env2;
      temp = env3;
      i2 = env4;
      w1 = env5;
      i1 = env6;
      imp = env7;
      b1 = env8;
      b2 = env9;
      r2 = env10;
      r1 = env11;
      t1 = env12;
      t13 = env13;
      break;
    case 37:
      v2 = env0;
      w2 = env1;
      m2 = env2;
      temp = env3;
      i2 = env4;
      w1 = env5;
      i1 = env6;
      imp = env7;
      b1 = env8;
      b2 = env9;
      r2 = env10;
      t13 = env11;
      t1 = env12;
      break;
    case 38:
      v2 = env0;
      w2 = env1;
      m2 = env2;
      temp = env3;
      i2 = env4;
      w1 = env5;
      i1 = env6;
      imp = env7;
      b1 = env8;
      b2 = env9;
      r2 = env10;
      t13 = env11;
      t1 = env12;
      t16 = env13;
      break;
    case 39:
      b1 = env0;
      b2 = env1;
      r2 = env2;
      w1 = env3;
      w2 = env4;
      t18 = env5;
      i2 = env6;
      imp = env7;
      break;
    case 40:
      b1 = env0;
      b2 = env1;
      imp = env2;
      w1 = env3;
      w2 = env4;
      t18 = env5;
      t20 = env6;
      i2 = env7;
      r2 = env8;
      break;
    case 41:
      b1 = env0;
      b2 = env1;
      w1 = env2;
      w2 = env3;
      t18 = env4;
      i2 = env5;
      t20 = env6;
      imp = env7;
      break;
    case 42:
      b1 = env0;
      b2 = env1;
      w1 = env2;
      w2 = env3;
      t18 = env4;
      t23 = env5;
      i2 = env6;
      t20 = env7;
      break;
  }
  switch (state0) {
    case 0:
      var b1 = this.bodyA;
      var b2 = this.bodyB;
      var v1 = b1.get$linearVelocity();
      var w1 = b1.get$angularVelocity();
    case 1:
      state0 = 0;
      var v2 = b2.get$linearVelocity();
      var w2 = b2.get$angularVelocity();
    case 2:
      state0 = 0;
      var m1 = b1.get$invMass();
      var m2 = b2.get$invMass();
      var i1 = b1.get$invInertia();
    case 3:
      state0 = 0;
      var i2 = b2.get$invInertia();
    case 4:
      state0 = 0;
    default:
      if (state0 === 6 || state0 === 5 || state0 === 0 && this._enableMotor === true && !(this.limitState === 3))
        switch (state0) {
          case 0:
            var t1 = $.sub(w2, w1);
            var t2 = this._motorSpeed;
          case 5:
            state0 = 0;
            var Cdot = $.sub(t1, t2);
            t2 = this.motorMass;
          case 6:
            state0 = 0;
            var imp = $.mul(t2, $.neg(Cdot));
            var oldImpulse = this._motorImpulse;
            t2 = step.dt;
            var t4 = this._maxMotorTorque;
            if (typeof t4 !== 'number')
              throw $.iae(t4);
            var maxImpulse = t2 * t4;
            if (typeof imp !== 'number')
              throw $.iae(imp);
            t4 = oldImpulse + imp;
            this._motorImpulse = $.max(-maxImpulse, $.min(t4, maxImpulse));
            imp = this._motorImpulse - oldImpulse;
            w1 = $.sub(w1, $.mul(i1, imp));
            w2 = $.add(w2, $.mul(i2, imp));
        }
      var temp = $.Vector$(0, 0);
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      t1 = this._enableLimit === true && !(this.limitState === 0);
      t2 = this.localAnchor1;
      var t3 = this.localAnchor2;
      t4 = this.mass;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
      if (state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 0 && t1)
        switch (state0) {
          case 0:
            r1.setFrom$1(t2).subLocal$1(b1.get$localCenter());
            r2.setFrom$1(t3).subLocal$1(b2.get$localCenter());
            $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
            $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
            var Cdot1 = $.Vector$(0, 0);
            Cdot = $.Vector3$(0, 0, 0);
            $.Vector_crossNumAndVectorToOut(w1, r1, temp);
            $.Vector_crossNumAndVectorToOut(w2, r2, Cdot1);
            Cdot1.addLocal$1(v2).subLocal$1(v1).subLocal$1(temp);
            var Cdot2 = $.sub(w2, w1);
            Cdot.setCoords$3(Cdot1.x, Cdot1.y, Cdot2);
            imp = $.Vector3$(0, 0, 0);
            t4.solve33ToOut$2(Cdot.negateLocal$0(), imp);
            t1 = this.limitState;
          default:
            if (state0 === 0 && t1 === 3)
              this.impulse.addLocal$1(imp);
            else
              switch (state0) {
                case 0:
                default:
                  if (state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 0 && t1 === 1)
                    switch (state0) {
                      case 0:
                        t1 = this.impulse;
                        t2 = t1.z;
                      case 7:
                        state0 = 0;
                        var t5 = imp.z;
                      case 8:
                        state0 = 0;
                      default:
                        if (state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 0 && $.ltB($.add(t2, t5), 0))
                          switch (state0) {
                            case 0:
                              t4.solve22ToOut$2(Cdot1.negateLocal$0(), temp);
                              imp.x = temp.x;
                              imp.y = temp.y;
                              t2 = t1.z;
                            case 9:
                              state0 = 0;
                              imp.z = $.neg(t2);
                              t4 = t1.x;
                            case 10:
                              state0 = 0;
                              var t6 = temp.x;
                            case 11:
                              state0 = 0;
                              t1.x = $.add(t4, t6);
                              var t8 = t1.y;
                            case 12:
                              state0 = 0;
                              var t10 = temp.y;
                            case 13:
                              state0 = 0;
                              t1.y = $.add(t8, t10);
                              t1.z = 0;
                          }
                    }
                  else
                    switch (state0) {
                      case 0:
                      default:
                        if (state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 0 && t1 === 2)
                          switch (state0) {
                            case 0:
                              t1 = this.impulse;
                              t2 = t1.z;
                            case 14:
                              state0 = 0;
                              t5 = imp.z;
                            case 15:
                              state0 = 0;
                            default:
                              if (state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 0 && $.gtB($.add(t2, t5), 0))
                                switch (state0) {
                                  case 0:
                                    t4.solve22ToOut$2(Cdot1.negateLocal$0(), temp);
                                    imp.x = temp.x;
                                    imp.y = temp.y;
                                    t2 = t1.z;
                                  case 16:
                                    state0 = 0;
                                    imp.z = $.neg(t2);
                                    t4 = t1.x;
                                  case 17:
                                    state0 = 0;
                                    t6 = temp.x;
                                  case 18:
                                    state0 = 0;
                                    t1.x = $.add(t4, t6);
                                    t8 = t1.y;
                                  case 19:
                                    state0 = 0;
                                    t10 = temp.y;
                                  case 20:
                                    state0 = 0;
                                    t1.y = $.add(t8, t10);
                                    t1.z = 0;
                                }
                          }
                    }
              }
            var P = $.Vector$(0, 0);
            P.setCoords$2(imp.x, imp.y);
            temp.setFrom$1(P).mulLocal$1(m1);
            v1.subLocal$1(temp);
            t1 = r1.x;
          case 21:
            state0 = 0;
            t3 = P.y;
          case 22:
            state0 = 0;
            t3 = $.mul(t1, t3);
            t1 = r1.y;
          case 23:
            state0 = 0;
            t6 = P.x;
          case 24:
            state0 = 0;
            t3 = $.sub(t3, $.mul(t1, t6));
            t8 = imp.z;
          case 25:
            state0 = 0;
            w1 = $.sub(w1, $.mul(i1, $.add(t3, t8)));
            temp.setFrom$1(P).mulLocal$1(m2);
            v2.addLocal$1(temp);
            t10 = r2.x;
          case 26:
            state0 = 0;
            var t12 = P.y;
          case 27:
            state0 = 0;
            t12 = $.mul(t10, t12);
            t10 = r2.y;
          case 28:
            state0 = 0;
            var t15 = P.x;
          case 29:
            state0 = 0;
            t12 = $.sub(t12, $.mul(t10, t15));
            var t17 = imp.z;
          case 30:
            state0 = 0;
            w2 = $.add(w2, $.mul(i2, $.add(t12, t17)));
        }
      else
        switch (state0) {
          case 0:
            r1.setFrom$1(t2).subLocal$1(b1.get$localCenter());
            r2.setFrom$1(t3).subLocal$1(b2.get$localCenter());
            $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
            $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
            Cdot = $.Vector$(0, 0);
            imp = $.Vector$(0, 0);
            $.Vector_crossNumAndVectorToOut(w1, r1, temp);
            $.Vector_crossNumAndVectorToOut(w2, r2, Cdot);
            Cdot.addLocal$1(v2).subLocal$1(v1).subLocal$1(temp);
            t4.solve22ToOut$2(Cdot.negateLocal$0(), imp);
            t1 = this.impulse;
            t4 = t1.x;
          case 31:
            state0 = 0;
            t6 = imp.x;
          case 32:
            state0 = 0;
            t1.x = $.add(t4, t6);
            t8 = t1.y;
          case 33:
            state0 = 0;
            t10 = imp.y;
          case 34:
            state0 = 0;
            t1.y = $.add(t8, t10);
            temp.setFrom$1(imp).mulLocal$1(m1);
            v1.subLocal$1(temp);
            t1 = r1.x;
          case 35:
            state0 = 0;
            var t13 = imp.y;
          case 36:
            state0 = 0;
            t13 = $.mul(t1, t13);
            t1 = r1.y;
          case 37:
            state0 = 0;
            var t16 = imp.x;
          case 38:
            state0 = 0;
            w1 = $.sub(w1, $.mul(i1, $.sub(t13, $.mul(t1, t16))));
            temp.setFrom$1(imp).mulLocal$1(m2);
            v2.addLocal$1(temp);
            var t18 = r2.x;
          case 39:
            state0 = 0;
            var t20 = imp.y;
          case 40:
            state0 = 0;
            t20 = $.mul(t18, t20);
            t18 = r2.y;
          case 41:
            state0 = 0;
            var t23 = imp.x;
          case 42:
            state0 = 0;
            w2 = $.add(w2, $.mul(i2, $.sub(t20, $.mul(t18, t23))));
        }
      b1.set$angularVelocity(w1);
      b2.set$angularVelocity(w2);
  }
},
 solvePositionConstraints$1: function(baumgarte) {
  var b1 = this.bodyA;
  var b2 = this.bodyB;
  if (this._enableLimit === true && !(this.limitState === 0)) {
    var t1 = b2.get$sweep().get$angle();
    if (typeof t1 !== 'number')
      return this.solvePositionConstraints$1$bailout(1, t1, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var t3 = b1.get$sweep().get$angle();
    if (typeof t3 !== 'number')
      return this.solvePositionConstraints$1$bailout(2, t1, t3, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    t3 = t1 - t3;
    t1 = this.referenceAngle;
    if (typeof t1 !== 'number')
      return this.solvePositionConstraints$1$bailout(3, t1, t3, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    var angle = t3 - t1;
    t1 = this.limitState;
    if (t1 === 3) {
      t1 = this.lowerAngle;
      if (typeof t1 !== 'number')
        return this.solvePositionConstraints$1$bailout(4, angle, b1, b2, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      var C = $.max(-0.13962634015954636, $.min(angle - t1, 0.13962634015954636));
      t3 = this.motorMass;
      if (typeof t3 !== 'number')
        return this.solvePositionConstraints$1$bailout(5, t3, C, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      var limitImpulse = -t3 * C;
      var angularError = $.abs(C);
      if (typeof angularError !== 'number')
        return this.solvePositionConstraints$1$bailout(6, limitImpulse, angularError, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    } else if (t1 === 1) {
      t1 = this.lowerAngle;
      if (typeof t1 !== 'number')
        return this.solvePositionConstraints$1$bailout(7, angle, t1, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      C = angle - t1;
      angularError = -C;
      var C0 = $.max(-0.13962634015954636, $.min(C + 0.03490658503988659, 0));
      t1 = this.motorMass;
      if (typeof t1 !== 'number')
        return this.solvePositionConstraints$1$bailout(8, C0, angularError, t1, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      limitImpulse = -t1 * C0;
    } else if (t1 === 2) {
      t1 = this.upperAngle;
      if (typeof t1 !== 'number')
        return this.solvePositionConstraints$1$bailout(9, angle, t1, b1, b2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      C = angle - t1;
      C0 = $.max(0, $.min(C - 0.03490658503988659, 0.13962634015954636));
      t1 = this.motorMass;
      if (typeof t1 !== 'number')
        return this.solvePositionConstraints$1$bailout(10, C, t1, b1, b2, C0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      limitImpulse = -t1 * C0;
      angularError = C;
    } else {
      limitImpulse = 0;
      angularError = 0;
    }
    t1 = b1.get$sweep();
    var t2 = t1.get$angle();
    if (typeof t2 !== 'number')
      return this.solvePositionConstraints$1$bailout(11, limitImpulse, angularError, b1, t2, b2, t1, 0, 0, 0, 0, 0, 0, 0, 0);
    var t4 = b1.get$invInertia();
    if (typeof t4 !== 'number')
      return this.solvePositionConstraints$1$bailout(12, limitImpulse, angularError, b1, t2, t4, b2, t1, 0, 0, 0, 0, 0, 0, 0);
    t1.set$angle(t2 - t4 * limitImpulse);
    t1 = b2.get$sweep();
    var t6 = t1.get$angle();
    if (typeof t6 !== 'number')
      return this.solvePositionConstraints$1$bailout(13, limitImpulse, angularError, b1, b2, t1, t6, 0, 0, 0, 0, 0, 0, 0, 0);
    var t8 = b2.get$invInertia();
    if (typeof t8 !== 'number')
      return this.solvePositionConstraints$1$bailout(14, t8, limitImpulse, angularError, b1, b2, t1, t6, 0, 0, 0, 0, 0, 0, 0);
    t1.set$angle(t6 + t8 * limitImpulse);
    b1.synchronizeTransform$0();
    b2.synchronizeTransform$0();
  } else
    angularError = 0;
  var imp = $.Vector$(0, 0);
  var r1 = $.Vector$(0, 0);
  var r2 = $.Vector$(0, 0);
  C = $.Vector$(0, 0);
  r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
  r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
  $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
  $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
  C.setFrom$1(b2.get$sweep().get$center()).addLocal$1(r2);
  C.subLocal$1(b1.get$sweep().get$center()).subLocal$1(r1);
  var positionError = $.get$length(C);
  if (typeof positionError !== 'number')
    return this.solvePositionConstraints$1$bailout(15, r2, C, b1, b2, angularError, positionError, imp, r1, 0, 0, 0, 0, 0, 0);
  var invMass1 = b1.get$invMass();
  if (typeof invMass1 !== 'number')
    return this.solvePositionConstraints$1$bailout(16, r2, C, b1, b2, angularError, positionError, invMass1, r1, imp, 0, 0, 0, 0, 0);
  var invMass2 = b2.get$invMass();
  if (typeof invMass2 !== 'number')
    return this.solvePositionConstraints$1$bailout(17, r2, C, b1, b2, angularError, imp, positionError, invMass1, r1, invMass2, 0, 0, 0, 0);
  var invI1 = b1.get$invInertia();
  if (typeof invI1 !== 'number')
    return this.solvePositionConstraints$1$bailout(18, r2, C, b1, b2, invI1, angularError, imp, positionError, invMass1, r1, invMass2, 0, 0, 0);
  var invI2 = b2.get$invInertia();
  if (typeof invI2 !== 'number')
    return this.solvePositionConstraints$1$bailout(19, b1, b2, angularError, positionError, invMass1, r1, invI1, r2, invI2, C, invMass2, imp, 0, 0);
  t1 = C.get$lengthSquared();
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(20, b1, b2, angularError, positionError, invMass1, r1, invMass2, r2, invI2, C, invI1, imp, t1, 0);
  if (t1 > 0.0025000000000000005) {
    var u = $.Vector$(0, 0);
    var m = invMass1 + invMass2;
    if (m > 0)
      m = 1 / m;
    imp.setFrom$1(C).negateLocal$0().mulLocal$1(m);
    u.setFrom$1(imp).mulLocal$1(0.5 * invMass1);
    b1.get$sweep().get$center().subLocal$1(u);
    u.setFrom$1(imp).mulLocal$1(0.5 * invMass2);
    b2.get$sweep().get$center().addLocal$1(u);
    C.setFrom$1(b2.get$sweep().get$center()).addLocal$1(r2);
    C.subLocal$1(b1.get$sweep().get$center()).subLocal$1(r1);
  }
  var K1 = $.Matrix22$(null, null);
  t1 = invMass1 + invMass2;
  K1.col1.set$x(t1);
  K1.col2.set$x(0);
  K1.col1.set$y(0);
  K1.col2.set$y(t1);
  var K2 = $.Matrix22$(null, null);
  t1 = r1.y;
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(21, t1, b1, b2, K1, angularError, positionError, imp, r1, invI1, r2, invI2, C, K2, 0);
  t3 = invI1 * t1;
  t1 = t3 * t1;
  K2.col1.set$x(t1);
  t1 = -invI1;
  t3 = r1.x;
  if (typeof t3 !== 'number')
    return this.solvePositionConstraints$1$bailout(23, t1, b1, b2, K1, t3, angularError, positionError, imp, r1, invI1, r2, invI2, C, K2);
  t3 = t1 * t3;
  var t5 = r1.y;
  if (typeof t5 !== 'number')
    return this.solvePositionConstraints$1$bailout(24, t3, b1, b2, K1, t5, angularError, positionError, imp, r1, invI1, r2, invI2, C, K2);
  t5 = t3 * t5;
  K2.col2.set$x(t5);
  t5 = r1.x;
  if (typeof t5 !== 'number')
    return this.solvePositionConstraints$1$bailout(25, b1, b2, K1, angularError, t1, positionError, imp, r1, invI1, r2, invI2, C, t5, K2);
  t5 = t1 * t5;
  t1 = r1.y;
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(26, b1, b2, K1, angularError, positionError, imp, r1, invI1, r2, invI2, C, t5, K2, t1);
  t1 = t5 * t1;
  K2.col1.set$y(t1);
  t1 = r1.x;
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(27, b1, b2, K1, angularError, positionError, imp, r1, invI1, r2, invI2, C, t1, K2, 0);
  t8 = invI1 * t1;
  t1 = t8 * t1;
  K2.col2.set$y(t1);
  var K3 = $.Matrix22$(null, null);
  t1 = r2.y;
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(29, b1, b2, K1, angularError, positionError, imp, r1, r2, invI2, C, t1, K2, K3, 0);
  var t9 = invI2 * t1;
  t1 = t9 * t1;
  K3.col1.set$x(t1);
  t1 = -invI2;
  t9 = r2.x;
  if (typeof t9 !== 'number')
    return this.solvePositionConstraints$1$bailout(31, b1, b2, t1, K1, angularError, positionError, imp, r1, r2, invI2, C, t9, K2, K3);
  t9 = t1 * t9;
  var t11 = r2.y;
  if (typeof t11 !== 'number')
    return this.solvePositionConstraints$1$bailout(32, b1, b2, K1, t9, angularError, positionError, imp, r1, r2, invI2, C, t11, K2, K3);
  t11 = t9 * t11;
  K3.col2.set$x(t11);
  t11 = r2.x;
  if (typeof t11 !== 'number')
    return this.solvePositionConstraints$1$bailout(33, b1, b2, K1, angularError, positionError, imp, r1, r2, invI2, C, t1, K2, t11, K3);
  t11 = t1 * t11;
  t1 = r2.y;
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(34, b1, b2, K1, angularError, positionError, imp, r1, r2, invI2, C, t11, K2, t1, K3);
  t1 = t11 * t1;
  K3.col1.set$y(t1);
  t1 = r2.x;
  if (typeof t1 !== 'number')
    return this.solvePositionConstraints$1$bailout(35, b1, b2, K1, angularError, positionError, imp, r1, r2, invI2, C, K2, t1, K3, 0);
  var t14 = invI2 * t1;
  t1 = t14 * t1;
  K3.col2.set$y(t1);
  K1.addLocal$1(K2).addLocal$1(K3);
  K1.solveToOut$2(C.negateLocal$0(), imp);
  C.setFrom$1(imp).mulLocal$1(b1.get$invMass());
  b1.get$sweep().get$center().subLocal$1(C);
  t1 = b1.get$sweep();
  t14 = t1.get$angle();
  if (typeof t14 !== 'number')
    return this.solvePositionConstraints$1$bailout(37, r2, C, b1, b2, angularError, t1, positionError, imp, r1, t14, 0, 0, 0, 0);
  var t16 = b1.get$invInertia();
  if (typeof t16 !== 'number')
    return this.solvePositionConstraints$1$bailout(38, r2, r1, C, b1, b2, angularError, t1, positionError, imp, t16, t14, 0, 0, 0);
  var t18 = r1.x;
  if (typeof t18 !== 'number')
    return this.solvePositionConstraints$1$bailout(39, b1, b2, angularError, t1, positionError, imp, r1, t14, r2, C, t16, t18, 0, 0);
  var t20 = imp.y;
  if (typeof t20 !== 'number')
    return this.solvePositionConstraints$1$bailout(40, b1, b2, angularError, t1, positionError, imp, r1, t14, r2, C, t16, t18, t20, 0);
  t20 = t18 * t20;
  t18 = r1.y;
  if (typeof t18 !== 'number')
    return this.solvePositionConstraints$1$bailout(41, b1, b2, angularError, t1, positionError, imp, t16, t14, r2, t20, C, t18, 0, 0);
  var t23 = imp.x;
  if (typeof t23 !== 'number')
    return this.solvePositionConstraints$1$bailout(42, t23, b1, b2, angularError, t1, positionError, imp, t16, t14, r2, t20, C, t18, 0);
  t1.set$angle(t14 - t16 * (t20 - t18 * t23));
  C.setFrom$1(imp).mulLocal$1(b2.get$invMass());
  b2.get$sweep().get$center().addLocal$1(C);
  t1 = b2.get$sweep();
  var t25 = t1.get$angle();
  if (typeof t25 !== 'number')
    return this.solvePositionConstraints$1$bailout(43, r2, t1, t25, b1, b2, angularError, positionError, imp, 0, 0, 0, 0, 0, 0);
  var t27 = b2.get$invInertia();
  if (typeof t27 !== 'number')
    return this.solvePositionConstraints$1$bailout(44, r2, t1, t25, t27, b1, b2, angularError, positionError, imp, 0, 0, 0, 0, 0);
  var t29 = r2.x;
  if (typeof t29 !== 'number')
    return this.solvePositionConstraints$1$bailout(45, r2, t29, t1, t25, b1, b2, t27, angularError, positionError, imp, 0, 0, 0, 0);
  var t31 = imp.y;
  if (typeof t31 !== 'number')
    return this.solvePositionConstraints$1$bailout(46, r2, t29, t31, t1, t25, b1, b2, t27, angularError, positionError, imp, 0, 0, 0);
  t31 = t29 * t31;
  t29 = r2.y;
  if (typeof t29 !== 'number')
    return this.solvePositionConstraints$1$bailout(47, t1, t25, t27, b1, b2, t31, angularError, positionError, t29, imp, 0, 0, 0, 0);
  var t34 = imp.x;
  if (typeof t34 !== 'number')
    return this.solvePositionConstraints$1$bailout(48, t1, t25, b1, b2, t34, t27, t31, angularError, positionError, t29, 0, 0, 0, 0);
  t1.set$angle(t25 + t27 * (t31 - t29 * t34));
  b1.synchronizeTransform$0();
  b2.synchronizeTransform$0();
  return positionError <= 0.005 && angularError <= 0.03490658503988659;
},
 solvePositionConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      t1 = env0;
      b1 = env1;
      b2 = env2;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      b1 = env2;
      b2 = env3;
      break;
    case 3:
      t1 = env0;
      t3 = env1;
      b1 = env2;
      b2 = env3;
      break;
    case 4:
      angle = env0;
      b1 = env1;
      b2 = env2;
      t1 = env3;
      break;
    case 5:
      t3 = env0;
      C = env1;
      b1 = env2;
      b2 = env3;
      break;
    case 6:
      limitImpulse = env0;
      angularError = env1;
      b1 = env2;
      b2 = env3;
      break;
    case 7:
      angle = env0;
      t1 = env1;
      b1 = env2;
      b2 = env3;
      break;
    case 8:
      C0 = env0;
      angularError = env1;
      t1 = env2;
      b1 = env3;
      b2 = env4;
      break;
    case 9:
      angle = env0;
      t1 = env1;
      b1 = env2;
      b2 = env3;
      break;
    case 10:
      C = env0;
      t1 = env1;
      b1 = env2;
      b2 = env3;
      C0 = env4;
      break;
    case 11:
      limitImpulse = env0;
      angularError = env1;
      b1 = env2;
      t2 = env3;
      b2 = env4;
      t1 = env5;
      break;
    case 12:
      limitImpulse = env0;
      angularError = env1;
      b1 = env2;
      t2 = env3;
      t4 = env4;
      b2 = env5;
      t1 = env6;
      break;
    case 13:
      limitImpulse = env0;
      angularError = env1;
      b1 = env2;
      b2 = env3;
      t1 = env4;
      t6 = env5;
      break;
    case 14:
      t8 = env0;
      limitImpulse = env1;
      angularError = env2;
      b1 = env3;
      b2 = env4;
      t1 = env5;
      t6 = env6;
      break;
    case 15:
      r2 = env0;
      C = env1;
      b1 = env2;
      b2 = env3;
      angularError = env4;
      positionError = env5;
      imp = env6;
      r1 = env7;
      break;
    case 16:
      r2 = env0;
      C = env1;
      b1 = env2;
      b2 = env3;
      angularError = env4;
      positionError = env5;
      invMass1 = env6;
      r1 = env7;
      imp = env8;
      break;
    case 17:
      r2 = env0;
      C = env1;
      b1 = env2;
      b2 = env3;
      angularError = env4;
      imp = env5;
      positionError = env6;
      invMass1 = env7;
      r1 = env8;
      invMass2 = env9;
      break;
    case 18:
      r2 = env0;
      C = env1;
      b1 = env2;
      b2 = env3;
      invI1 = env4;
      angularError = env5;
      imp = env6;
      positionError = env7;
      invMass1 = env8;
      r1 = env9;
      invMass2 = env10;
      break;
    case 19:
      b1 = env0;
      b2 = env1;
      angularError = env2;
      positionError = env3;
      invMass1 = env4;
      r1 = env5;
      invI1 = env6;
      r2 = env7;
      invI2 = env8;
      C = env9;
      invMass2 = env10;
      imp = env11;
      break;
    case 20:
      b1 = env0;
      b2 = env1;
      angularError = env2;
      positionError = env3;
      invMass1 = env4;
      r1 = env5;
      invMass2 = env6;
      r2 = env7;
      invI2 = env8;
      C = env9;
      invI1 = env10;
      imp = env11;
      t1 = env12;
      break;
    case 21:
      t1 = env0;
      b1 = env1;
      b2 = env2;
      K1 = env3;
      angularError = env4;
      positionError = env5;
      imp = env6;
      r1 = env7;
      invI1 = env8;
      r2 = env9;
      invI2 = env10;
      C = env11;
      K2 = env12;
      break;
    case 22:
      b1 = env0;
      b2 = env1;
      t3 = env2;
      K1 = env3;
      angularError = env4;
      positionError = env5;
      imp = env6;
      r1 = env7;
      invI1 = env8;
      r2 = env9;
      invI2 = env10;
      C = env11;
      K2 = env12;
      t1 = env13;
      break;
    case 23:
      t3 = env0;
      b1 = env1;
      b2 = env2;
      K1 = env3;
      t1 = env4;
      angularError = env5;
      positionError = env6;
      imp = env7;
      r1 = env8;
      invI1 = env9;
      r2 = env10;
      invI2 = env11;
      C = env12;
      K2 = env13;
      break;
    case 24:
      t1 = env0;
      b1 = env1;
      b2 = env2;
      K1 = env3;
      t3 = env4;
      angularError = env5;
      positionError = env6;
      imp = env7;
      r1 = env8;
      invI1 = env9;
      r2 = env10;
      invI2 = env11;
      C = env12;
      K2 = env13;
      break;
    case 25:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      t3 = env4;
      positionError = env5;
      imp = env6;
      r1 = env7;
      invI1 = env8;
      r2 = env9;
      invI2 = env10;
      C = env11;
      t1 = env12;
      K2 = env13;
      break;
    case 26:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      invI1 = env7;
      r2 = env8;
      invI2 = env9;
      C = env10;
      t1 = env11;
      K2 = env12;
      t3 = env13;
      break;
    case 27:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      invI1 = env7;
      r2 = env8;
      invI2 = env9;
      C = env10;
      t3 = env11;
      K2 = env12;
      break;
    case 28:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      t9 = env7;
      r2 = env8;
      invI2 = env9;
      C = env10;
      t3 = env11;
      K2 = env12;
      break;
    case 29:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      r2 = env7;
      invI2 = env8;
      C = env9;
      t9 = env10;
      K2 = env11;
      K3 = env12;
      break;
    case 30:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      r2 = env7;
      invI2 = env8;
      C = env9;
      t11 = env10;
      K2 = env11;
      K3 = env12;
      t9 = env13;
      break;
    case 31:
      b1 = env0;
      b2 = env1;
      t11 = env2;
      K1 = env3;
      angularError = env4;
      positionError = env5;
      imp = env6;
      r1 = env7;
      r2 = env8;
      invI2 = env9;
      C = env10;
      t9 = env11;
      K2 = env12;
      K3 = env13;
      break;
    case 32:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      t9 = env3;
      angularError = env4;
      positionError = env5;
      imp = env6;
      r1 = env7;
      r2 = env8;
      invI2 = env9;
      C = env10;
      t11 = env11;
      K2 = env12;
      K3 = env13;
      break;
    case 33:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      r2 = env7;
      invI2 = env8;
      C = env9;
      t11 = env10;
      K2 = env11;
      t9 = env12;
      K3 = env13;
      break;
    case 34:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      r2 = env7;
      invI2 = env8;
      C = env9;
      t9 = env10;
      K2 = env11;
      t11 = env12;
      K3 = env13;
      break;
    case 35:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      r2 = env7;
      invI2 = env8;
      C = env9;
      K2 = env10;
      t11 = env11;
      K3 = env12;
      break;
    case 36:
      b1 = env0;
      b2 = env1;
      K1 = env2;
      angularError = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      r2 = env7;
      C = env8;
      K2 = env9;
      t11 = env10;
      K3 = env11;
      t17 = env12;
      break;
    case 37:
      r2 = env0;
      C = env1;
      b1 = env2;
      b2 = env3;
      angularError = env4;
      t17 = env5;
      positionError = env6;
      imp = env7;
      r1 = env8;
      t11 = env9;
      break;
    case 38:
      r2 = env0;
      r1 = env1;
      C = env2;
      b1 = env3;
      b2 = env4;
      angularError = env5;
      t17 = env6;
      positionError = env7;
      imp = env8;
      t20 = env9;
      t11 = env10;
      break;
    case 39:
      b1 = env0;
      b2 = env1;
      angularError = env2;
      t17 = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      t11 = env7;
      r2 = env8;
      C = env9;
      t20 = env10;
      t22 = env11;
      break;
    case 40:
      b1 = env0;
      b2 = env1;
      angularError = env2;
      t17 = env3;
      positionError = env4;
      imp = env5;
      r1 = env6;
      t11 = env7;
      r2 = env8;
      C = env9;
      t20 = env10;
      t22 = env11;
      t24 = env12;
      break;
    case 41:
      b1 = env0;
      b2 = env1;
      angularError = env2;
      t17 = env3;
      positionError = env4;
      imp = env5;
      t20 = env6;
      t11 = env7;
      r2 = env8;
      t24 = env9;
      C = env10;
      t22 = env11;
      break;
    case 42:
      t27 = env0;
      b1 = env1;
      b2 = env2;
      angularError = env3;
      t17 = env4;
      positionError = env5;
      imp = env6;
      t20 = env7;
      t11 = env8;
      r2 = env9;
      t24 = env10;
      C = env11;
      t22 = env12;
      break;
    case 43:
      r2 = env0;
      t17 = env1;
      t29 = env2;
      b1 = env3;
      b2 = env4;
      angularError = env5;
      positionError = env6;
      imp = env7;
      break;
    case 44:
      r2 = env0;
      t17 = env1;
      t29 = env2;
      t31 = env3;
      b1 = env4;
      b2 = env5;
      angularError = env6;
      positionError = env7;
      imp = env8;
      break;
    case 45:
      r2 = env0;
      t33 = env1;
      t17 = env2;
      t29 = env3;
      b1 = env4;
      b2 = env5;
      t31 = env6;
      angularError = env7;
      positionError = env8;
      imp = env9;
      break;
    case 46:
      r2 = env0;
      t33 = env1;
      t35 = env2;
      t17 = env3;
      t29 = env4;
      b1 = env5;
      b2 = env6;
      t31 = env7;
      angularError = env8;
      positionError = env9;
      imp = env10;
      break;
    case 47:
      t17 = env0;
      t29 = env1;
      t31 = env2;
      b1 = env3;
      b2 = env4;
      t35 = env5;
      angularError = env6;
      positionError = env7;
      t33 = env8;
      imp = env9;
      break;
    case 48:
      t17 = env0;
      t29 = env1;
      b1 = env2;
      b2 = env3;
      t38 = env4;
      t31 = env5;
      t35 = env6;
      angularError = env7;
      positionError = env8;
      t33 = env9;
      break;
  }
  switch (state0) {
    case 0:
      var b1 = this.bodyA;
      var b2 = this.bodyB;
    default:
      if (state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this._enableLimit === true && !(this.limitState === 0))
        switch (state0) {
          case 0:
            var t1 = b2.get$sweep().get$angle();
          case 1:
            state0 = 0;
            var t3 = b1.get$sweep().get$angle();
          case 2:
            state0 = 0;
            t3 = $.sub(t1, t3);
            t1 = this.referenceAngle;
          case 3:
            state0 = 0;
            var angle = $.sub(t3, t1);
            t1 = this.limitState;
          default:
            if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && t1 === 3)
              switch (state0) {
                case 0:
                  t1 = this.lowerAngle;
                case 4:
                  state0 = 0;
                  var C = $.max(-0.13962634015954636, $.min($.sub(angle, t1), 0.13962634015954636));
                  t3 = this.motorMass;
                case 5:
                  state0 = 0;
                  var limitImpulse = $.mul($.neg(t3), C);
                  var angularError = $.abs(C);
                case 6:
                  state0 = 0;
              }
            else
              switch (state0) {
                case 0:
                default:
                  if (state0 === 8 || state0 === 7 || state0 === 0 && t1 === 1)
                    switch (state0) {
                      case 0:
                        t1 = this.lowerAngle;
                      case 7:
                        state0 = 0;
                        C = $.sub(angle, t1);
                        angularError = $.neg(C);
                        var C0 = $.max(-0.13962634015954636, $.min($.add(C, 0.03490658503988659), 0));
                        t1 = this.motorMass;
                      case 8:
                        state0 = 0;
                        limitImpulse = $.mul($.neg(t1), C0);
                    }
                  else
                    switch (state0) {
                      case 0:
                      default:
                        if (state0 === 10 || state0 === 9 || state0 === 0 && t1 === 2)
                          switch (state0) {
                            case 0:
                              t1 = this.upperAngle;
                            case 9:
                              state0 = 0;
                              C = $.sub(angle, t1);
                              C0 = $.max(0, $.min($.sub(C, 0.03490658503988659), 0.13962634015954636));
                              t1 = this.motorMass;
                            case 10:
                              state0 = 0;
                              limitImpulse = $.mul($.neg(t1), C0);
                              angularError = C;
                          }
                        else {
                          limitImpulse = 0;
                          angularError = 0;
                        }
                    }
              }
            t1 = b1.get$sweep();
            var t2 = t1.get$angle();
          case 11:
            state0 = 0;
            var t4 = b1.get$invInertia();
          case 12:
            state0 = 0;
            t1.set$angle($.sub(t2, $.mul(t4, limitImpulse)));
            t1 = b2.get$sweep();
            var t6 = t1.get$angle();
          case 13:
            state0 = 0;
            var t8 = b2.get$invInertia();
          case 14:
            state0 = 0;
            t1.set$angle($.add(t6, $.mul(t8, limitImpulse)));
            b1.synchronizeTransform$0();
            b2.synchronizeTransform$0();
        }
      else
        angularError = 0;
      var imp = $.Vector$(0, 0);
      var r1 = $.Vector$(0, 0);
      var r2 = $.Vector$(0, 0);
      C = $.Vector$(0, 0);
      r1.setFrom$1(this.localAnchor1).subLocal$1(b1.get$localCenter());
      r2.setFrom$1(this.localAnchor2).subLocal$1(b2.get$localCenter());
      $.Matrix22_mulMatrixAndVectorToOut(b1.get$originTransform().get$rotation(), r1, r1);
      $.Matrix22_mulMatrixAndVectorToOut(b2.get$originTransform().get$rotation(), r2, r2);
      C.setFrom$1(b2.get$sweep().get$center()).addLocal$1(r2);
      C.subLocal$1(b1.get$sweep().get$center()).subLocal$1(r1);
      var positionError = $.get$length(C);
    case 15:
      state0 = 0;
      var invMass1 = b1.get$invMass();
    case 16:
      state0 = 0;
      var invMass2 = b2.get$invMass();
    case 17:
      state0 = 0;
      var invI1 = b1.get$invInertia();
    case 18:
      state0 = 0;
      var invI2 = b2.get$invInertia();
    case 19:
      state0 = 0;
      t1 = C.get$lengthSquared();
    case 20:
      state0 = 0;
      if ($.gtB(t1, 0.0025000000000000005)) {
        var u = $.Vector$(0, 0);
        var m = $.add(invMass1, invMass2);
        if ($.gtB(m, 0)) {
          if (typeof m !== 'number')
            throw $.iae(m);
          m = 1 / m;
        }
        imp.setFrom$1(C).negateLocal$0().mulLocal$1(m);
        t1 = u.setFrom$1(imp);
        if (typeof invMass1 !== 'number')
          throw $.iae(invMass1);
        t1.mulLocal$1(0.5 * invMass1);
        b1.get$sweep().get$center().subLocal$1(u);
        t1 = u.setFrom$1(imp);
        if (typeof invMass2 !== 'number')
          throw $.iae(invMass2);
        t1.mulLocal$1(0.5 * invMass2);
        b2.get$sweep().get$center().addLocal$1(u);
        C.setFrom$1(b2.get$sweep().get$center()).addLocal$1(r2);
        C.subLocal$1(b1.get$sweep().get$center()).subLocal$1(r1);
      }
      var K1 = $.Matrix22$(null, null);
      t1 = $.add(invMass1, invMass2);
      K1.col1.set$x(t1);
      K1.col2.set$x(0);
      K1.col1.set$y(0);
      t1 = $.add(invMass1, invMass2);
      K1.col2.set$y(t1);
      var K2 = $.Matrix22$(null, null);
      t1 = r1.y;
    case 21:
      state0 = 0;
      t1 = $.mul(invI1, t1);
      t3 = r1.y;
    case 22:
      state0 = 0;
      t3 = $.mul(t1, t3);
      K2.col1.set$x(t3);
      t3 = $.neg(invI1);
      t1 = r1.x;
    case 23:
      state0 = 0;
      t1 = $.mul(t3, t1);
      t3 = r1.y;
    case 24:
      state0 = 0;
      t3 = $.mul(t1, t3);
      K2.col2.set$x(t3);
      t3 = $.neg(invI1);
      t1 = r1.x;
    case 25:
      state0 = 0;
      t1 = $.mul(t3, t1);
      t3 = r1.y;
    case 26:
      state0 = 0;
      t3 = $.mul(t1, t3);
      K2.col1.set$y(t3);
      t3 = r1.x;
    case 27:
      state0 = 0;
      t3 = $.mul(invI1, t3);
      var t9 = r1.x;
    case 28:
      state0 = 0;
      t9 = $.mul(t3, t9);
      K2.col2.set$y(t9);
      var K3 = $.Matrix22$(null, null);
      t9 = r2.y;
    case 29:
      state0 = 0;
      t9 = $.mul(invI2, t9);
      var t11 = r2.y;
    case 30:
      state0 = 0;
      t11 = $.mul(t9, t11);
      K3.col1.set$x(t11);
      t11 = $.neg(invI2);
      t9 = r2.x;
    case 31:
      state0 = 0;
      t9 = $.mul(t11, t9);
      t11 = r2.y;
    case 32:
      state0 = 0;
      t11 = $.mul(t9, t11);
      K3.col2.set$x(t11);
      t11 = $.neg(invI2);
      t9 = r2.x;
    case 33:
      state0 = 0;
      t9 = $.mul(t11, t9);
      t11 = r2.y;
    case 34:
      state0 = 0;
      t11 = $.mul(t9, t11);
      K3.col1.set$y(t11);
      t11 = r2.x;
    case 35:
      state0 = 0;
      t11 = $.mul(invI2, t11);
      var t17 = r2.x;
    case 36:
      state0 = 0;
      t17 = $.mul(t11, t17);
      K3.col2.set$y(t17);
      K1.addLocal$1(K2).addLocal$1(K3);
      K1.solveToOut$2(C.negateLocal$0(), imp);
      C.setFrom$1(imp).mulLocal$1(b1.get$invMass());
      b1.get$sweep().get$center().subLocal$1(C);
      t17 = b1.get$sweep();
      t11 = t17.get$angle();
    case 37:
      state0 = 0;
      var t20 = b1.get$invInertia();
    case 38:
      state0 = 0;
      var t22 = r1.x;
    case 39:
      state0 = 0;
      var t24 = imp.y;
    case 40:
      state0 = 0;
      t24 = $.mul(t22, t24);
      t22 = r1.y;
    case 41:
      state0 = 0;
      var t27 = imp.x;
    case 42:
      state0 = 0;
      t17.set$angle($.sub(t11, $.mul(t20, $.sub(t24, $.mul(t22, t27)))));
      C.setFrom$1(imp).mulLocal$1(b2.get$invMass());
      b2.get$sweep().get$center().addLocal$1(C);
      t17 = b2.get$sweep();
      var t29 = t17.get$angle();
    case 43:
      state0 = 0;
      var t31 = b2.get$invInertia();
    case 44:
      state0 = 0;
      var t33 = r2.x;
    case 45:
      state0 = 0;
      var t35 = imp.y;
    case 46:
      state0 = 0;
      t35 = $.mul(t33, t35);
      t33 = r2.y;
    case 47:
      state0 = 0;
      var t38 = imp.x;
    case 48:
      state0 = 0;
      t17.set$angle($.add(t29, $.mul(t31, $.sub(t35, $.mul(t33, t38)))));
      b1.synchronizeTransform$0();
      b2.synchronizeTransform$0();
      return $.leB(positionError, 0.005) && $.leB(angularError, 0.03490658503988659);
  }
},
 getAnchorA$1: function(argOut) {
  this.bodyA.getWorldPointToOut$2(this.localAnchor1, argOut);
},
 getAnchorB$1: function(argOut) {
  this.bodyB.getWorldPointToOut$2(this.localAnchor2, argOut);
},
 get$motorSpeed: function() {
  return this._motorSpeed;
},
 get$maxMotorTorque: function() {
  return this._maxMotorTorque;
},
 RevoluteJoint$1: function(def) {
  this.localAnchor1.setFrom$1(def.get$localAnchorA());
  this.localAnchor2.setFrom$1(def.get$localAnchorB());
  this.referenceAngle = def.get$referenceAngle();
  this._motorImpulse = 0;
  this.lowerAngle = def.get$lowerAngle();
  this.upperAngle = def.get$upperAngle();
  this._maxMotorTorque = def.get$maxMotorTorque();
  this._motorSpeed = def.get$motorSpeed();
  this._enableLimit = def.get$enableLimit();
  this._enableMotor = def.get$enableMotor();
}
};

$$.DefaultWorldPool = {"":
 ["collision", "timeOfImpact", "distance"],
 "super": "Object",
 timeOfImpact$2: function(arg0, arg1) { return this.timeOfImpact.call$2(arg0, arg1); },
 distance$3: function(arg0, arg1, arg2) { return this.distance.call$3(arg0, arg1, arg2); },
 getCircleContactStack$0: function() {
  var queue = $.Queue_Queue();
  for (var i = 0; i < 10; ++i)
    queue.addFirst$1($.CircleContact$(this));
  return queue;
},
 getPolyCircleContactStack$0: function() {
  var queue = $.Queue_Queue();
  for (var i = 0; i < 10; ++i)
    queue.addFirst$1($.PolygonAndCircleContact$(this));
  return queue;
},
 getPolyContactStack$0: function() {
  var queue = $.Queue_Queue();
  for (var i = 0; i < 10; ++i)
    queue.addFirst$1($.PolygonContact$(this));
  return queue;
},
 DefaultWorldPool$0: function() {
  this.distance = $.Distance$_construct();
  this.collision = $.Collision$_construct(this);
  this.timeOfImpact = $.TimeOfImpact$_construct(this);
}
};

$$.main_anon = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(event$) {
  switch (event$.get$keyIdentifier()) {
    case 'Left':
      $.debug();
      var force = $.Vector$(-150, 0);
      var t1 = this.box_0;
      t1.force_2 = force;
      if ($.gtB($.fallingBox.get$linearVelocity().get$x(), -100)) {
        var t2 = $.fallingBox;
        t2.applyLinearImpulse$2(t1.force_2, t2.get$worldCenter());
      }
      break;
    case 'Up':
      t1 = $.ltB($.jumpcount, 4);
      t2 = this.box_0;
      if (t1) {
        t2.sfx_1.playSound$1('OP');
        $.jumpcount = $.add($.jumpcount, 1);
      } else {
        t2.sfx_1.playSound$1('GANGNAM');
        $.jumpcount = 0;
      }
      $.debug();
      force = $.Vector$(0, 700);
      t1 = this.box_0;
      t1.force_2 = force;
      if ($.ltB($.fallingBox.get$position().get$y(), -4)) {
        t2 = $.fallingBox;
        t2.applyLinearImpulse$2(t1.force_2, t2.get$worldCenter());
      }
      if ($.gtB($.fallingBox.get$position().get$y(), 4)) {
        $.lives = $.sub($.lives, 1);
        $.displayLives();
      }
      break;
    case 'Right':
      $.debug();
      force = $.Vector$(150, 0);
      t1 = this.box_0;
      t1.force_2 = force;
      if ($.ltB($.fallingBox.get$linearVelocity().get$x(), 100)) {
        t2 = $.fallingBox;
        t2.applyLinearImpulse$2(t1.force_2, t2.get$worldCenter());
      }
      break;
  }
}
};

$$.Maps__emitMap_anon = {"":
 ["result_3", "box_0", "visiting_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_3, ', ');
  t1.first_1 = false;
  t1 = this.result_3;
  var t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":
 ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":
 ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":
 ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":
 [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":
 ["findSlot_8", "readSlot_7", "writeSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.CTC4);
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.CTC5);
  if (typeof e === 'object' && e !== null && e.is$_FileImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$File())
    throw $.$$throw($.CTC6);
  if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    throw $.$$throw($.CTC7);
  if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    throw $.$$throw($.CTC8);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    throw $.$$throw($.CTC9);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    throw $.$$throw($.CTC10);
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    var slot = this.findSlot_8.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    var t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_6.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e, 0, 0, 0, 0, 0, 0);
    var length$ = e.length;
    slot = this.findSlot_8.call$1(e);
    t2 = this.readSlot_7;
    var copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_6.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    var t3 = this.writeSlot_6;
    if (t1) {
      t3.call$2(slot, true);
      for (var i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        var element = e[i];
        var elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, length$, i, slot, copy, elementCopy);
          for (var t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            var t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, i, copy, length$, 0, 0, 0);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.CTC11);
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      t3 = env1;
      length$ = env2;
      i = env3;
      slot = env4;
      copy = env5;
      elementCopy = env6;
      break;
    case 3:
      e = env0;
      i = env1;
      copy = env2;
      length$ = env3;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.CTC4);
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.CTC5);
      if (typeof e === 'object' && e !== null && e.is$_FileImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$File())
        throw $.$$throw($.CTC6);
      if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        throw $.$$throw($.CTC7);
      if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        throw $.$$throw($.CTC8);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        throw $.$$throw($.CTC9);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        throw $.$$throw($.CTC10);
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        var slot = this.findSlot_8.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        var t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_6.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            var length$ = $.get$length(e);
            slot = this.findSlot_8.call$1(e);
            t2 = this.readSlot_7;
            var copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_6.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            var t3 = this.writeSlot_6;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  var i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          var element = $.index(e, i);
                          var elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (var j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.CTC11);
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":
 ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.invokeClosure_anon = {"":
 ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":
 ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":
 ["closure_5", "arg1_4", "arg2_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_5.call$2(this.arg1_4, this.arg2_3);
}
};

$$.Sfx_initSound_anon = {"":
 ["soundMap_2", "req_1", "this_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.this_0;
  var t2 = t1.get$audioContext();
  var t3 = this.req_1.get$response();
  var t4 = this.soundMap_2;
  t2.decodeAudioData$3(t3, new $.Sfx_initSound_anon0(t1, t4), new $.Sfx_initSound_anon1(t4));
}
};

$$.Sfx_initSound_anon0 = {"":
 ["this_4", "soundMap_3"],
 "super": "Closure",
 call$1: function(buffer) {
  var t1 = this.soundMap_3;
  $.print('...' + $.S($.index(t1, 'name')) + ' loaded...');
  var t2 = this.this_4;
  $.add$1(t2.get$soundList(), $.makeLiteralMap(['name', $.index(t1, 'name'), 'buffer', buffer]));
  t2.set$soundFiles($.sub(t2.get$soundFiles(), 1));
}
};

$$.Sfx_initSound_anon1 = {"":
 ["soundMap_5"],
 "super": "Closure",
 call$1: function(error) {
  $.print('error loading ' + $.S($.index(this.soundMap_5, 'name')));
}
};

$$.DoubleLinkedQueue_length__ = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$.LinkedHashMapImplementation_forEach__ = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"":
 ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"":
 ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"":
 ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"":
 ["mustCopy_7", "findSlot_6", "readSlot_5", "writeSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e, 0, 0, 0);
  if (e instanceof Date)
    throw $.$$throw($.CTC4);
  if (e instanceof RegExp)
    throw $.$$throw($.CTC5);
  if ($._isJavaScriptSimpleObject(e)) {
    var slot = this.findSlot_6.call$1(e);
    var copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, slot, copy, 0);
    this.writeSlot_4.call$2(slot, copy);
    for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
      var t2 = t1.next$0();
      var t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    var length$ = e.length;
    if (this.mustCopy_7 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (var i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      slot = env1;
      copy = env2;
      break;
    case 3:
      e = env0;
      length$ = env1;
      copy = env2;
      slot = env3;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.CTC4);
      if (e instanceof RegExp)
        throw $.$$throw($.CTC5);
    case 2:
      if (state0 === 2 || state0 === 0 && $._isJavaScriptSimpleObject(e))
        switch (state0) {
          case 0:
            var slot = this.findSlot_6.call$1(e);
            var copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
              var t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            var length$ = $.get$length(e);
            copy = this.mustCopy_7 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (var i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$._convertNativeToDart_IDBKey_containsDate = {"":
 [],
 "super": "Closure",
 call$1: function(object) {
  if (object instanceof Date)
    return true;
  if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, object);
    for (var i = 0; i < object.length; ++i)
      if (this.call$1(object[i]) === true)
        return true;
  }
  return false;
},
 call$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      var object = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (object instanceof Date)
        return true;
    case 1:
      if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            for (var i = 0; $.ltB(i, $.get$length(object)); ++i)
              if (this.call$1($.index(object, i)) === true)
                return true;
        }
      return false;
  }
}
};

$$.Demo_runAnimation_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(time) {
  this.this_0.step$1(time);
}
};

$$.Demo_step_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(time) {
  this.this_0.step$1(time);
}
};

$$._ElementImpl_rect_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  return $._ElementRectImpl$(this.this_0);
}
};

$$._MutationObserverImpl_observe_anon = {"":
 ["parsedOptions_0"],
 "super": "Closure",
 call$2: function(k, v) {
  if ($.CTC18.containsKey$1(k) === true)
    this.parsedOptions_0[k] = true === v;
  else if ($.eqB(k, 'attributeFilter'))
    this.parsedOptions_0[k] = v;
  else
    throw $.$$throw($.ArgumentError$('Illegal MutationObserver.observe option \'' + $.S(k) + '\''));
}
};

$$._MutationObserverImpl_observe_override = {"":
 ["parsedOptions_1"],
 "super": "Closure",
 call$2: function(key, value) {
  if (!(value == null))
    this.parsedOptions_1[key] = value;
}
};

$$.ConstantMap_forEach_anon = {"":
 ["this_1", "f_0"],
 "super": "Closure",
 call$1: function(key) {
  return this.f_0.call$2(key, $.index(this.this_1, key));
}
};

$$._DocumentFragmentImpl_rect_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.CTC21;
}
};

$$.BroadPhase_updatePairs_anon = {"":
 [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(a, b);
}
};

$$._ChildrenElementList_filter_anon = {"":
 ["f_1", "output_0"],
 "super": "Closure",
 call$1: function(element) {
  if (this.f_1.call$1(element) === true)
    $.add$1(this.output_0, element);
}
};

$$._FilteredElementList__filtered_anon = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._FilteredElementList_removeRange_anon = {"":
 [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.startRootIsolate_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"":
 ["port_1", "completer_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  this.port_1.close$0();
  var t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  var t2 = this.completer_0;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"":
 ["message_2", "this_1", "replyTo_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_1;
  var t2 = this.replyTo_0;
  t1._checkReplyTo$1(t2);
  var workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_2, 'replyTo', t2]));
  t2 = $._globalState().get$isWorker() === true;
  var t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"":
 ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"":
 ["result_5", "pos_4", "completer_3", "box_0", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  $.indexSet(t1, this.pos_4, value);
  var t2 = this.box_0;
  var remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_5.get$isComplete() !== true)
    this.completer_3.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"":
 ["result_8", "completer_7", "future_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_8.get$isComplete() !== true)
    this.completer_7.completeException$2(exception, this.future_6.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitMap_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._StorageImpl_getValues_anon = {"":
 ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.values_0, v);
}
};

$$.LinkedHashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$.HashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$.ConstantMap_getValues_anon = {"":
 ["this_1", "result_0"],
 "super": "Closure",
 call$1: function(key) {
  return $.add$1(this.result_0, $.index(this.this_1, key));
}
};

$$._PendingSendPortFinder_visitList_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"":
 ["message_5", "this_4", "replyTo_3"],
 "super": "Closure",
 call$0: function() {
  var t1 = {};
  var t2 = this.this_4;
  var t3 = this.replyTo_3;
  t2._checkReplyTo$1(t3);
  var isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_lib3_callback() == null)
    return;
  var shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  var msg = this.message_5;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(t2, t1, shouldSerialize), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"":
 ["this_7", "box_0", "shouldSerialize_6"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_7;
  if (!(t1.get$_receivePort().get$_lib3_callback() == null)) {
    if (this.shouldSerialize_6 === true) {
      var t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._lib3_callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$._StorageImpl_getKeys_anon = {"":
 ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
}
};

$$.LinkedHashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$.HashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._Copier_visitMap_anon = {"":
 ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1 = this.box_0.copy_10;
  var t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon0 = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.BoundClosure = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure1 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$3: function(p0, p1, p2) { return this.self[this.target](p0, p1, p2); }
};
$$.BoundClosure2 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$$.BoundClosure3 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$$.BoundClosure4 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$.floor = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.floor$0();
  return Math.floor(receiver);
};

$.Color3$fromRGB = function(r, g, b) {
  return new $.Color3(r, g, b);
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values = [];
  var copies = [];
  return new $._convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values), new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.Vector_crossVectorAndNumToOut = function(a, s, out) {
  var t1 = -s;
  var t2 = a.get$x();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  var tempy = t1 * t2;
  t2 = a.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  out.x = s * t2;
  out.y = tempy;
};

$.Collections__containsRef = function(c, ref) {
  for (var t1 = $.iterator(c); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.indexSet$slow = function(a, index, value) {
  if ($.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.HashMapImplementation__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.Stopwatch_Stopwatch = function() {
  return $.StopwatchImplementation$();
};

$.CircleShape$copy = function(other) {
  var t1 = other.type;
  var t2 = other.radius;
  return new $.CircleShape($.Vector$copy(other.position), t1, t2);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.Body$ = function(bd, world) {
  var t1 = $.Transform$();
  var t2 = $.Sweep$();
  var t3 = $.Vector$copy(bd.linearVelocity);
  var t4 = bd.linearDamping;
  var t5 = bd.angularDamping;
  var t6 = $.Vector$(0, 0);
  var t7 = bd.userData;
  var t8 = $.FixtureDef$();
  var t9 = $.MassData$();
  var t10 = $.Transform$();
  var t11 = $.Vector$(0, 0);
  var t12 = $.Vector$(0, 0);
  t12 = new $.Body(world, 0, null, 0, t7, t3, 0, null, null, null, null, null, 0, null, t6, 0, 0, 0, t4, t5, bd.type, null, t1, t2, t8, t9, t10, t11, t12);
  t12.Body$2(bd, world);
  return t12;
};

$.WorldManifold$ = function() {
  var t1 = $.Vector$(0, 0);
  var t2 = $.Vector$(0, 0);
  var t3 = $.Vector$(0, 0);
  t3 = new $.WorldManifold(t1, $.ListImplementation_List(2), t2, t3);
  t3.WorldManifold$0();
  return t3;
};

$._IDBOpenDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBOpenDBRequestEventsImpl(_ptr);
};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.NotImplementedException$ = function(message) {
  return new $.NotImplementedException(message);
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.removeRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  var length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if (startIndex < 0)
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.IndexOutOfRangeException$(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.indexSet = function(a, index, value) {
  if (a.constructor === Array && !a.immutable$list) {
    var key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.DistanceInput$ = function() {
  return new $.DistanceInput($.DistanceProxy$(), $.DistanceProxy$(), $.Transform$(), $.Transform$(), false);
};

$.ExceptionImplementation$ = function(message) {
  return new $.ExceptionImplementation(message);
};

$.StringMatch$ = function(_start, str, pattern) {
  return new $.StringMatch(_start, str, pattern);
};

$.Color3$fromRGBF = function(r, g, b) {
  return new $.Color3($.toInt($.floor(r * 255)), $.toInt($.floor(g * 255)), $.toInt($.floor(b * 255)));
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$._createMeasurementFuture = function(computeValue, completer) {
  if ($._pendingRequests == null) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingRequests, $._MeasurementRequest$(computeValue, completer));
  return completer.get$future();
};

$._Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.buildDynamicMetadata = function(inputTable) {
  var result = [];
  for (var i = 0; i < inputTable.length; ++i) {
    var tag = inputTable[i][0];
    var array = inputTable[i];
    var tags = array[1];
    var set = {};
    var tagNames = tags.split('|');
    for (var j = 0, index = 1; j < tagNames.length; ++j) {
      $.propertySet(set, tagNames[j], true);
      index = j;
      array = tagNames;
    }
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.BroadPhase$ = function() {
  var t1 = new $.BroadPhase($.DynamicTree$(), 0, null, null, 16, 0, null);
  t1.BroadPhase$0();
  return t1;
};

$._NotificationEventsImpl$ = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$.Settings_mixFriction = function(friction1, friction2) {
  return $.sqrt($.mul(friction1, friction2));
};

$._MessageTraverser_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$._Deserializer_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$.ContactImpulse$ = function() {
  return new $.ContactImpulse($.ListImplementation_List(2), $.ListImplementation_List(2));
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.Gangnam$ = function() {
  var t1 = $.ImageElement_ImageElement('static/land.gif', 2000, 300);
  t1 = new $.Gangnam($.ListImplementation_List(null), 10, t1);
  t1.Demo$3('Gangnam Style', null, 10);
  return t1;
};

$.Matrix22_mulMatrixAndVectorToOut = function(matrix, vector, out) {
  var tempy = $.add($.mul(matrix.get$col1().get$y(), vector.get$x()), $.mul(matrix.get$col2().get$y(), vector.get$y()));
  out.set$x($.add($.mul(matrix.get$col1().get$x(), vector.get$x()), $.mul(matrix.get$col2().get$x(), vector.get$y())));
  out.set$y(tempy);
};

$.Collections__emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
    first = false;
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$._convertNativeToDart_IDBKey = function(nativeKey) {
  if (new $._convertNativeToDart_IDBKey_containsDate().call$1(nativeKey) === true)
    throw $.$$throw($.CTC15);
  return nativeKey;
};

$.DynamicTreeNode$_construct = function() {
  return new $.DynamicTreeNode($.AxisAlignedBox$(null, null), null, null, null, null, null, null);
};

$.Vector3$ = function(x, y, z) {
  return new $.Vector3(x, y, z);
};

$._PeerConnection00EventsImpl$ = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$._WorkerContextEventsImpl$ = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a | b) >>> 0;
  return a.operator$or$1(b);
};

$.$$throw = function(ex) {
  if (ex == null)
    ex = $.CTC0;
  var jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$._DocumentEventsImpl$ = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.CircleContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.CircleContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$._convertNativeToDart_IDBAny = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, false);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.TimeStep$ = function() {
  return new $.TimeStep(0, 0, 0, 0, 0, true);
};

$._SpeechRecognitionEventsImpl$ = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$._SVGElementInstanceEventsImpl$ = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$.Futures_wait = function(futures) {
  var t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC1);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = futures.length;
  var values = $.ListImplementation_List(futures.length);
  for (var i = 0; i < futures.length; ++i) {
    var future = futures[i];
    future.then$1(new $.Futures_wait_anon(result, i, completer, t1, values));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$.Settings_mixRestitution = function(restitution1, restitution2) {
  return $.gtB(restitution1, restitution2) ? restitution1 : restitution2;
};

$.FrictionJoint$ = function(def) {
  var t1 = def.get$type();
  var t2 = def.get$bodyA();
  var t3 = def.get$bodyB();
  var t4 = def.get$collideConnected();
  var t5 = def.get$userData();
  var t6 = $.Vector$(0, 0);
  var t7 = $.Vector$(0, 0);
  var t8 = $.JointEdge$();
  var t9 = $.JointEdge$();
  return new $.FrictionJoint($.Vector$copy(def.get$localAnchorA()), $.Vector$copy(def.get$localAnchorB()), $.Vector$(0, 0), 0, def.get$maxForce(), def.get$maxTorque(), t1, null, null, t8, t9, t2, t3, false, t4, t5, t6, t7, null, null, null, null);
};

$.window = function() {
return window;
};

$._MatchImplementation$ = function(pattern, str, _start, _end, _groups) {
  return new $._MatchImplementation(pattern, str, _start, _end, _groups);
};

$.Primitives_objectTypeName = function(object) {
  var name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    var decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.isNegative = function(receiver) {
  if (typeof receiver === 'number')
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  else
    return receiver.isNegative$0();
};

$._DOMWindowCrossFrameImpl$ = function(_window) {
  return new $._DOMWindowCrossFrameImpl(_window);
};

$.Matrix22_mulTransMatrixAndVectorToOut = function(matrix, vector, out) {
  var outx = $.add($.mul(vector.get$x(), matrix.get$col1().get$x()), $.mul(vector.get$y(), matrix.get$col1().get$y()));
  out.y = $.add($.mul(vector.get$x(), matrix.get$col2().get$x()), $.mul(vector.get$y(), matrix.get$col2().get$y()));
  out.x = outx;
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.Matrix33$ = function() {
  return new $.Matrix33($.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0));
};

$.Vector3_crossToOut = function(a, b, out) {
  var tempy = $.sub($.mul(a.get$z(), b.get$x()), $.mul(a.get$x(), b.get$z()));
  var tempz = $.sub($.mul(a.get$x(), b.get$y()), $.mul(a.get$y(), b.get$x()));
  out.x = $.sub($.mul(a.get$y(), b.get$z()), $.mul(a.get$z(), b.get$y()));
  out.y = tempy;
  out.z = tempz;
};

$._JavaScriptAudioNodeEventsImpl$ = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(result, t1, visiting));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$._MeasurementScheduler__MeasurementScheduler$best = function(callback) {
  if ($._isMutationObserverSupported() === true)
    return $._MutationObserverScheduler$(callback);
  return $._PostMessageScheduler$(callback);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$.ConstantVolumeJointDef$ = function() {
  var t1 = new $.ConstantVolumeJointDef(0, 0, $.ListImplementation_List(null), null, 0, null, null, null, false);
  t1.ConstantVolumeJointDef$0();
  return t1;
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.Transform$ = function() {
  return new $.Transform($.Vector$(0, 0), $.Matrix22$(null, null));
};

$.setRange$4 = function(receiver, start, length$, from, startFrom) {
  if (!$.isJsArray(receiver))
    return receiver.setRange$4(start, length$, from, startFrom);
  $.checkMutable(receiver, 'indexed set');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  $.checkNull(from);
  $.checkNull(startFrom);
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if ($.gtB(t1, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  $.Arrays_copy(from, startFrom, receiver, start, length$);
};

$.Manifold$ = function() {
  var t1 = new $.Manifold($.ListImplementation_List(2), $.Vector$(0, 0), $.Vector$(0, 0), null, 0);
  t1.Manifold$0();
  return t1;
};

$.Sfx$ = function() {
  var t1 = new $.Sfx(null, null, null);
  t1.Sfx$0();
  return t1;
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._SimpleClientRect$ = function(left, top$, width, height) {
  return new $._SimpleClientRect(left, top$, width, height);
};

$._FileReaderEventsImpl$ = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$._AudioContextFactoryProvider_createAudioContext = function() {
    var constructor = window.AudioContext || window.webkitAudioContext;
    return new constructor();

};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$.concat = function(receiver, other) {
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  return receiver + other;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$.TimeOfImpactConstraint$ = function() {
  var t1 = new $.TimeOfImpactConstraint($.ListImplementation_List(2), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0, null, null);
  t1.TimeOfImpactConstraint$0();
  return t1;
};

$.ConstantVolumeJoint$ = function(_world, def) {
  var t1 = def.get$type();
  var t2 = def.get$bodyA();
  var t3 = def.get$bodyB();
  var t4 = def.get$collideConnected();
  var t5 = def.get$userData();
  var t6 = $.Vector$(0, 0);
  var t7 = $.Vector$(0, 0);
  t7 = new $.ConstantVolumeJoint(null, null, null, null, null, 0, _world, null, null, null, t1, null, null, $.JointEdge$(), $.JointEdge$(), t2, t3, false, t4, t5, t6, t7, null, null, null, null);
  t7.ConstantVolumeJoint$2(_world, def);
  return t7;
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$._FrameSetElementEventsImpl$ = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$.ListImplementation_List$from = function(other) {
  return $.ListImplementation__from(other);
};

$.main = function() {
  var t1 = {};
  t1.sfx_1 = null;
  t1.sfx_1 = $.Sfx$();
  $.Gangnam_main();
  $.BodyDef$().type = 2;
  $.ListImplementation_List(null);
  $.Random_Random(null);
  $.displayLives();
  $.ctx.drawImage$3($.get$oppa(), 0, 600);
  t1.force_2 = null;
  $.add$1($.document().get$on().get$keyDown(), new $.main_anon(t1));
};

$.Gangnam_main = function() {
  var style = $.Gangnam$();
  style.initializeAnimation$0();
  style.initialize$0();
  style.runAnimation$0();
};

$._RTCPeerConnectionEventsImpl$ = function(_ptr) {
  return new $._RTCPeerConnectionEventsImpl(_ptr);
};

$._MutationObserverScheduler$ = function(callback) {
  var t1 = new $._MutationObserverScheduler(null, null, false, callback);
  t1._MutationObserverScheduler$1(callback);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrameImpl__createSafe(win);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.FutureImpl$ = function() {
  return new $.FutureImpl(false, null, null, null, false, [], [], []);
};

$.IllegalArgumentException$ = function(argument) {
  return new $.IllegalArgumentException(argument);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result = $.ListImplementation_List(null);
  var length$ = $.get$length(haystack);
  var patternLength = needle.length;
  for (var startIndex = 0; true;) {
    var position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    var endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.Vector$copy = function(other) {
  return new $.Vector(other.get$x(), other.get$y());
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.Collision$_construct = function(pool) {
  var t1 = $.DistanceInput$();
  t1 = new $.Collision(pool, $.SimplexCache$(), t1, $.DistanceOutput$(), $.EdgeResults$(), $.EdgeResults$(), $.ListImplementation_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.ListImplementation_List(2), $.ListImplementation_List(2));
  t1.Collision$_construct$1(pool);
  return t1;
};

$.endsWith = function(receiver, other) {
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.ContactFilter$ = function() {
  return new $.ContactFilter();
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.StopwatchImplementation$ = function() {
  return new $.StopwatchImplementation(null, null);
};

$.Velocity$ = function() {
  var t1 = new $.Velocity(null, null);
  t1.Velocity$0();
  return t1;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$.HttpRequest_HttpRequest = function() {
  return $._HttpRequestFactoryProvider_createHttpRequest();
};

$.Pair$ = function() {
  return new $.Pair(null, null);
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$.StringBuffer_StringBuffer = function(content$) {
  return $.StringBufferImpl$(content$);
};

$.getRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  var t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
return document.createElement(tag)
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  var end = start + length$;
  if (end > a.length)
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$._TextTrackListEventsImpl$ = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$._fillStatics = function(context) {
  $globals = context.isolateStatics;
  $static_init();
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DivElement_DivElement = function() {
  return $._Elements_createDivElement();
};

$.WorldQueryWrapper$ = function() {
  return new $.WorldQueryWrapper(null, null);
};

$.picture = function() {
  $.ctx.drawImage$5($.get$oppa(), $.mul($.add($.fallingBox.get$worldCenter().get$x(), 95), 10), $.add($.fallingBox.get$worldCenter().get$y(), 445), 100, 150);
};

$.Color3$ = function() {
  return new $.Color3(0, 0, 0);
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.Island$ = function() {
  return new $.Island(null, null, null, null, null, null, null, null, null, null, null, null, null, $.ContactSolver$(), $.Vector$(0, 0), $.ContactImpulse$());
};

$.StringImplementation__toJsStringArray = function(strings) {
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.StringImplementation__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  var length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (var i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      var string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.DynamicTree$ = function() {
  var t1 = $.ListImplementation_List(4);
  var t2 = $.Vector$(0, 0);
  var t3 = $.AxisAlignedBox$(null, null);
  t3 = new $.DynamicTree(null, 0, null, 0, 0, $.Queue_Queue(), t1, 0, t2, t3, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t3.DynamicTree$0();
  return t3;
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    if (index >= receiver.length)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$.AudioContext_AudioContext = function() {
  return $._AudioContextFactoryProvider_createAudioContext();
};

$._Elements_createDivElement = function() {
  return $._document().$dom_createElement$1('div');
};

$._MediaStreamTrackListEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackListEventsImpl(_ptr);
};

$.toInt = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  var truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$.KeyValuePair$ = function(key, value) {
  return new $.KeyValuePair(key, value);
};

$.ContactConstraintPoint$ = function() {
  return new $.ContactConstraintPoint($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0, 0, 0);
};

$.ContactRegister$ = function() {
  return new $.ContactRegister(null, false);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicFunction = function(name$) {
  var f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  var methods = {};
  var dartMethod = Object.getPrototypeOf($.CTC29)[name$];
  if (!(dartMethod == null))
    $.propertySet(methods, 'Object', dartMethod);
  var bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.print = function(object) {
  if (typeof object === 'string')
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.DistanceJointDef$ = function() {
  var t1 = new $.DistanceJointDef($.Vector$(0, 0), $.Vector$(0, 0), 1, 0, 0, 0, null, null, null, false);
  t1.DistanceJointDef$0();
  return t1;
};

$.Matrix22$ = function(c1, c2) {
  var t1 = new $.Matrix22(null, null);
  t1.Matrix22$2(c1, c2);
  return t1;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.addAll = function(receiver, collection) {
  if (!$.isJsArray(receiver))
    return receiver.addAll$1(collection);
  var iterator = $.iterator(collection);
  for (; iterator.hasNext$0() === true;)
    $.add$1(receiver, iterator.next$0());
};

$.sort = function(receiver, compare) {
  if (!$.isJsArray(receiver))
    return receiver.sort$1(compare);
  $.checkMutable(receiver, 'sort');
  $.DualPivotQuicksort_sort(receiver, compare);
};

$.DistanceProxy$ = function() {
  var t1 = new $.DistanceProxy($.ListImplementation_List(8), 0, 0);
  t1.DistanceProxy$0();
  return t1;
};

$.DualPivotQuicksort_sort = function(a, compare) {
  $.DualPivotQuicksort__doSort(a, 0, $.sub($.get$length(a), 1), compare);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.isNegative(b) === true || $.isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (var i = 0; i < $._dynamicMetadata0().length; ++i) {
      var entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  var proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$.index = function(a, index) {
  if (typeof a == "string" || a.constructor === Array) {
    var key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.ContactID$ = function() {
  return new $.ContactID($.Features$());
};

$._DOMWindowCrossFrameImpl__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrameImpl$(w);
};

$._MutationObserverFactoryProvider_createMutationObserver = function(callback) {
  callback = $.convertDartClosureToJS(callback, 2);
    var constructor =
        window.MutationObserver || window.WebKitMutationObserver ||
        window.MozMutationObserver;
    return new constructor(callback);
  
};

$.query = function(selector) {
  return $._document().query$1(selector);
};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.StackOverflowException$ = function() {
  return new $.StackOverflowException();
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.NoSuchMethodError$ = function(_receiver, _functionName, _arguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _functionName, _arguments, existingArgumentNames);
};

$.FixtureDef$ = function() {
  var t1 = new $.FixtureDef(null, null, 0.2, 0, 0, false, $.Filter$());
  t1.FixtureDef$0();
  return t1;
};

$.TimeOfImpactOutput$ = function() {
  return new $.TimeOfImpactOutput(0, 0);
};

$.Simplex$ = function() {
  var t1 = $.SimplexVertex$();
  var t2 = $.SimplexVertex$();
  var t3 = $.SimplexVertex$();
  var t4 = $.ListImplementation_List(3);
  var t5 = $.Vector$(0, 0);
  var t6 = $.Vector$(0, 0);
  t6 = new $.Simplex(t1, t2, t3, t4, 0, t5, $.Vector$(0, 0), t6, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t6.Simplex$0();
  return t6;
};

$.BodyDef$ = function() {
  return new $.BodyDef(0, 0, null, $.Vector$(0, 0), $.Vector$(0, 0), 0, false, null, false, true, 0, 0, true, true);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.Expect__fail = function(message) {
  throw $.$$throw($.ExpectException$(message));
};

$.document = function() {
return document;
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$._FileWriterEventsImpl$ = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$._HttpRequestUploadEventsImpl$ = function(_ptr) {
  return new $._HttpRequestUploadEventsImpl(_ptr);
};

$.Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Transform_mulToOut = function(transform, vector, out) {
  var tempY = $.add($.add(transform.get$position().get$y(), $.mul(transform.get$rotation().get$col1().get$y(), vector.get$x())), $.mul(transform.get$rotation().get$col2().get$y(), vector.get$y()));
  out.set$x($.add($.add(transform.get$position().get$x(), $.mul(transform.get$rotation().get$col1().get$x(), vector.get$x())), $.mul(transform.get$rotation().get$col2().get$x(), vector.get$y())));
  out.set$y(tempY);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.setRange$3 = function(receiver, start, length$, from) {
  if ($.isJsArray(receiver))
    return $.setRange$4(receiver, start, length$, from, 0);
  return receiver.setRange$3(start, length$, from);
};

$.startRootIsolate = function(entry) {
  var t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  var rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $._fillStatics(rootContext);
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._AudioContextEventsImpl$ = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$._completeMeasurementFutures = function() {
  var t1 = $._pendingRequests;
  if (!(t1 == null))
    for (t1 = $.iterator(t1); t1.hasNext$0() === true;) {
      var request = t1.next$0();
      try {
        var t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        var e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  var completedRequests = $._pendingRequests;
  var readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.iterator(completedRequests); t1.hasNext$0() === true;) {
      t2 = t1.next$0();
      var t3 = t2.get$exception() === true;
      var t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.iterator(readyMeasurementFrameCallbacks); t1.hasNext$0() === true;)
      t1.next$0().call$0();
};

$.MathBox_distanceSquared = function(v1, v2) {
  var dx = $.sub(v1.x, v2.x);
  var dy = $.sub(v1.y, v2.y);
  return $.add($.mul(dx, dx), $.mul(dy, dy));
};

$.SeparationFunction$ = function() {
  var t1 = $.DistanceProxy$();
  var t2 = $.DistanceProxy$();
  var t3 = $.Vector$(0, 0);
  var t4 = $.Vector$(0, 0);
  var t5 = $.Sweep$();
  var t6 = $.Sweep$();
  var t7 = $.Vector$(0, 0);
  var t8 = $.Vector$(0, 0);
  var t9 = $.Vector$(0, 0);
  var t10 = $.Vector$(0, 0);
  var t11 = $.Vector$(0, 0);
  var t12 = $.Vector$(0, 0);
  var t13 = $.Vector$(0, 0);
  var t14 = $.Vector$(0, 0);
  var t15 = $.Vector$(0, 0);
  var t16 = $.Vector$(0, 0);
  var t17 = $.Transform$();
  var t18 = $.Transform$();
  return new $.SeparationFunction(t1, t2, 0, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, $.Vector$(0, 0), $.Vector$(0, 0), t16, t17, t18);
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$._isJavaScriptSimpleObject = function(value) {
  return Object.getPrototypeOf(value) === Object.prototype;
};

$.jsHasOwnProperty = function(jsObject, property) {
  return jsObject.hasOwnProperty(property);
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.Completer_Completer = function() {
  return $.CompleterImpl$();
};

$.Vector_maxToOut = function(a, b, out) {
  out.x = $.gtB(a.x, b.x) ? a.x : b.x;
  out.y = $.gtB(a.y, b.y) ? a.y : b.y;
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.TimeOfImpact$_construct = function(argPool) {
  var t1 = new $.TimeOfImpact($.SimplexCache$(), $.DistanceInput$(), $.Transform$(), $.Transform$(), $.DistanceOutput$(), $.SeparationFunction$(), $.ListImplementation_List(2), $.Sweep$(), $.Sweep$(), argPool);
  t1.TimeOfImpact$_construct$1(argPool);
  return t1;
};

$.EdgeResults$ = function() {
  return new $.EdgeResults(0, 0);
};

$.FutureImpl_FutureImpl$immediate = function(value) {
  var res = $.FutureImpl$();
  res._setValue$1(value);
  return res;
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.constructorNameFallback = function(object) {
  if (object == null)
    return 'Null';
  var constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    var name$ = constructor$.name;
    if (typeof name$ === 'string')
      var t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  var string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.PolygonAndCircleContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.PolygonAndCircleContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.AxisAlignedBox_testOverlap = function(a, b) {
  return !($.gtB(b.get$lowerBound().get$x(), a.get$upperBound().get$x()) || $.gtB(b.get$lowerBound().get$y(), a.get$upperBound().get$y()) || $.gtB(a.get$lowerBound().get$x(), b.get$upperBound().get$x()) || $.gtB(a.get$lowerBound().get$y(), b.get$upperBound().get$y()));
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.JointEdge$ = function() {
  return new $.JointEdge(null, null, null, null);
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (from === '')
    if (receiver === '')
      return to;
    else {
      var result = $.StringBuffer_StringBuffer('');
      var length$ = receiver.length;
      $.add$1(result, to);
      for (var i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC17, true), "\\$&"), false, false), true), to);
};

$.DualPivotQuicksort__dualPivotQuicksort = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $.DualPivotQuicksort__dualPivotQuicksort$bailout(1, a, left, right, compare, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  var index1 = left + sixth;
  var index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  var index3 = $.tdiv(left + right, 2);
  var index2 = index3 - sixth;
  var index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  var t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  var el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  var el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  var el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  var el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  var el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    var t0 = el1;
    el1 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el3;
    el3 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el2;
    el2 = el5;
    el5 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left !== (left | 0))
    throw $.iae(left);
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  var t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right !== (right | 0))
    throw $.iae(right);
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  var less = left + 1;
  var great = right - 1;
  var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (var k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      var ak = a[k];
      var comp = compare.call$2(ak, el2);
      if (typeof comp !== 'number')
        return $.DualPivotQuicksort__dualPivotQuicksort$bailout(2, a, less, k, compare, left, right, great, index1, index5, el2, pivots_are_equal, ak, comp, el4);
      if (comp === 0)
        continue;
      if (comp < 0) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (var less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            var great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  t2 = a.length;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  var t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $.DualPivotQuicksort__doSort(a, left, less - 2, compare);
  $.DualPivotQuicksort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less !== (less | 0))
        throw $.iae(less);
      if (less < 0 || less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great !== (great | 0))
        throw $.iae(great);
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
    $.DualPivotQuicksort__doSort(a, less, great, compare);
  } else
    $.DualPivotQuicksort__doSort(a, less, great, compare);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._DOMApplicationCacheEventsImpl$ = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.Vector_minToOut = function(a, b, out) {
  out.x = $.ltB(a.x, b.x) ? a.x : b.x;
  out.y = $.ltB(a.y, b.y) ? a.y : b.y;
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._measurementScheduler == null)
    $._measurementScheduler = $._MeasurementScheduler__MeasurementScheduler$best($._completeMeasurementFutures);
  $._measurementScheduler.maybeSchedule$0();
};

$.debug = function() {
  if ($.ball1.get$active() === true && $.gtB($.ball1.get$position().get$y(), 1)) {
    $.worlds.destroyBody$1($.ball1);
    $.ball1.set$active(false);
  }
  if ($.ball2.get$active() === true && $.gtB($.ball2.get$position().get$y(), 1)) {
    $.worlds.destroyBody$1($.ball2);
    $.ball2.set$active(false);
  }
  if ($.ball3.get$active() === true && $.gtB($.ball3.get$position().get$y(), 1)) {
    $.worlds.destroyBody$1($.ball3);
    $.ball3.set$active(false);
  }
  if ($.ball1.get$active() !== true && $.ball2.get$active() !== true && $.ball3.get$active() !== true)
    $.query('body').set$innerHTML('<div class="game_over">Winner!!!</div>');
};

$.ContactSolver$ = function() {
  var t1 = new $.ContactSolver($.ListImplementation_List(256), null, $.WorldManifold$(), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.PositionSolverManifold$(), $.Vector$(0, 0), $.Vector$(0, 0));
  t1.ContactSolver$0();
  return t1;
};

$.propertySet = function(object, property, value) {
  object[property] = value;
};

$.Future_Future$immediate = function(value) {
  return $.FutureImpl_FutureImpl$immediate(value);
};

$.contains$1 = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$1(other);
  return $.contains$2(receiver, other, 0);
};

$._EventSourceEventsImpl$ = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$.ContactConstraint$ = function() {
  var t1 = new $.ContactConstraint($.ListImplementation_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Matrix22$(null, null), $.Matrix22$(null, null), null, null, null, null, null, null, 0, null);
  t1.ContactConstraint$0();
  return t1;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.ExpectException$ = function(message) {
  return new $.ExpectException(message);
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1 = other.get$pattern();
  var t2 = other.get$multiLine();
  var re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  $.regExpAttachGlobalNative(re);
  return re;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.last$0();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.DefaultWorldPool$ = function() {
  var t1 = new $.DefaultWorldPool(null, null, null);
  t1.DefaultWorldPool$0();
  return t1;
};

$._EventsImpl$ = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$._IDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$.CanvasViewportTransform$ = function(_extents, _center) {
  var t1 = new $.CanvasViewportTransform(null, $.Vector$copy(_extents), 20, $.Vector$copy(_center));
  t1.CanvasViewportTransform$2(_extents, _center);
  return t1;
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$._MediaStreamTrackEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackEventsImpl(_ptr);
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$.TimeOfImpactSolverManifold$ = function() {
  return new $.TimeOfImpactSolverManifold($.Vector$(0, 0), $.Vector$(0, 0), 0, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$._FilteredElementList$ = function(node) {
  return new $._FilteredElementList(node, node.get$nodes());
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !($.indexOf$2(receiver, other, startIndex) === -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).hasNext$0();
};

$.ObjectNotClosureException$ = function() {
  return new $.ObjectNotClosureException();
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$.contains = function(userAgent, name$) {
  return userAgent.indexOf(name$) !== -1;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global)
    $.add$1(sb, 'g');
  try {
    return new RegExp(pattern, $.toString(sb));
  } catch (exception) {
    var t1 = $.unwrapException(exception);
    var e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.Sweep$ = function() {
  return new $.Sweep($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0);
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$.MassData$ = function() {
  return new $.MassData(0, $.Vector$(0, 0), 0);
};

$.CanvasDraw$ = function(viewport, ctx) {
  var t1 = new $.CanvasDraw(ctx, 1, viewport);
  t1.CanvasDraw$2(viewport, ctx);
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.MutationObserver_MutationObserver = function(callback) {
  return $._MutationObserverFactoryProvider_createMutationObserver(callback);
};

$.Collision_clipSegmentToLine = function(vOut, vIn, norm, offset) {
  var t1 = $.index(vIn, 0).get$v();
  var distance0 = $.sub($.add($.mul(norm.x, t1.get$x()), $.mul(norm.y, t1.get$y())), offset);
  var t2 = $.index(vIn, 1).get$v();
  var distance1 = $.sub($.add($.mul(norm.x, t2.get$x()), $.mul(norm.y, t2.get$y())), offset);
  if ($.leB(distance0, 0)) {
    if (0 >= vOut.length)
      throw $.ioore(0);
    vOut[0].setFrom$1($.index(vIn, 0));
    var numOut = 1;
  } else
    numOut = 0;
  if ($.leB(distance1, 0)) {
    var numOut0 = numOut + 1;
    if (numOut >= vOut.length)
      throw $.ioore(numOut);
    vOut[numOut].setFrom$1($.index(vIn, 1));
    numOut = numOut0;
  }
  if ($.ltB($.mul(distance0, distance1), 0)) {
    var interp = $.div(distance0, $.sub(distance0, distance1));
    if (numOut >= vOut.length)
      throw $.ioore(numOut);
    vOut[numOut].get$v().setFrom$1($.index(vIn, 1).get$v()).subLocal$1($.index(vIn, 0).get$v()).mulLocal$1(interp).addLocal$1($.index(vIn, 0).get$v());
    var vin = $.gtB(distance0, 0) ? $.index(vIn, 0) : $.index(vIn, 1);
    vOut[numOut].get$id().setFrom$1(vin.get$id());
    ++numOut;
  }
  return numOut;
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$._IDBDatabaseEventsImpl$ = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$.compareTo = function(a, b) {
  if ($.checkNumbers(a, b))
    if ($.ltB(a, b))
      return -1;
    else if ($.gtB(a, b))
      return 1;
    else if ($.eqB(a, b)) {
      if ($.eqB(a, 0)) {
        var aIsNegative = $.isNegative(a);
        if ($.eqB(aIsNegative, $.isNegative(b)))
          return 0;
        if (aIsNegative === true)
          return -1;
        return 1;
      }
      return 0;
    } else if ($.isNaN(a) === true) {
      if ($.isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  else if (typeof a === 'string') {
    if (!(typeof b === 'string'))
      throw $.$$throw($.ArgumentError$(b));
    if (a == b)
      var t1 = 0;
    else
      t1 = a < b ? -1 : 1;
    return t1;
  } else
    return a.compareTo$1(b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.DistanceJoint$ = function(def) {
  var t1 = def.get$type();
  var t2 = def.get$bodyA();
  var t3 = def.get$bodyB();
  var t4 = def.get$collideConnected();
  var t5 = def.get$userData();
  var t6 = $.Vector$(0, 0);
  var t7 = $.Vector$(0, 0);
  var t8 = $.JointEdge$();
  var t9 = $.JointEdge$();
  var t10 = $.Vector$copy(def.get$localAnchorA());
  var t11 = $.Vector$copy(def.get$localAnchorB());
  var t12 = $.get$length(def);
  return new $.DistanceJoint(t10, t11, $.Vector$(0, 0), 0, null, t12, def.get$frequencyHz(), def.get$dampingRatio(), 0, 0, t1, null, null, t8, t9, t2, t3, false, t4, t5, t6, t7, null, null, null, null);
};

$._MeasurementRequest$ = function(computeValue, completer) {
  return new $._MeasurementRequest(computeValue, completer, null, false);
};

$._TextTrackCueEventsImpl$ = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.UnsupportedOperationException$ = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$._LocalWindowEventsImpl$ = function(_ptr) {
  return new $._LocalWindowEventsImpl(_ptr);
};

$.Filter$ = function() {
  return new $.Filter(0, 0, 0);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$._PostMessageScheduler$ = function(callback) {
  var t1 = new $._PostMessageScheduler('DART-MEASURE', false, callback);
  t1._PostMessageScheduler$1(callback);
  return t1;
};

$._DedicatedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.NoMoreElementsException$ = function() {
  return new $.NoMoreElementsException();
};

$.Primitives_newList = function(length$) {
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$._AbstractWorkerEventsImpl$ = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.HashMapImplementation__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._MediaElementEventsImpl$ = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$._IDBTransactionEventsImpl$ = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$._BodyElementEventsImpl$ = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.ContactManager$ = function(argPool) {
  var t1 = $.ContactFilter$();
  return new $.ContactManager($.BroadPhase$(), null, 0, t1, null, argPool);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.Expect_equals = function(expected, actual, reason) {
  if (expected === actual)
    return;
  var msg = reason == null ? '' : ', \'' + $.S(reason) + '\'';
  $.Expect__fail('Expect.equals(expected: <' + $.S(expected) + '>, actual: <' + $.S(actual) + '>' + msg + ') fails.');
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$.isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.isNaN$0();
};

$.ClipVertex$ = function() {
  return new $.ClipVertex($.Vector$(0, 0), $.ContactID$());
};

$.SimplexCache$ = function() {
  var t1 = new $.SimplexCache(0, 0, $.ListImplementation_List(3), $.ListImplementation_List(3));
  t1.SimplexCache$0();
  return t1;
};

$.ListImplementation__from = function(other) {
  var result = $.ListImplementation_List(null);
  for (var t1 = $.iterator(other); t1.hasNext$0() === true;)
    result.push(t1.next$0());
  return result;
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      var t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, i = srcStart, j = dstStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      var t4 = src[i];
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$._HttpRequestFactoryProvider_createHttpRequest = function() {
return new XMLHttpRequest();
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values = [];
  var copies = [];
  var t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  var t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  var t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  var t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  var copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t1, t2, t3).call$1(value);
  t4.call$0();
  return copy;
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$._WorkerEventsImpl$ = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.isEmpty$0();
};

$.convertDartClosureToJS = function(closure, arity) {
  if (closure == null)
    return;
  var function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.TimeOfImpactSolver$ = function() {
  var t1 = new $.TimeOfImpactSolver($.ListImplementation_List(4), 0, null, $.TimeOfImpactSolverManifold$(), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t1.TimeOfImpactSolver$0();
  return t1;
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.StringImplementation_concatAll = function(strings) {
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), '');
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._InputElementEventsImpl$ = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$.Joint_Joint$create = function(argWorld, def) {
  switch (def.get$type()) {
    case 5:
      throw $.$$throw($.NotImplementedException$(null));
    case 3:
      return $.DistanceJoint$(def);
    case 2:
      throw $.$$throw($.NotImplementedException$(null));
    case 1:
      return $.RevoluteJoint$(def);
    case 8:
      throw $.$$throw($.NotImplementedException$(null));
    case 9:
      return $.FrictionJoint$(def);
    case 7:
      throw $.$$throw($.NotImplementedException$(null));
    case 6:
      throw $.$$throw($.NotImplementedException$(null));
    case 4:
      throw $.$$throw($.NotImplementedException$(null));
    case 10:
      return $.ConstantVolumeJoint$(argWorld, def);
  }
  return;
};

$.Distance$_construct = function() {
  return new $.Distance(0, 0, 20, $.Simplex$(), $.ListImplementation_List(3), $.ListImplementation_List(3), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.Random_Random = function(seed) {
  return $.CTC12;
};

$.LinkedHashMapImplementation$ = function() {
  var t1 = new $.LinkedHashMapImplementation(null, null);
  t1.LinkedHashMapImplementation$0();
  return t1;
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC1));
  return object;
};

$.CompleterImpl$ = function() {
  return new $.CompleterImpl($.FutureImpl$());
};

$.ManifoldPoint$ = function() {
  return new $.ManifoldPoint($.Vector$(0, 0), 0, 0, $.ContactID$());
};

$.TimeOfImpactInput$ = function() {
  return new $.TimeOfImpactInput($.DistanceProxy$(), $.DistanceProxy$(), $.Sweep$(), $.Sweep$(), 0);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$._EventListenerListImpl$ = function(_ptr, _type) {
  return new $._EventListenerListImpl(_ptr, _type);
};

$._Elements_createImageElement = function(src, width, height) {
  var _e = $._document().$dom_createElement$1('img');
  if (!(src == null))
    _e.set$src(src);
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.RevoluteJoint$ = function(def) {
  var t1 = def.get$type();
  var t2 = def.get$bodyA();
  var t3 = def.get$bodyB();
  var t4 = def.get$collideConnected();
  var t5 = def.get$userData();
  var t6 = $.Vector$(0, 0);
  var t7 = $.Vector$(0, 0);
  var t8 = $.JointEdge$();
  var t9 = $.JointEdge$();
  t7 = new $.RevoluteJoint($.Vector$(0, 0), $.Vector$(0, 0), $.Vector3$(0, 0, 0), 0, $.Matrix33$(), null, null, null, null, null, null, null, null, null, t1, null, null, t8, t9, t2, t3, false, t4, t5, t6, t7, null, null, null, null);
  t7.RevoluteJoint$1(def);
  return t7;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.DualPivotQuicksort_insertionSort_ = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $.DualPivotQuicksort_insertionSort_$bailout(1, a, left, right, compare);
  if (typeof right !== 'number')
    return $.DualPivotQuicksort_insertionSort_$bailout(1, a, left, right, compare);
  for (var i = left + 1; i <= right; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    var el = a[i];
    var j = i;
    while (true) {
      if (j > left) {
        var t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        var t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      var j0 = j - 1;
      if (j0 !== (j0 | 0))
        throw $.iae(j0);
      t1 = a.length;
      if (j0 < 0 || j0 >= t1)
        throw $.ioore(j0);
      t2 = a[j0];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t1)
        throw $.ioore(j);
      a[j] = t2;
      j = j0;
    }
    if (j !== (j | 0))
      throw $.iae(j);
    if (j < 0 || j >= a.length)
      throw $.ioore(j);
    a[j] = el;
  }
};

$.MathBox_translateAndScale = function(val, fromMin, fromMax, toMin, toMax) {
  return toMin + (val - fromMin) / (fromMax - fromMin) * (toMax - toMin);
};

$.PolygonContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.PolygonContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.Vector_crossNumAndVectorToOut = function(s, a, out) {
  var tempY = $.mul(s, a.x);
  out.x = $.mul($.neg(s), a.y);
  out.y = tempY;
};

$.index$slow = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.Features$ = function() {
  return new $.Features(0, 0, 0, 0);
};

$.CircleShape$ = function() {
  return new $.CircleShape($.Vector$(0, 0), 0, 0);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0)
      throw $.$$throw($.IndexOutOfRangeException$(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.AxisAlignedBox$ = function(lowerBound, upperBound) {
  var t1 = new $.AxisAlignedBox(lowerBound, upperBound);
  t1.AxisAlignedBox$2(lowerBound, upperBound);
  return t1;
};

$.ContactEdge$ = function() {
  return new $.ContactEdge(null, null, null, null);
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$._HttpRequestEventsImpl$ = function(_ptr) {
  return new $._HttpRequestEventsImpl(_ptr);
};

$.ImageElement_ImageElement = function(src, width, height) {
  var t1 = $ === src;
  if (t1)
    src = null;
  var t2 = $ === width;
  if (t2)
    width = null;
  var t3 = $ === height;
  if (t3)
    height = null;
  if (t1)
    return $._Elements_createImageElement(null, null, null);
  if (t2)
    return $._Elements_createImageElement(src, null, null);
  if (t3)
    return $._Elements_createImageElement(src, width, null);
  return $._Elements_createImageElement(src, width, height);
};

$.IndexOutOfRangeException$ = function(_value) {
  return new $.IndexOutOfRangeException(_value);
};

$.Transform_mulTransToOut = function(T, v, out) {
  var v1x = $.sub(v.get$x(), T.get$position().get$x());
  var v1y = $.sub(v.get$y(), T.get$position().get$y());
  var t1 = T.get$rotation();
  var b = t1.get$col1();
  var b1 = t1.get$col2();
  var tempy = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
  out.set$x($.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y())));
  out.set$y(tempy);
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$._TextTrackEventsImpl$ = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$._BatteryManagerEventsImpl$ = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$._ElementRectImpl$ = function(element) {
  return new $._ElementRectImpl($._SimpleClientRect$(element.get$clientLeft(), element.get$clientTop(), element.get$clientWidth(), element.get$clientHeight()), $._SimpleClientRect$(element.get$offsetLeft(), element.get$offsetTop(), element.get$offsetWidth(), element.get$offsetHeight()), $._SimpleClientRect$(element.get$scrollLeft(), element.get$scrollTop(), element.get$scrollWidth(), element.get$scrollHeight()), element.getBoundingClientRect$0(), element.getClientRects$0());
};

$._WebSocketEventsImpl$ = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._MediaStreamEventsImpl$ = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.IndexOutOfRangeException$(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ioore = function(index) {
  throw $.$$throw($.IndexOutOfRangeException$(index));
};

$.PositionSolverManifold$ = function() {
  return new $.PositionSolverManifold($.Vector$(0, 0), $.Vector$(0, 0), 0, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.hashCode = function(receiver) {
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.hashCode$0();
  var length$ = receiver.length;
  for (var hash = 0, i = 0; i < length$; ++i) {
    var hash0 = 536870911 & hash + receiver.charCodeAt(i);
    var hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator = $.iterator(keyValuePairs);
  var result = $.LinkedHashMapImplementation$();
  for (; iterator.hasNext$0() === true;)
    result.operator$indexSet$2(iterator.next$0(), iterator.next$0());
  return result;
};

$._Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.startsWith = function(receiver, other) {
  $.checkString(other);
  var length$ = other.length;
  if (length$ > receiver.length)
    return false;
  return other == receiver.substring(0, length$);
};

$.displayLives = function() {
  var t1 = $.concat('Lives:', $.toString($.lives));
  $.query('#title').set$innerHTML(t1);
  if ($.ltB($.lives, 1))
    $.query('body').set$innerHTML('<div class="game_over">Game over</div>');
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.Fixture$ = function() {
  return new $.Fixture($.AxisAlignedBox$(null, null), null, null, null, null, null, null, null, $.Filter$(), null, null, $.AxisAlignedBox$(null, null), $.AxisAlignedBox$(null, null));
};

$._MessagePortEventsImpl$ = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$._document = function() {
return document;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, 'Chrome') || $.contains(userAgent, 'DumpRenderTree'))
    return $.typeNameInChrome;
  else if ($.contains(userAgent, 'Firefox'))
    return $.typeNameInFirefox;
  else if ($.contains(userAgent, 'MSIE'))
    return $.typeNameInIE;
  else if ($.contains(userAgent, 'Opera'))
    return $.typeNameInOpera;
  else if ($.contains(userAgent, 'AppleWebKit'))
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.DistanceOutput$ = function() {
  return new $.DistanceOutput($.Vector$(0, 0), $.Vector$(0, 0), null, null);
};

$._ElementEventsImpl$ = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$.World$ = function(gravity, doSleep, argPool) {
  var t1 = new $.World(4, null, null, null, 0, 0, gravity, doSleep, null, null, null, argPool, 0, true, true, $.ListImplementation_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.TimeStep$(), $.Vector$(0, 0), $.Vector$(0, 0), $.WorldQueryWrapper$(), $.TimeOfImpactInput$(), $.TimeOfImpactOutput$(), $.Sweep$(), $.TimeOfImpactSolver$(), $.ListImplementation_List(32), $.Island$(), $.ListImplementation_List(10));
  t1.World$3(gravity, doSleep, argPool);
  return t1;
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.DualPivotQuicksort__doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32))
    $.DualPivotQuicksort_insertionSort_(a, left, right, compare);
  else
    $.DualPivotQuicksort__dualPivotQuicksort(a, left, right, compare);
};

$.ListImplementation_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.PolygonShape$ = function() {
  var t1 = $.ListImplementation_List(8);
  var t2 = $.ListImplementation_List(8);
  t2 = new $.PolygonShape($.Vector$(0, 0), t1, t2, 0, 1, 0.01);
  t2.PolygonShape$0();
  return t2;
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  return receiver.indexOf$1(element);
};

$.PolygonShape$copy = function(other) {
  var t1 = other.radius;
  var t2 = other.vertexCount;
  var t3 = $.ListImplementation_List(8);
  var t4 = $.ListImplementation_List(8);
  t1 = new $.PolygonShape($.Vector$copy(other.centroid), t3, t4, t2, 1, t1);
  t1.PolygonShape$copy$1(other);
  return t1;
};

$.StringBufferImpl$ = function(content$) {
  var t1 = new $.StringBufferImpl(null, null);
  t1.StringBufferImpl$1(content$);
  return t1;
};

$.HashMapImplementation$ = function() {
  var t1 = new $.HashMapImplementation(null, null, null, null, null);
  t1.HashMapImplementation$0();
  return t1;
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.Position$ = function() {
  var t1 = new $.Position(null, null);
  t1.Position$0();
  return t1;
};

$._SharedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$._IDBVersionChangeRequestEventsImpl$ = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$.SimplexVertex$ = function() {
  return new $.SimplexVertex($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0);
};

$._isMutationObserverSupported = function() {
  return !!( window.MutationObserver || window.WebKitMutationObserver);

};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.unwrapException = function(ex) {
  if ("dartException" in ex)
    return ex.dartException;
  var message = ex.message;
  if (ex instanceof TypeError) {
    var type = ex.type;
    var name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NullPointerException$(null, $.CTC1);
    else if ($.eqB(type, 'undefined_method'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NoSuchMethodError$('', name$, [], null);
    var ieErrorCode = ex.number & 0xffff;
    var ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC1);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          var t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], null);
      }
    return $.ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowException$();
    return $.ArgumentError$('');
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowException$();
  return ex;
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (var i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.DualPivotQuicksort__dualPivotQuicksort$bailout = function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      var a = env0;
      var left = env1;
      var right = env2;
      var compare = env3;
      break;
    case 2:
      a = env0;
      less = env1;
      k = env2;
      compare = env3;
      left = env4;
      right = env5;
      great = env6;
      index1 = env7;
      index5 = env8;
      el2 = env9;
      pivots_are_equal = env10;
      ak = env11;
      comp = env12;
      el4 = env13;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
      if (typeof sixth !== 'number')
        throw $.iae(sixth);
      var index1 = left + sixth;
      var index5 = $.sub(right, sixth);
      if (typeof right !== 'number')
        throw $.iae(right);
      var index3 = $.tdiv(left + right, 2);
      var index2 = index3 - sixth;
      var index4 = index3 + sixth;
      var el1 = $.index(a, index1);
      var el2 = $.index(a, index2);
      var el3 = $.index(a, index3);
      var el4 = $.index(a, index4);
      var el5 = $.index(a, index5);
      if ($.gtB(compare.call$2(el1, el2), 0)) {
        var t0 = el1;
        el1 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el1, el3), 0)) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el1, el4), 0)) {
        t0 = el1;
        el1 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el3, el4), 0)) {
        t0 = el3;
        el3 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el2, el5), 0)) {
        t0 = el2;
        el2 = el5;
        el5 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      $.indexSet(a, index1, el1);
      $.indexSet(a, index3, el3);
      $.indexSet(a, index5, el5);
      $.indexSet(a, index2, $.index(a, left));
      $.indexSet(a, index4, $.index(a, right));
      var less = left + 1;
      var great = right - 1;
      var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
    case 2:
      if (state0 === 2 || state0 === 0 && pivots_are_equal)
        switch (state0) {
          case 0:
            var k = less;
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!(k <= great))
                      break L0;
                  case 2:
                    c$0: {
                      switch (state0) {
                        case 0:
                          var ak = $.index(a, k);
                          var comp = compare.call$2(ak, el2);
                        case 2:
                          state0 = 0;
                          if ($.eqB(comp, 0))
                            break c$0;
                          if ($.ltB(comp, 0)) {
                            if (!(k === less)) {
                              $.indexSet(a, k, $.index(a, less));
                              $.indexSet(a, less, ak);
                            }
                            ++less;
                          } else
                            for (var less0 = less + 1; true;) {
                              comp = compare.call$2($.index(a, great), el2);
                              if ($.gtB(comp, 0)) {
                                --great;
                                continue;
                              } else if ($.ltB(comp, 0)) {
                                $.indexSet(a, k, $.index(a, less));
                                $.indexSet(a, less, $.index(a, great));
                                var great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                less = less0;
                                break;
                              } else {
                                $.indexSet(a, k, $.index(a, great));
                                great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                break;
                              }
                            }
                      }
                    }
                    ++k;
                }
        }
      else
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.ltB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.gtB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.gtB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
      var t1 = less - 1;
      $.indexSet(a, left, $.index(a, t1));
      $.indexSet(a, t1, el2);
      $.indexSet(a, right, $.index(a, great + 1));
      $.indexSet(a, great + 1, el4);
      $.DualPivotQuicksort__doSort(a, left, less - 2, compare);
      $.DualPivotQuicksort__doSort(a, great + 2, right, compare);
      if (pivots_are_equal)
        return;
      if (less < index1 && $.gtB(great, index5)) {
        for (; $.eqB(compare.call$2($.index(a, less), el2), 0);)
          ++less;
        for (; $.eqB(compare.call$2($.index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.eqB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.eqB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.eqB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
        $.DualPivotQuicksort__doSort(a, less, great, compare);
      } else
        $.DualPivotQuicksort__doSort(a, less, great, compare);
  }
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  if ($.isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC1);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  var values = $.ListImplementation_List($.get$length(futures));
  for (var i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    var future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(result, i, completer, t1, values));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (var t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.DualPivotQuicksort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  for (var i = left + 1; $.leB(i, right); ++i) {
    var el = $.index(a, i);
    var j = i;
    while (true) {
      if (!(j > left && $.gtB(compare.call$2($.index(a, j - 1), el), 0)))
        break;
      var j0 = j - 1;
      $.indexSet(a, j, $.index(a, j0));
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$.StringImplementation__toJsStringArray$bailout = function(state0, strings) {
  $.checkNull(strings);
  var length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (var i = 0; $.ltB(i, length$); ++i) {
      var string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$._completeMeasurementFutures.call$0 = $._completeMeasurementFutures;
$._completeMeasurementFutures.$name = "_completeMeasurementFutures";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC1 = Isolate.makeConstantList([]);
$.CTC30 = 'childList';
$.CTC31 = 'attributes';
$.CTC32 = 'characterData';
$.CTC33 = 'subtree';
$.CTC34 = 'attributeOldValue';
$.CTC35 = 'characterDataOldValue';
$.CTC36 = Isolate.makeConstantList(['childList', 'attributes', 'characterData', 'subtree', 'attributeOldValue', 'characterDataOldValue']);
$.CTC37 = true;
$.CTC18 = new Isolate.$isolateProperties.ConstantMap(6, {'childList': true, 'attributes': true, 'characterData': true, 'subtree': true, 'attributeOldValue': true, 'characterDataOldValue': true}, Isolate.$isolateProperties.CTC36);
$.CTC38 = '';
$.CTC25 = new Isolate.$isolateProperties.UnsupportedOperationException('');
$.CTC39 = 'structured clone of ArrayBufferView';
$.CTC10 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBufferView');
$.CTC40 = 'Invalid list length';
$.CTC28 = new Isolate.$isolateProperties.ArgumentError('Invalid list length');
$.CTC41 = null;
$.CTC26 = new Isolate.$isolateProperties.NotImplementedException(null);
$.CTC13 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC42 = 'TODO(jacobr): should we impl?';
$.CTC27 = new Isolate.$isolateProperties.UnsupportedOperationException('TODO(jacobr): should we impl?');
$.CTC43 = 'structured clone of ImageData';
$.CTC8 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ImageData');
$.CTC44 = 'structured clone of other type';
$.CTC11 = new Isolate.$isolateProperties.NotImplementedException('structured clone of other type');
$.CTC29 = new Isolate.$isolateProperties.Object();
$.CTC45 = '^#[_a-zA-Z]\\w*$';
$.CTC46 = false;
$.CTC16 = new Isolate.$isolateProperties.JSSyntaxRegExp('^#[_a-zA-Z]\\w*$', false, false);
$.CTC47 = 'Cannot setRange on immutable List.';
$.CTC22 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot setRange on immutable List.');
$.CTC48 = 0;
$.CTC49 = new Isolate.$isolateProperties._SimpleClientRect(0, 0, 0, 0);
$.CTC21 = new Isolate.$isolateProperties.EmptyElementRect(Isolate.$isolateProperties.CTC49, Isolate.$isolateProperties.CTC49, Isolate.$isolateProperties.CTC49, Isolate.$isolateProperties.CTC49, Isolate.$isolateProperties.CTC1);
$.CTC50 = '[-[\\]{}()*+?.,\\\\^$|#\\s]';
$.CTC17 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.CTC51 = 'IDBKey containing Date';
$.CTC15 = new Isolate.$isolateProperties.NotImplementedException('IDBKey containing Date');
$.CTC52 = 'structured clone of File';
$.CTC6 = new Isolate.$isolateProperties.NotImplementedException('structured clone of File');
$.CTC53 = 'Incorrect number or type of arguments';
$.CTC20 = new Isolate.$isolateProperties.ExceptionImplementation('Incorrect number or type of arguments');
$.CTC54 = 'structured clone of RegExp';
$.CTC5 = new Isolate.$isolateProperties.NotImplementedException('structured clone of RegExp');
$.CTC55 = 'Cannot removeLast on immutable List.';
$.CTC3 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeLast on immutable List.');
$.CTC56 = 'structured clone of Date';
$.CTC4 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Date');
$.CTC57 = 'Cannot removeRange on immutable List.';
$.CTC24 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeRange on immutable List.');
$.CTC58 = 'structured clone of ArrayBuffer';
$.CTC9 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBuffer');
$.CTC12 = new Isolate.$isolateProperties._Random();
$.CTC59 = 'Cannot sort immutable List.';
$.CTC23 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot sort immutable List.');
$.CTC19 = new Isolate.$isolateProperties.IllegalAccessException();
$.CTC60 = 'structured clone of Blob';
$.CTC7 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Blob');
$.CTC0 = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC1);
$.CTC2 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC61 = 'Cannot add to immutable List.';
$.CTC = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot add to immutable List.');
$.CTC14 = new Isolate.$isolateProperties.EmptyQueueException();
$._pendingRequests = null;
$.JointType_DISTANCE = 3;
$.Settings_ANGULAR_SLOP = 0.03490658503988659;
$.JointType_MOUSE = 5;
$.HashMapImplementation__INITIAL_CAPACITY = 8;
$.TimeOfImpact_toiCalls = null;
$.bods = null;
$.ShapeType_CIRCLE = 0;
$.JointType_UNKNOWN = 0;
$.TimeOfImpactOutputState_UNKNOWN = 0;
$.TimeOfImpactOutputState_TOUCHING = 3;
$.viewport = null;
$.ball3 = null;
$.Settings_MAX_ROTATION = 1.5707963267948966;
$.JointType_CONSTANT_VOLUME = 10;
$.Settings_MAX_TRANSLATION_SQUARED = 4;
$.JointType_FRICTION = 9;
$.Settings_LINEAR_SLEEP_TOLERANCE = 0.01;
$.Settings_MAX_MANIFOLD_POINTS = 2;
$.Body_AWAKE_FLAG = 2;
$.ball1 = null;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.DynamicTree__DEFAULT_NODE_ADDITION = 6;
$.Settings_MAX_ANGULAR_CORRECTION = 0.13962634015954636;
$.Settings_TIME_TO_SLEEP = 0.5;
$.canvas = null;
$.BroadPhase_PAIR_CAPACITY = 16;
$.Settings_MAX_ROTATION_SQUARED = 2.4674011002723395;
$.DebugDraw_e_jointBit = 2;
$.JointType_REVOLUTE = 1;
$.DebugDraw_e_aabbBit = 4;
$.Settings_CONTACT_BAUMGARTE = 0.2;
$.MathBox_TWO_PI = 6.283185307179586;
$._getTypeNameOf = null;
$.GRAVITY = -10;
$.Settings_MAX_INTEGER = 2147483647;
$.TIME_STEP = 0.1;
$._cachedBrowserPrefix = null;
$.Settings_TREE_REBALANCE_STEPS = 4;
$.KeyName_UP = 'Up';
$.ball2 = null;
$._TimerFactory__factory = null;
$.KeyName_LEFT = 'Left';
$.elapsedUs = null;
$._measurementScheduler = null;
$.JointType_WELD = 8;
$.TimeOfImpact_toiMaxRootIters = null;
$.ManifoldType_FACE_B = 2;
$.SeparationType_FACE_B = 2;
$.World_NEW_FIXTURE = 1;
$.World_LOCKED = 2;
$.Settings_MAX_LINEAR_CORRECTION = 0.2;
$.KeyName_RIGHT = 'Right';
$.fallingBox = null;
$.Body_BULLET_FLAG = 8;
$._ReceivePortImpl__nextFreeId = 1;
$.POSITION_ITERATIONS = 10;
$.debugDraw = null;
$.BodyType_KINEMATIC = 1;
$.LimitState_AT_UPPER = 2;
$.worlds = null;
$.Settings_LINEAR_SLOP = 0.005;
$.Settings_EPSILON = 1.192e-7;
$.ShapeType_TYPE_COUNT = 2;
$.World_CLEAR_FORCES = 4;
$.JointType_PRISMATIC = 2;
$.Contact_TOUCHING_FLAG = 2;
$.Settings_ANGULAR_SLEEP_TOLERANCE = 0.03490658503988659;
$.BodyType_DYNAMIC = 2;
$.DebugDraw_e_lineDrawingBit = 64;
$.DynamicTree_MAX_STACK_SIZE = 64;
$.LimitState_AT_LOWER = 1;
$.ContactSolver_INITIAL_NUM_CONSTRAINTS = 256;
$.DebugDraw_e_centerOfMassBit = 16;
$.SeparationType_POINTS = 0;
$.Settings_BOUNDING_BOX_MULTIPLIER = 2;
$.PI = 3.141592653589793;
$.VELOCITY_ITERATIONS = 10;
$.Contact_FILTER_FLAG = 8;
$.CanvasViewportTransform_DEFAULT_DRAWING_SCALE = 20;
$.Contact_BULLET_HIT_FLAG = 16;
$.ShapeType_POLYGON = 1;
$.Settings_BOUNDING_BOX_EXTENSION = 0.1;
$.TimeOfImpactOutputState_FAILED = 1;
$.CANVAS_HEIGHT = 600;
$.lives = 5;
$.ContactSolver_K_MAX_CONDITION_NUMBER = 100;
$.Settings_CONTACT_STACK_INIT_SIZE = 10;
$.TimeOfImpactOutputState_OVERLAPPED = 2;
$.TimeOfImpact_toiRootIters = null;
$.TimeOfImpactOutputState_SEPARATED = 4;
$.Body_ACTIVE_FLAG = 32;
$.world = null;
$.Demo__VIEWPORT_SCALE = 10;
$.HashMapImplementation__DELETED_KEY = Isolate.$isolateProperties.CTC13;
$.jumpcount = 0;
$.DebugDraw_e_pairBit = 8;
$.TimeOfImpact_toiMaxIters = null;
$.Settings_MAX_TRANSLATION = 2;
$.Settings_BIG_NUMBER = 99999999999999;
$.Primitives_hashCodeSeed = 0;
$.DualPivotQuicksort__INSERTION_SORT_THRESHOLD = 32;
$.LimitState_EQUAL = 3;
$.CANVAS_WIDTH = 2000;
$.Contact_ENABLED_FLAG = 4;
$._stopwatch = null;
$.Settings_POLYGON_RADIUS = 0.01;
$._pendingMeasurementFrameCallbacks = null;
$.DebugDraw_e_shapeBit = 1;
$.Body_TO_I_FLAG = 64;
$.JointType_LINE = 7;
$.view = null;
$.LimitState_INACTIVE = 0;
$.Settings_SMALL_NUMBER = 1e-12;
$.TimeOfImpact_MAX_ITERATIONS = 1000;
$.BodyType_STATIC = 0;
$.Body_AUTO_SLEEP_FLAG = 4;
$.Settings_VELOCITY_THRESHOLD = 1;
$.JointType_PULLEY = 4;
$.Body_FIXED_ROTATION_FLAG = 16;
$.ManifoldType_CIRCLES = 0;
$.ManifoldType_FACE_A = 1;
$.SeparationType_FACE_A = 1;
$.JointType_GEAR = 6;
$.Settings_MAX_TIME_OF_IMPACT_CONTACTS = 32;
$.TimeOfImpact_toiIters = null;
$.Body_ISLAND_FLAG = 1;
$.Contact_ISLAND_FLAG = 1;
$.ctx = null;
$.Settings_MAX_POLYGON_VERTICES = 8;
Isolate.$lazy($, 'oppa', 'oppa', 'get$oppa', function() {
  return $.ImageElement_ImageElement('static/opppa.jpg', $, $);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, fields, methods) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], methods);
  }
  for (var method in methods) {
    $.dynamicFunction(method)[cls] = methods[method];
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$_FileImpl: function() { return false; },
 is$Element: function() { return false; },
 is$_ImageDataImpl: function() { return false; },
 is$_BlobImpl: function() { return false; },
 is$_ArrayBufferViewImpl: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$Collection: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$_FileListImpl: function() { return false; },
 is$IDBKeyRange: function() { return false; },
 is$ImageData: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 hashCode$0: function() { return $.hashCodeForNativeObject(this); },
 is$List: function() { return false; },
 is$_ArrayBufferImpl: function() { return false; },
 is$Map: function() { return false; },
 is$File: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$Blob: function() { return false; }
});

$.$defineNativeClass('AbstractWorker', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._AbstractWorkerEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', ["shape?", "type="], {
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAppletElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', ["shape?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', [], {
 is$_ArrayBufferImpl: function() { return true; },
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', [], {
 is$_ArrayBufferViewImpl: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', ["value="], {
});

$.$defineNativeClass('AudioBuffer', ["length?"], {
});

$.$defineNativeClass('AudioBufferSourceNode', ["buffer!"], {
 start$3: function(when, grainOffset, grainDuration) {
  var t1 = $ === grainOffset;
  if (t1)
    grainOffset = null;
  t1 = !t1;
  var t2 = $ === grainDuration;
  if (t2)
    grainDuration = null;
  t2 = !t2;
  if (!!this.start)
    if (t2)
      this.start(when, grainOffset, grainDuration);
    else if (t1)
      this.start(when, grainOffset);
    else
      this.start(when);
  else if (t2)
    this.noteOn(when, grainOffset, grainDuration);
  else if (t1)
    this.noteOn(when, grainOffset);
  else
    this.noteOn(when);
},
 start$1: function(when) {
  return this.start$3(when,$,$)
}
});

$.$defineNativeClass('AudioContext', ["destination?"], {
 get$on: function() {
  return $._AudioContextEventsImpl$(this);
},
 createBufferSource$0: function() {
  return this.createBufferSource();
},
 decodeAudioData$3: function(audioData, successCallback, errorCallback) {
  return this.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('HTMLAudioElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('AudioNode', [], {
 connect$3: function(destination, output, input) {
  return this.connect(destination,output,input);
}
});

$.$defineNativeClass('AudioParam', ["value="], {
});

$.$defineNativeClass('HTMLBRElement', [], {
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', [], {
 get$on: function() {
  return $._BatteryManagerEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BiquadFilterNode', ["type="], {
});

$.$defineNativeClass('Blob', ["type?"], {
 is$_BlobImpl: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', [], {
 get$on: function() {
  return $._BodyElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', ["type=", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitCSSMatrix', ["a="], {
 scale$3: function(scaleX, scaleY, scaleZ) {
  return this.scale(scaleX,scaleY,scaleZ);
},
 get$scale: function() { return new $.BoundClosure1(this, 'scale$3'); },
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSRule', ["type?"], {
});

$.$defineNativeClass('CSSRuleList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSStyleDeclaration', ["length?"], {
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    // Bug #2772, IE9 requires a poke to actually apply the value.
    if (this.setAttribute) {
      this.setAttribute(propertyName, value);
    }
  
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 get$position: function() {
  return this.getPropertyValue$1('position');
},
 set$src: function(value) {
  this.setProperty$3('src', value, '');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
}
});

$.$defineNativeClass('WebKitCSSTransformValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSValueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCanvasElement', ["height=", "width="], {
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasRenderingContext2D', ["fillStyle!"], {
 arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
  return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
},
 beginPath$0: function() {
  return this.beginPath();
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 closePath$0: function() {
  return this.closePath();
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 drawImage$5: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh);
},
 fill$0: function() {
  return this.fill();
},
 lineTo$2: function(x, y) {
  return this.lineTo(x,y);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 rect$4: function(x, y, width, height) {
  return this.rect(x,y,width,height);
},
 scale$2: function(sx, sy) {
  return this.scale(sx,sy);
},
 get$scale: function() { return new $.BoundClosure2(this, 'scale$2'); },
 stroke$0: function() {
  return this.stroke();
},
 setFillColorRgb$4: function(r, g, b, a) {
  this.fillStyle = 'rgba(' + $.S(r) + ', ' + $.S(g) + ', ' + $.S(b) + ', ' + $.S(a) + ')';
},
 setStrokeColorRgb$4: function(r, g, b, a) {
  this.strokeStyle = 'rgba(' + $.S(r) + ', ' + $.S(g) + ', ' + $.S(b) + ', ' + $.S(a) + ')';
}
});

$.$defineNativeClass('CharacterData', ["length?"], {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', ["height?", "left?", "top?", "width?"], {
});

$.$defineNativeClass('ClientRectList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.count$1 = function(arg) {
  return this.count(arg);
};
_ConsoleImpl.get$count = function() { return new $.BoundClosure(this, 'count$1'); };
$.$defineNativeClass('HTMLContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', ["buffer!"], {
 normalize$0: function() { return this.normalize.call$0(); }
});

$.$defineNativeClass('HTMLDListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', [], {
 get$on: function() {
  return $._DOMApplicationCacheEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('MimeTypeArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MimeType', ["type?"], {
});

$.$defineNativeClass('PluginArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Plugin', ["length?"], {
});

$.$defineNativeClass('Selection', ["type?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', ["value="], {
});

$.$defineNativeClass('DOMStringList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMTokenList', ["length?"], {
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', ["type?"], {
});

$.$defineNativeClass('DataTransferItemList', ["length?"], {
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', [], {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('DedicatedWorkerContext', [], {
 get$on: function() {
  return $._DedicatedWorkerContextEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('HTMLDetailsElement', [], {
 open$3: function(arg0, arg1, arg2) { return this.open.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDirectoryElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', [], {
 get$elements: function() {
  if (this._elements == null)
    this._elements = $._FilteredElementList$(this);
  return this._elements;
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 set$innerHTML: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
  {
  $.clear(this.get$nodes());
  var e = $.Element_Element$tag('div');
  e.set$innerHTML(value);
  var nodes = $.ListImplementation_List$from(e.get$nodes());
  $.addAll(this.get$nodes(), nodes);
}
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }

},
 get$rect: function() {
  return $._createMeasurementFuture(new $._DocumentFragmentImpl_rect_anon(), $.Completer_Completer());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$hidden: function() {
  return false;
},
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
},
 set$hidden: function(value) {
  throw $.$$throw($.UnsupportedOperationException$('Hidden can\'t be set for document fragments.'));
},
 get$on: function() {
  return $._ElementEventsImpl$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', ["body?"], {
 get$on: function() {
  return $._DocumentEventsImpl$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.CTC16.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentType', [], {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('Element', ["hidden=", "id?", "innerHTML!", "clientHeight?", "clientLeft?", "clientTop?", "clientWidth?", "offsetHeight?", "offsetLeft?", "offsetTop?", "offsetWidth?", "scrollHeight?", "scrollLeft?", "scrollTop?", "scrollWidth?"], {
 set$elements: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
  {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
}
  } else {
    return Object.prototype.set$elements.call(this, value);
  }

},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$rect: function() {
  return $._createMeasurementFuture(new $._ElementImpl_rect_anon(this), $.Completer_Completer());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._ElementEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
return this.children;
},
 get$$$dom_firstElementChild: function() {
return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
return this.lastElementChild;
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', ["height=", "src!", "type=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntryArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Entry', [], {
 moveTo$4: function(parent, name, successCallback, errorCallback) {
  return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 moveTo$2: function(parent$,name$) {
  return this.moveTo(parent$,name$);
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', [], {
 moveTo$2: function(parent, name) {
  return this.moveTo(parent,name);
},
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', ["message?"], {
});

$.$defineNativeClass('EventException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Event', ["type?"], {
});

$.$defineNativeClass('EventSource', [], {
 get$on: function() {
  return $._EventSourceEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._EventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', ["elements?", "type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('FileException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('File', [], {
 is$_FileImpl: function() { return true; },
 is$File: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('FileList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileListImpl: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('FileReader', [], {
 get$on: function() {
  return $._FileReaderEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriter', ["length?", "position?"], {
 get$on: function() {
  return $._FileWriterEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', ["length?", "position?"], {
});

$.$defineNativeClass('Float32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Float64Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', ["length?"], {
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', ["height?", "src!", "width?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', [], {
 get$on: function() {
  return $._FrameSetElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Gamepad', ["id?"], {
});

$.$defineNativeClass('GamepadList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHRElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', [], {
 get$length: function() {
return this.length;
},
 set$length: function(value) {
this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHeadElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHtmlElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequestException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequest', ["response?", "responseType!"], {
 get$on: function() {
  return $._HttpRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$3: function(method,url,async) {
  return this.open(method,url,async);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 send$0: function() {
  return this.send();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', ["position?"], {
});

$.$defineNativeClass('XMLHttpRequestUpload', [], {
 get$on: function() {
  return $._HttpRequestUploadEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBCursor', [], {
 get$key: function() {
  return $._convertNativeToDart_IDBKey(this.get$_key());
},
 get$_key: function() {
return this.key;
},
 advance$1: function(count) {
  return this.advance(count);
},
 update$1: function(value) {
  return this._update_1$1($._convertDartToNative_SerializedScriptValue(value));
},
 _update_1$1: function(value) {
  return this.update(value);
}
});

$.$defineNativeClass('IDBCursorWithValue', [], {
 get$value: function() {
  return $._convertNativeToDart_IDBAny(this.get$_lib_value());
},
 get$_lib_value: function() {
return this.value;
}
});

$.$defineNativeClass('IDBDatabaseException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabase', [], {
 get$on: function() {
  return $._IDBDatabaseEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBIndex', [], {
 count$1: function(key_OR_range) {
  var t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  var t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC20);
},
 get$count: function() { return new $.BoundClosure3(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBKeyRange', [], {
 is$IDBKeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', [], {
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_SerializedScriptValue(value), key);
  return this._add_2$1($._convertDartToNative_SerializedScriptValue(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
},
 count$1: function(key_OR_range) {
  var t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  var t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC20);
},
 get$count: function() { return new $.BoundClosure4(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBOpenDBRequest', [], {
 get$on: function() {
  return $._IDBOpenDBRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBRequest', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._IDBRequestEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('IDBTransaction', [], {
 get$on: function() {
  return $._IDBTransactionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeRequest', [], {
 get$on: function() {
  return $._IDBVersionChangeRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', ["height=", "src!", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ImageData', ["height?", "width?"], {
 is$_ImageDataImpl: function() { return true; },
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', ["height=", "src!", "width=", "x?", "y?"], {
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', ["height=", "src!", "type=", "value=", "width="], {
 get$on: function() {
  return $._InputElementEventsImpl$(this);
},
 step$1: function(arg0) { return this.step.call$1(arg0); },
 step$3: function(arg0, arg1, arg2) { return this.step.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('JavaScriptAudioNode', [], {
 get$on: function() {
  return $._JavaScriptAudioNodeEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('JavaScriptCallFrame', ["type?"], {
});

$.$defineNativeClass('KeyboardEvent', ["keyIdentifier?"], {
});

$.$defineNativeClass('HTMLKeygenElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', ["type=", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', ["type="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', ["length?"], {
});

$.$defineNativeClass('Location', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('LocalMediaStream', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMWindow', ["navigator?"], {
 _open3$3: function(url, name, options) {
return this.open(url, name, options);
},
 open$3: function(url, name$, options) {
  return $._DOMWindowCrossFrameImpl__createSafe(this._open3$3(url, name$, options));
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !this.requestAnimationFrame; ++i) {
     this.requestAnimationFrame = this[vendors[i] + 'RequestAnimationFrame'];
     this.cancelAnimationFrame =
         this[vendors[i]+'CancelAnimationFrame'] ||
         this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   this.cancelAnimationFrame = function(id) { clearTimeout(id); }

},
 get$on: function() {
  return $._LocalWindowEventsImpl$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.get$_parent());
},
 get$_parent: function() {
return this.parent;
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.get$_top());
},
 get$_top: function() {
return this.top;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = $ === message;
  if (t1)
    message = null;
  t1 = !t1;
  var t2 = $ === messagePorts;
  if (t2)
    messagePorts = null;
  if (t1 && t2) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), targetOrigin);
    return;
  }
  if (t1)
    t1 = typeof messagePorts === 'object' && messagePorts !== null && (messagePorts.constructor === Array || messagePorts.is$List()) || messagePorts == null;
  else
    t1 = false;
  if (t1) {
    this._postMessage_2$3($._convertDartToNative_SerializedScriptValue(message), targetOrigin, messagePorts);
    return;
  }
  throw $.$$throw($.CTC20);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,$)
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 _postMessage_2$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMapElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', ["height=", "width="], {
 start$0: function() {
  return this.start();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', ["src!"], {
 get$on: function() {
  return $._MediaElementEventsImpl$(this);
},
 load$0: function() {
  return this.load();
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaKeyEvent', ["message?"], {
});

$.$defineNativeClass('MediaList', ["length?"], {
});

$.$defineNativeClass('MediaSource', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', [], {
 get$on: function() {
  return $._MediaStreamEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('MediaStreamList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MediaStreamTrack', ["enabled?"], {
 get$on: function() {
  return $._MediaStreamTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', ["length?"], {
 get$on: function() {
  return $._MediaStreamTrackListEventsImpl$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMenuElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageEvent', ["ports?"], {
});

$.$defineNativeClass('MessagePort', [], {
 get$on: function() {
  return $._MessagePortEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
}
});

$.$defineNativeClass('HTMLMetaElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMeterElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', ["x?", "y?"], {
});

$.$defineNativeClass('MutationObserver', [], {
 observe$9: function(target, options, childList, attributes, characterData, subtree, attributeOldValue, characterDataOldValue, attributeFilter) {
  var parsedOptions = {};
  if (!(options == null))
    $.forEach(options, new $._MutationObserverImpl_observe_anon(parsedOptions));
  var t1 = new $._MutationObserverImpl_observe_override(parsedOptions);
  t1.call$2('childList', childList);
  t1.call$2('attributes', attributes);
  t1.call$2('characterData', characterData);
  t1.call$2('subtree', subtree);
  t1.call$2('attributeOldValue', attributeOldValue);
  t1.call$2('characterDataOldValue', characterDataOldValue);
  if (!(attributeFilter == null))
    t1.call$2('attributeFilter', attributeFilter);
  this._call$2(target, parsedOptions);
},
 observe$3$attributes: function(target,options,attributes) {
  return this.observe$9(target,options,null,attributes,null,null,null,null,null)
},
 _call$2: function(target, options) {
  return this.observe(target,options);
}
});

$.$defineNativeClass('MutationRecord', ["type?"], {
});

$.$defineNativeClass('NamedNodeMap', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Navigator', ["userAgent?"], {
});

$.$defineNativeClass('Node', [], {
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode) {
  try {
    var parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_childNodes: function() {
return this.childNodes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeIterator', ["filter?"], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', ["_parent?", "length?"], {
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._parent; t1.hasNext$0() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
return this[index];
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Notification', [], {
 get$on: function() {
  return $._NotificationEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLOListElement', ["type="], {
 start$0: function() { return this.start.call$0(); },
 start$1: function(arg0) { return this.start.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', ["height=", "type=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Oscillator', ["type="], {
 start$1: function(when) {
  return this.start(when);
}
});

$.$defineNativeClass('HTMLOutputElement', ["type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParagraphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', ["type=", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', [], {
 get$on: function() {
  return $._PeerConnection00EventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('PerformanceNavigation', ["type?"], {
});

$.$defineNativeClass('WebKitPoint', ["x=", "y="], {
});

$.$defineNativeClass('PositionError', ["message?"], {
});

$.$defineNativeClass('HTMLPreElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLProgressElement', ["position?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLQuoteElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('RTCPeerConnection', [], {
 get$on: function() {
  return $._RTCPeerConnectionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', ["type="], {
});

$.$defineNativeClass('RadioNodeList', ["value="], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('RangeException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Range', [], {
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', ["left?", "top?"], {
});

$.$defineNativeClass('SQLError', ["message?"], {
});

$.$defineNativeClass('SQLException', ["message?"], {
});

$.$defineNativeClass('SQLResultSetRowList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphDefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphItemElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAngle', ["value="], {
});

$.$defineNativeClass('SVGAnimateColorElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateMotionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateTransformElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCircleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGClipPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', ["type?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCursorElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDefsElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDescElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDocument', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElement', [], {
 get$elements: function() {
  return $._FilteredElementList$(this);
},
 set$elements: function(value) {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
},
 set$innerHTML: function(svg) {
  var container = $.Element_Element$tag('div');
  container.set$innerHTML('<svg version="1.1">' + $.S(svg) + '</svg>');
  this.set$elements($.index(container.get$elements(), 0).get$elements());
},
 get$id: function() {
return this.id;
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElementInstance', [], {
 get$on: function() {
  return $._SVGElementInstanceEventsImpl$(this);
}
});

$.$defineNativeClass('SVGElementInstanceList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGEllipseElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEColorMatrixElement', ["type?", "height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEComponentTransferElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFECompositeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDisplacementMapElement', ["scale?", "height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDistantLightElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDropShadowElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFloodElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncAElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncBElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncRElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEGaussianBlurElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEImageElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeNodeElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMorphologyElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEOffsetElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEPointLightElement', ["x?", "y?", "z?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpecularLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpotLightElement', ["x?", "y?", "z?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETileElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETurbulenceElement', ["type?", "height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFilterElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceFormatElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceNameElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceSrcElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceUriElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGForeignObjectElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphRefElement', ["x=", "y="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGHKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGImageElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLength', ["value="], {
});

$.$defineNativeClass('SVGLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLinearGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMarkerElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMaskElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMatrix', ["a="], {
 scale$1: function(scaleFactor) {
  return this.scale(scaleFactor);
},
 get$scale: function() { return new $.BoundClosure(this, 'scale$1'); }
});

$.$defineNativeClass('SVGMetadataElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMissingGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGNumber', ["value="], {
});

$.$defineNativeClass('SVGNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPathSegArcAbs', ["angle=", "x=", "y="], {
});

$.$defineNativeClass('SVGPathSegArcRel', ["angle=", "x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegLinetoAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', ["x="], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', ["x="], {
});

$.$defineNativeClass('SVGPathSegLinetoRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', ["y="], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', ["y="], {
});

$.$defineNativeClass('SVGPathSegList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', ["x=", "y="], {
});

$.$defineNativeClass('SVGPathSegMovetoRel', ["x=", "y="], {
});

$.$defineNativeClass('SVGPatternElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPoint', ["x=", "y="], {
});

$.$defineNativeClass('SVGPointList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', ["points?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPolylineElement', ["points?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRadialGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRectElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRect', ["height=", "width=", "x=", "y="], {
});

$.$defineNativeClass('SVGSVGElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGScriptElement', ["type="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSetElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStopElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStringList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', ["type="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSwitchElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSymbolElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTRefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPositioningElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTransform', ["angle?", "type?"], {
});

$.$defineNativeClass('SVGTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGUseElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGVKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Screen', ["height?", "width?"], {
});

$.$defineNativeClass('HTMLScriptElement', ["src!", "type="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSelectElement', ["length=", "type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', ["innerHTML!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SharedWorkerContext', [], {
 get$on: function() {
  return $._SharedWorkerContextEventsImpl$(this);
}
});

$.$defineNativeClass('SourceBufferList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', ["src!", "type="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', ["src!"], {
});

$.$defineNativeClass('SpeechGrammarList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionError', ["message?"], {
});

$.$defineNativeClass('SpeechRecognition', [], {
 get$on: function() {
  return $._SpeechRecognitionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
}
});

$.$defineNativeClass('SpeechRecognitionResult', ["length?"], {
});

$.$defineNativeClass('SpeechRecognitionResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('StorageEvent', ["key?"], {
});

$.$defineNativeClass('Storage', [], {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  for (var i = 0; true; ++i) {
    var key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 getKeys$0: function() {
  var keys = [];
  this.forEach$1(new $._StorageImpl_getKeys_anon(keys));
  return keys;
},
 getValues$0: function() {
  var values = [];
  this.forEach$1(new $._StorageImpl_getValues_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 isEmpty$0: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('HTMLStyleElement', ["type="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', ["type?"], {
});

$.$defineNativeClass('StyleSheet', ["type?"], {
});

$.$defineNativeClass('StyleSheetList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', ["type?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextMetrics', ["width?"], {
});

$.$defineNativeClass('TextTrackCue', ["id?", "position?", "text!"], {
 get$on: function() {
  return $._TextTrackCueEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrack', [], {
 get$on: function() {
  return $._TextTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackList', ["length?"], {
 get$on: function() {
  return $._TextTrackListEventsImpl$(this);
},
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TimeRanges', ["length?"], {
 start$1: function(index) {
  return this.start(index);
}
});

$.$defineNativeClass('HTMLTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TouchList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', ["src!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TreeWalker', ["filter?"], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('HTMLUListElement', ["type="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebGLActiveInfo', ["type?"], {
});

$.$defineNativeClass('WebKitAnimationList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure(this, 'filter$1'); },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC23);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC3);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC22);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC24);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitCSSFilterValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitNamedFlow', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', [], {
 get$on: function() {
  return $._WebSocketEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WorkerContext', ["navigator?"], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._WorkerContextEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('Worker', [], {
 get$on: function() {
  return $._WorkerEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerLocation', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', ["userAgent?"], {
});

$.$defineNativeClass('XPathException', ["message?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XSLTProcessor', [], {
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('Worker', [], {
 get$id: function() {
  return this.id;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', [], {
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
}
});

// 356 dynamic classes.
// 423 classes
// 37 !leaf
(function(){
  var v0/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v1/*class(_Uint8ArrayImpl)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v2/*class(_SVGTextContentElementImpl)*/ = [v0/*class(_SVGTextPositioningElementImpl)*/,v0/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v3/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v4/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v5/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v6/*class(_SVGElementImpl)*/ = [v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v7/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v8/*class(_ElementImpl)*/ = [v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v9/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v10/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v11/*class(_CharacterDataImpl)*/ = 'CharacterData|Text|CDATASection|CDATASection|Comment|Text|CDATASection|CDATASection|Comment';
  var v12/*class(_MouseEventImpl)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v14/*class(_NodeImpl)*/ = [v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr'].join('|');
  var v15/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v16/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v17/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGTextPositioningElement', v0/*class(_SVGTextPositioningElementImpl)*/],
    ['SVGTextContentElement', v2/*class(_SVGTextContentElementImpl)*/],
    ['HTMLMediaElement', v7/*class(_MediaElementImpl)*/],
    ['MediaStream', v15/*class(_MediaStreamImpl)*/],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet'],
    ['MouseEvent', v12/*class(_MouseEventImpl)*/],
    ['AbstractWorker', v17/*class(_AbstractWorkerImpl)*/],
    ['Uint8Array', v1/*class(_Uint8ArrayImpl)*/],
    ['ArrayBufferView', [v1/*class(_Uint8ArrayImpl)*/,v1/*class(_Uint8ArrayImpl)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['SVGGradientElement', v3/*class(_SVGGradientElementImpl)*/],
    ['SVGComponentTransferFunctionElement', v4/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v5/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v6/*class(_SVGElementImpl)*/],
    ['Element', v8/*class(_ElementImpl)*/],
    ['HTMLDocument', v9/*class(_DocumentImpl)*/],
    ['DocumentFragment', v10/*class(_DocumentFragmentImpl)*/],
    ['CharacterData', v11/*class(_CharacterDataImpl)*/],
    ['Node', v14/*class(_NodeImpl)*/],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['AudioNode', 'AudioNode|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger'],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['WorkerContext', v13/*class(_WorkerContextImpl)*/],
    ['CSSValueList', 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue'],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['Event', [v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,'Event|WebGLContextEvent|UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['IDBRequest', v16/*class(_IDBRequestImpl)*/],
    ['EventTarget', [v13/*class(_WorkerContextImpl)*/,v14/*class(_NodeImpl)*/,v15/*class(_MediaStreamImpl)*/,v16/*class(_IDBRequestImpl)*/,v17/*class(_AbstractWorkerImpl)*/,v13/*class(_WorkerContextImpl)*/,v14/*class(_NodeImpl)*/,v15/*class(_MediaStreamImpl)*/,v16/*class(_IDBRequestImpl)*/,v17/*class(_AbstractWorkerImpl)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=Gangnam.dart.js.map